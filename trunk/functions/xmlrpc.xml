 <reference id="ref.xmlrpc">
  <title>XMLRPC functions</title>
  <titleabbrev>XMLRPC function</titleabbrev>

  <partintro>
   &warn.experimental;
   <para>
   </para>
  </partintro>


  <refentry id="function.xmlrpc-encode-request">
   <refnamediv>
    <refname>xmlrpc_encode_request</refname>
    <refpurpose>Generates XML for a method request </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>xmlrpc_encode_request</function></funcdef>
      <paramdef>string <parameter>method</parameter></paramdef>
      <paramdef>mixed <parameter>params</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-encode">
   <refnamediv>
    <refname>xmlrpc_encode</refname>
    <refpurpose>Generates XML for a PHP value </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>xmlrpc_encode</function></funcdef>
      <paramdef>mixed <parameter>value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-decode-request">
   <refnamediv>
    <refname>xmlrpc_decode_request</refname>
    <refpurpose>& method [, string encoding]) Decodes XML into native PHP types </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>xmlrpc_decode_request</function></funcdef>
      <paramdef>string <parameter>xml</parameter></paramdef>
      <paramdef>string <parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-decode">
   <refnamediv>
    <refname>xmlrpc_decode</refname>
    <refpurpose>Decodes XML into native PHP types </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>xmlrpc_decode</function></funcdef>
      <paramdef>string <parameter>xml</parameter></paramdef>
      <paramdef>string
       <parameter><optional>encoding</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-server-create">
   <refnamediv>
    <refname>xmlrpc_server_create</refname>
    <refpurpose>Creates an xmlrpc server </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>xmlrpc_server_create</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-server-destroy">
   <refnamediv>
    <refname>xmlrpc_server_destroy</refname>
    <refpurpose>Destroys server resources </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>xmlrpc_server_destroy</function></funcdef>
      <paramdef>resource <parameter>server</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-server-register-method">
   <refnamediv>
    <refname>xmlrpc_server_register_method</refname>
    <refpurpose>Register a PHP function to resource method matching method_name </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xmlrpc_server_register_method</function></funcdef>
      <paramdef>resource <parameter>server</parameter></paramdef>
      <paramdef>string <parameter>method_name</parameter></paramdef>
      <paramdef>string <parameter>function</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-server-register-introspection-callback">
   <refnamediv>
    <refname>xmlrpc_server_register_introspection_callback</refname>
    <refpurpose>Register a PHP function to generate documentation </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xmlrpc_server_register_introspection_callback</function></funcdef>
      <paramdef>resource <parameter>server</parameter></paramdef>
      <paramdef>string <parameter>function</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-server-call-method">
   <refnamediv>
    <refname>xmlrpc_server_call_method</refname>
    <refpurpose>Parses XML requests and call methods </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>xmlrpc_server_call_method</function></funcdef>
      <paramdef>resource <parameter>server</parameter></paramdef>
      <paramdef>string <parameter>xml</parameter></paramdef>
      <paramdef>mixed <parameter>user_data</parameter></paramdef>
      <paramdef>array
       <parameter><optional>output_options</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-server-add-introspection-data">
   <refnamediv>
    <refname>xmlrpc_server_add_introspection_data</refname>
    <refpurpose>Adds introspection documentation  </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>xmlrpc_server_add_introspection_data</function></funcdef>
      <paramdef>resource <parameter>server</parameter></paramdef>
      <paramdef>array <parameter>desc</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-parse-method-descriptions">
   <refnamediv>
    <refname>xmlrpc_parse_method_descriptions</refname>
    <refpurpose>Decodes XML into a list of method descriptions </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>xmlrpc_parse_method_descriptions</function></funcdef>
      <paramdef>string <parameter>xml</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-set-type">
   <refnamediv>
    <refname>xmlrpc_set_type</refname>
    <refpurpose>Sets xmlrpc type, base64 or datetime, for a PHP string value </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xmlrpc_set_type</function></funcdef>
      <paramdef>string <parameter>value</parameter></paramdef>
      <paramdef>string <parameter>type</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xmlrpc-get-type">
   <refnamediv>
    <refname>xmlrpc_get_type</refname>
    <refpurpose>Gets xmlrpc type for a PHP value. Especially useful for base64 and datetime strings </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>xmlrpc_get_type</function></funcdef>
      <paramdef>mixed <parameter>value</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

