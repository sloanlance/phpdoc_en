 <reference id="ref.hwapi">
  <title>Hyperwave API functions</title>
  <titleabbrev>Hyperwave API</titleabbrev>

  <partintro>

   <sect1 id="hwapi-intro">
    <title>Introduction</title>
    <para>
     <productname>Hyperwave</productname> has been developed at <ulink url="&url.iicm;">IICM</ulink> in Graz. It started with
     the name <acronym>Hyper-G</acronym> and changed to Hyperwave when
     it was commercialised (If I remember properly it was in 1996).
    </para>
    <para>
     Hyperwave is not free software. The current version, 5.5, is
     available at <ulink url="&url.hyperwave;">www.hyperwave.com</ulink>.  
     A time limited version can be ordered for free (30 days).
    </para>
    <para>
     Hyperwave is an information system similar to a database
     (<acronym>HIS</acronym>, Hyperwave Information Server). Its focus
     is the storage and management of documents. A document can be any
     possible piece of data that may as well be stored in file. Each
     document is accompanied by its object record. The object record
     contains meta data for the document. The meta data is a list of
     attributes which can be extended by the user. Certain attributes
     are always set by the Hyperwave server, other may be modified by
     the user.
    </para>
   </sect1>

   <sect1 id="hwapi-requirements">
    <title>Requirements</title>
    <para>
     Since 2001 there is a Hyperwave SDK available. It supports Java,
     JavaScript and C++. This PHP Extension is based on the C++ interface.
     In order to activate the hwapi support in PHP you will have to install
     the Hyperwave SDK first.
    </para>
   </sect1>

   <sect1 id="hwapi-classes">
    <title>Classes</title>
    <para>
     The API provided by the HW_API extension is fully object oriented.
     It is very similar to the C++ interface of the Hyperwave SDK.
     It consist of the following classes.
     <itemizedlist>
      <listitem>
       <simpara>
        <classname>HW_API</classname>
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Object</classname>
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Attribute</classname>
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Error</classname>
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Content</classname>
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Reason</classname>
	      </simpara>
	     </listitem>
     </itemizedlist>
     Some basic classes like <classname>HW_API_String</classname>,
     <classname>HW_API_String_Array</classname>, etc., which exist in the
     Hyperwave SDK have not been implemented since PHP has powerful
     replacements for them.
    </para>
    <para>
     Each class has certain method, whose names are identical to its
     counterparts in the Hyperwave SDK. Passing arguments to this function
     differs from all the other PHP Extension but is close to the C++ API of
     the HW SDK. Instead of passing serval parameters they are all put into
     an associated array and passed as one paramter. The names of the keys
     are identical to those documented in the HW SDK.
     The common parameters are listed below. If other parameters are required
     they will be documented if needed.
     <itemizedlist>
      <listitem>
       <simpara>
        <classname>objectIdentifier</classname> The name or id of an object,
        e.g. "rootcollection", "0x873A8768 0x00000002".
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>parentIdentifier</classname> The name or id of an object
        which is considered to be a parent.
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>object</classname> An instance of class HW_API_Object.
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>parameters</classname> An instance of class HW_API_Object.
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>version</classname> The version of an object.
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>mode</classname> An integer value determine the way an
        operation is executed.
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>attributeSelector</classname> Any array of strings, each
        containing a name of an attribute. This is used if you retrieve the
        object record and want to include certain attributes.
	      </simpara>
	     </listitem>
      <listitem>
       <simpara>
        <classname>objectQuery</classname> A query to select certain object
        out of a list of objects. This is used to reduce the number of objects
        which was delivered by a function like
        <function>hw_api->children</function> or <function>hw_api->find</function>.
	      </simpara>
	     </listitem>
     </itemizedlist>
    </para>
   </sect1>
   <sect1 id="hwapi-apache">
    <title>Integration with Apache</title>
    <para>
     The integration with Apache and possible other servers is already
     described in the Hyperwave Modul which has been the first extension to
     connect a Hyperwave Server.
    </para>
   </sect1>
  </partintro>

  <refentry id="function.hwapi-hgcsp">
   <refnamediv>
    <refname>hwapi_hgcsp</refname>
    <refpurpose>Returns object of class hw_api</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>hwapi_hgcsp</methodname>
     <methodparam><type>string</type><parameter>hostname</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>port</parameter></methodparam>
    </methodsynopsis>
    <para>
     Opens a connection to the Hyperwave server on host
     <parameter>hostname</parameter>. The protocol used is HGCSP.
     If you do not pass a port number, 418 is used.
    </para>
    <para>
     See also <function>hwapi_hwtp</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-object">
   <refnamediv>
    <refname>hw_api->object</refname>
    <refpurpose>Retrieve attribute information</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>hw_api->object</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This function retrieves the attribute information of an object of any
     version. It will not return the document content. The parameter array
     contains the required elements 'objectIdentifier' and the optional
     elements 'attributeSelector' and 'version'.
    </para>
    <para>
     The returned object is an instance of class
     <classname>HW_API_Object</classname> on success or
     <classname>HW_API_Error</classname> if an error occured.
    </para>
    <para>
     This simple example retrieves an object and checks for errors.
     <example>
      <title>Retrieve an object</title>
      <programlisting role="php">
<![CDATA[
<?php
function handle_error($error) {
  $reason = $error->reason(0);
  echo "Type: <B>";
  switch($reason->type()) {
    case 0:
      echo "Error";
      break;
    case 1:
      echo "Warning";
      break;
    case 2:
      echo "Message";
      break;
  }
  echo "</B><BR>\n";
  echo "Description: ".$reason->description("en")."<BR>\n";
}

function list_attr($obj) {
  echo "<TABLE>\n";
  $count = $obj->count();
  for($i=0; $i<$count; $i++) {
    $attr = $obj->attribute($i);
    printf("  <TR><TD ALIGN=right bgcolor=#c0c0c0><B>%s</B></TD><TD bgcolor=#F0F0F0>%s</TD>\n",
             $attr->key(), $attr->value());
  }
  echo "</TABLE>\n";
}

$hwapi = hwapi_hgcsp($g_config[HOSTNAME]);
$parms = array("objectIdentifier"=>"rootcollection, "attributeSelector"=>array("Title", "Name", "DocumentType"));
$root = $hwapi->object($parms);
if(get_class($root) == "HW_API_Error") {
  handle_error($root);
  exit;
}
list_attr($root);
?>
]]>
      </programlisting>
     </example>
    </para> 
    <para>
     See also <function>hwapi_content</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-children">
   <refnamediv>
    <refname>hw_api->children</refname>
    <refpurpose>Returns children of an object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>children</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Retrieves the children of a collection or the attributes of a document.
     The children can be further filtered by specifying an object query.
     The parameter array
     contains the required elements 'objectIdentifier' and the optional
     elements 'attributeSelector' and 'objectQuery'.
    </para>
    <para>
     The return value is an array of objects of type
     <classname>HW_API_Object</classname> or
     <classname>HW_API_Error</classname>.
    </para>
    <para>
     See also <function>hwapi_parents</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-parents">
   <refnamediv>
    <refname>hw_api->parents</refname>
    <refpurpose>Returns parents of an object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>parents</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Retrieves the parents of an object. The parents can be further filtered by
     specifying an object query. The parameter array
     contains the required elements 'objectidentifier' and the
     optional elements 'attributeselector' and 'objectquery'.
    </para>
    <para>
     The return value is an array of objects of type
     <classname>HW_API_Object</classname> or
     <classname>HW_API_Error</classname>.
    </para>
    <para>
     See also <function>hwapi_children</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-find">
   <refnamediv>
    <refname>hw_api->find</refname>
    <refpurpose>Search for objects</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>find</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This functions searches for objects either by executing a key or/and full
     text query. The found objects can further be filtered by an optional
     object query. They are sorted by their importance. The second search
     operation is relatively slow and its result can be limited to a certain
     number of hits. This allows to perform an incremental search, each
     returning just a subset of all found documents, starting at a given
     index. The parameter array contains the 'keyquery' or/and 'fulltextquery'
     depending on who you would like to search. Optional parameters are
     'objectquery', 'scope', 'lanugages' and 'attributeselector'. In case of
     an incremental search the optional parameters 'startIndex',
     numberOfObjectsToGet' and 'exactMatchUnit' can be passed.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-identify">
   <refnamediv>
    <refname>hw_api->identify</refname>
    <refpurpose>Log into Hyperwave Server</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>identify</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Logs into the Hyperwave Server. The parameter array must contain the
     elements 'username' und 'password'.
    </para>
    <para>
     The return value will be an object of type
     <classname>HW_API_Error</classname> if identification failed or TRUE
     if it was successful.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-remove">
   <refnamediv>
    <refname>hw_api->remove</refname>
    <refpurpose>Delete an object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>remove</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This function removes an object from the specified parent. Collections
     will be removed recursively. You can pass an optional object query to
     remove only those objects which match the query. An object will be
     deleted physically if it is the last instance. The parameter array
     contains the required elements 'objectidentifier' and 'parentidentifier'.
     If you want to remove a user or group 'parentidentifier' can be skiped.
     The optional parameter 'mode' determines how the deletion is performed.
     In normal mode the object will not be removed physically until all
     instances are removed. In physical mode all instances of the object will
     be deleted imediately. In removelinks mode all references
     to and from the objects will be deleted as well. In nonrecursive the
     deletion is not performed recursive. Removing a collection which is not
     empty will cause an error.
    </para>
    <para>
     See also <function>hwapi_move</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-content">
   <refnamediv>
    <refname>hw_api->content</refname>
    <refpurpose>Returns content of an object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>content</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This function returns the content of a document as an object of type
     <classname>hw_api_content</classname>. The parameter array
     contains the required elements 'objectidentifier' and the optional
     element 'mode'. The mode can be one of the constants
     HW_API_CONTENT_ALLLINKS,
     HW_API_CONTENT_REACHABLELINKS or HW_API_CONTENT_PLAIN.
     HW_API_CONTENT_ALLLINKS means to insert all anchors even if the
     destination is not reachable. HW_API_CONTENT_REACHABLELINKS tells
     <function>hw_api_content</function> to insert only reachable links and
     HW_API_CONTENT_PLAIN will lead to document without any links.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-copy">
   <refnamediv>
    <refname>hw_api->copy</refname>
    <refpurpose>Copies physically</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>copy</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This function will make a physical copy including the content if it
     exists and returns the new object or an error object.
     The parameter array contains the
     required elements 'objectIdentifier' and 'destinationParentIdentifier'.
     The optional parameter is 'attributeSelector'`
    </para>
    <para>
     See also <function>hwapi_move</function>,
              <function>hwapi_link</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-link">
   <refnamediv>
    <refname>hw_api->link</refname>
    <refpurpose>Creates a link to an object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>link</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Creates a link to an object. Accessing this link is like accessing the
     object to links points to. The parameter array contains the required
     elements 'objectIdentifier' and 'destinationParentIdentifier'.
     'destinationParentIdentifier' is the target collection.
    </para>
    <para>
     The function returns true on success or an error object.
    </para>
    <para>
     See also <function>hwapi_copy</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-move">
   <refnamediv>
    <refname>hw_api->move</refname>
    <refpurpose>Moves object between collections</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>move</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
    <para>
     See also <function>hw_objrec2array</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-lock">
   <refnamediv>
    <refname>hw_api->lock</refname>
    <refpurpose>Locks an object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>lock</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Locks an object for exclusive editing by the user calling this function.
     The object can be only unlocked by this user or the sytem user.  The
     parameter array contains the required element 'objectIdentifier' and the
     optional parameters 'mode' and 'objectquery'.
     'mode' determines how an object is locked.
     HW_API_LOCK_NORMAL means, an object is locked until it is unlocked.
     HW_API_LOCK_RECURSIVE is only valid for collection and locks all objects
     within th collection und possible subcollections.
     HW_API_LOCK_SESSION means, an object is locked only as long as the
     session is valid.
    </para>
    <para>
     See also <function>hwapi_unlock</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-unlock">
   <refnamediv>
    <refname>hw_api->unlock</refname>
    <refpurpose>Unlocks a locked object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>unlock</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Unlocks a locked object. Only the user who has locked the object and the
     system user may unlock an object. The parameter array contains the
     required element 'objectIdentifier' and the optional parameters
     'mode' and 'objectquery'. The meaning of 'mode' is the same as in
     function <function>hwapi_lock</function>.
    </para>
    <para>
     Returns true on success or an object of class HW_API_Error.
    </para>
    <para>
     See also <function>hwapi_lock</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-replace">
   <refnamediv>
    <refname>hw_api->replace</refname>
    <refpurpose>Replaces an object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>replace</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Replaces the attributes and the content of an object The parameter array
     contains the required elements 'objectIdentifier' and 'object' and
     the optional parameters 'content', 'parameters', 'mode' and
     'attributeSelector'. 'objectIdentifier' contains the object to be
     replaced. 'object' contains the new object. 'content' contains the new
     content. 'parameters' contain extra information for HTML documents.
     HTML_Language is the letter abbreviation of the language of the title.
     HTML_Base sets the base attribute of the HTML document. 'mode' can be a
     combination of the following flags:
     <variablelist>
      <varlistentry>
       <term>HW_API_REPLACE_NORMAL</term>
       <listitem>
        <simpara>
         The object on the server is replace with the object passed.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_REPLACE_FORCE_VERSION_CONTROL</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_REPLACE_AUTOMATIC_CHECKOUT</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_REPLACE_AUTOMATIC_CHECKIN</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_REPLACE_PLAIN</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_REPLACE_REVERT_IF_NOT_CHANGED</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_REPLACE_KEEP_TIME_MODIFIED</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     See also <function>hwapi_insert</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-insert">
   <refnamediv>
    <refname>hw_api->insert</refname>
    <refpurpose>Inserts a new object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>insert</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Insert a new object. The object type can be user, group, document or
     anchor. Depending on the type other object attributes has to be set.
     The parameter array contains the required elements 'object' and 'content'
     (if the object is a document) and the optional parameters 'parameters',
     'mode' and 'attributeSelector'. The 'object' must contain all attributes
     of the object. 'parameters' is an object as well holding futher
     attributes like the destination (attribute key is 'Parent'). 'content' is
     the content of the document. 'mode' can be a
     combination of the following flags:
     <variablelist>
      <varlistentry>
       <term>HW_API_INSERT_NORMAL</term>
       <listitem>
        <simpara>
         The object in inserted into the server.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_INSERT_FORCE-VERSION-CONTROL</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_INSERT_AUTOMATIC-CHECKOUT</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_INSERT_PLAIN</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_INSERT_KEEP_TIME_MODIFIED</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_INSERT_DELAY_INDEXING</term>
       <listitem>
        <simpara>
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     See also <function>hwapi_replace</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-insertdocument">
   <refnamediv>
    <refname>hw_api->insertdocument</refname>
    <refpurpose>Inserts a new object of type document</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>insertdocument</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This function is a shortcut for <function>hwapi_insert</function>. It
     inserts an object with content and sets some of the attributes required
     for a document. The parameter array contains the required elements
     'object', 'parentIdentifier' and 'content' and the optional elements
     'mode', 'parameter' and 'attributeSelector'. See
     <function>hwapi_insert</function> for the meaning of each element.
    </para>
    <para>
     See also <function>hwapi_insert</function>
              <function>hwapi_insertanchor</function>,
              <function>hwapi_insertcollection</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-insertcollection">
   <refnamediv>
    <refname>hw_api->insertcollection</refname>
    <refpurpose>Inserts a new object of type collection</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>insertcollection</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This function is a shortcut for <function>hwapi_insert</function>. It
     inserts an object of type collection and sets some of the attributes
     required
     for a collection. The parameter array contains the required elements
     'object' and 'parentIdentifier' and the optional elements
     'parameter' and 'attributeSelector'. See
     <function>hwapi_insert</function> for the meaning of each element.
    </para>
    <para>
     See also <function>hwapi_insertdocument</function>,
              <function>hwapi_insertanchor</function>,
              <function>hwapi_insert</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-insertanchor">
   <refnamediv>
    <refname>hw_api->insertanchor</refname>
    <refpurpose>Inserts a new object of type anchor</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>insertanchor</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This function is a shortcut for <function>hwapi_insert</function>. It
     inserts an object of type anchor and sets some of the attributes
     required
     for an anchor. The parameter array contains the required elements
     'object' and 'documentIdentifier' and the optional elements
     'destinationIdentifier', 'parameter', 'hint' and 'attributeSelector'.
     The 'documentIdentifier'
     specifies the document where the anchor shall be inserted. The target of
     the anchor is set in 'destinationIdentifier' if it already exists. If the
     target does not exists the element 'hint' has to be set to the name of 
     object which is supposed to be inserted later. Once it is inserted the
     anchor target is resolved automatically.
    </para>
    <para>
     See also <function>hwapi_insertdocument</function>,
              <function>hwapi_insertcollection</function>,
              <function>hwapi_insert</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-srcanchors">
   <refnamediv>
    <refname>hw_api->srcanchors</refname>
    <refpurpose>Returns a list of all source anchors</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>srcanchors</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Retrieves all source anchors of an object. The parameter array contains
     the required element 'objectIdentifier' and the optional elements
     'attributeSelector' and 'objectQuery'.
    </para>
    <para>
     See also <function>hwapi_dstanchors</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-dstanchors">
   <refnamediv>
    <refname>hw_api->dstanchors</refname>
    <refpurpose>Returns a list of all destination anchors</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>dstanchors</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Retrieves all destination anchors of an object. The parameter array
     contains
     the required element 'objectIdentifier' and the optional elements
     'attributeSelector' and 'objectQuery'.
    </para>
    <para>
     See also <function>hwapi_srcanchors</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-objectbyanchor">
   <refnamediv>
    <refname>hw_api->objectbyanchor</refname>
    <refpurpose>Returns the object an anchor belongs to</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>objectbyanchor</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This function retrieves an object the specified anchor belongs to.
     The parameter array contains the required element 'objectIdentifier' and
     the optional element 'attributeSelector'.
    </para>
    <para>
     See also <function>hwapi_dstofsrcanchor</function>,
              <function>hwapi_srcanchors</function>,
              <function>hwapi_dstanchors</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-dstofsrcanchors">
   <refnamediv>
    <refname>hw_api->dstofsrcanchors</refname>
    <refpurpose>Returns destination of a source anchor</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>dstofsrcanchors</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Retrieves the destination object pointed by the specified source anchors.
     The destination object can either be a destination anchor or a whole
     document. The parameters array contains the required element
     'objectIdentifier' and the optional element 'attributeSelector'.
    </para>
    <para>
     See also <function>hwapi_srcanchors</function>,
              <function>hwapi_dstanchors</function>,
              <function>hwapi_objectbyanchor</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-srcsofdst">
   <refnamediv>
    <refname>hw_api->srcsofdst</refname>
    <refpurpose>Returns source of a destination object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>srcsofdst</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Retrieves all the source anchors pointing to the specified destination.
     The destination object can either be a destination anchor or a whole
     document. The parameters array contains the required element
     'objectIdentifier' and the optional element 'attributeSelector' and
     'objectQuery'. The function returns an array of objects or an error.
    </para>
    <para>
     See also <function>hwapi_dstofsrcanchor</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-checkin">
   <refnamediv>
    <refname>hw_api->checkin</refname>
    <refpurpose>Checks in an object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>checkin</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This function checks in an object or a whole hiearchie of objects.
     The parameters array contains the required element
     'objectIdentifier' and the optional element 'version', 'comment', 'mode'
     and
     'objectQuery'. 'version' sets the version of the object. It consists of
     the major and minor version separated by a period. If the version is not
     set, the minor version is incremented. 'mode' can be one of the following
     values:
     <variablelist>
      <varlistentry>
       <term>HW_API_CHECKIN_NORMAL</term>
       <listitem>
        <simpara>
         Checks in and commits the object. The object must be a document.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_CHECKIN_RECURSIVE</term>
       <listitem>
        <simpara>
         If the object to check in is a collection, all children will be
         checked in recursively if they are documents. Trying to check in
         a collection would result in an error.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_CHECKIN_FORCE_VERSION_CONTROL</term>
       <listitem>
        <simpara>
         Checks in an object even if it is not under version control.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_CHECKIN_REVERT_IF_NOT_CHANGED</term>
       <listitem>
        <simpara>
         Check if the new version is different from the last version. Unless
         this is the case the object will be checked in.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_CHECKIN_KEEP_TIME_MODIFIED</term>
       <listitem>
        <simpara>
         Keeps the time modified from the most recent object.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_CHECKIN_NO_AUTO_COMMIT</term>
       <listitem>
        <simpara>
         The object is not automatically commited on checkin.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     See also <function>hwapi_checkout</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-checkout">
   <refnamediv>
    <refname>hw_api->checkout</refname>
    <refpurpose>Checks out an object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>checkout</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     This function checks out an object or a whole hiearchie of objects.
     The parameters array contains the required element
     'objectIdentifier' and the optional element 'version', 'mode'
     and 'objectQuery'. 'mode' can be one of the following values:
     <variablelist>
      <varlistentry>
       <term>HW_API_CHECKIN_NORMAL</term>
       <listitem>
        <simpara>
         Checks out an object. The object must be a document.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>HW_API_CHECKIN_RECURSIVE</term>
       <listitem>
        <simpara>
         If the object to check out is a collection, all children will be
         checked out recursively if they are documents. Trying to check out
         a collection would result in an error.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     See also <function>hwapi_checkin</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-setcommitedversion">
   <refnamediv>
    <refname>hw_api->setcommitedversion</refname>
    <refpurpose>Commits version other than last version</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>setcommitedversion</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Commits a version of a docuemnt. The commited version is the one which is
     visible to users with read access. By default the last version is the
     commited version.
    </para>
    <para>
     See also <function>hwapi_checkin</function>,
              <function>hwapi_checkout</function>,
              <function>hwapi_revert</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-user">
   <refnamediv>
    <refname>hw_api->user</refname>
    <refpurpose>Returns the own user object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>user</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
    <para>
     See also <function>hwapi_userlist</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-userlist">
   <refnamediv>
    <refname>hw_api->userlist</refname>
    <refpurpose>Returns a list of all logged in users</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>userlist</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
    <para>
     See also <function>hwapi_user</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-hwstat">
   <refnamediv>
    <refname>hw_api->hwstat</refname>
    <refpurpose>Returns statistics about Hyperwave server</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>hwstat</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
    <para>
     See also <function>hwapi_dcstat</function>,
              <function>hwapi_dbstat</function>,
              <function>hwapi_ftstat</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-dcstat">
   <refnamediv>
    <refname>hw_api->dcstat</refname>
    <refpurpose>Returns statistics about document cache server</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>dcstat</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
    <para>
     See also <function>hwapi_hwstat</function>,
              <function>hwapi_dbstat</function>,
              <function>hwapi_ftstat</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-dbstat">
   <refnamediv>
    <refname>hw_api->dbstat</refname>
    <refpurpose>Returns statistics about database server</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>dbstat</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
    <para>
     See also <function>hwapi_dcstat</function>,
              <function>hwapi_hwstat</function>,
              <function>hwapi_ftstat</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-ftstat">
   <refnamediv>
    <refname>hw_api->ftstat</refname>
    <refpurpose>Returns statistics about fulltext server</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>ftstat</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
    <para>
     See also <function>hwapi_dcstat</function>,
              <function>hwapi_dbstat</function>,
              <function>hwapi_hwstat</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-info">
   <refnamediv>
    <refname>hw_api->info</refname>
    <refpurpose>Returns information about server configuration</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>info</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
    <para>
     See also <function>hwapi_dcstat</function>,
              <function>hwapi_dbstat</function>,
              <function>hwapi_ftstat</function>,
              <function>hwapi_hwstat</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-object-new">
   <refnamediv>
    <refname>hw_api_object</refname>
    <refpurpose>Creates a new instance of class hw_api_object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>hw_api_object</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
    <para>
     See also <function>hwapi_lock</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-object-count">
   <refnamediv>
    <refname>hw_api_object->count</refname>
    <refpurpose>Returns number of attributes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>count</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-object-title">
   <refnamediv>
    <refname>hw_api_object->title</refname>
    <refpurpose>Returns the title attribute</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>title</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-object-attreditable">
   <refnamediv>
    <refname>hw_api_object->attreditable</refname>
    <refpurpose>Checks whether an attribute is editable</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>attreditable</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-object-assign">
   <refnamediv>
    <refname>hw_api_object->assign</refname>
    <refpurpose>Clones object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>assign</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     Clones the attributes of an object.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-object-insert">
   <refnamediv>
    <refname>hw_api_object->insert</refname>
    <refpurpose>Inserts new attribute</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>insert</methodname>
     <methodparam><type>object</type><parameter>attribute</parameter></methodparam>
    </methodsynopsis>
    <para>
     Adds an attribute to the object. Returns true on success and otherwise
     false.
    </para>
    <para>
     See also <function>hwapi_object_remove</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-object-remove">
   <refnamediv>
    <refname>hw_api_object->remove</refname>
    <refpurpose>Removes attribute</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>remove</methodname>
     <methodparam><type>string</type><parameter>name</parameter></methodparam>
    </methodsynopsis>
    <para>
     Removes the attribute with the given name. Returns true on success
     and otherwise false.
    </para>
    <para>
     See also <function>hwapi_object_insert</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-object-value">
   <refnamediv>
    <refname>hw_api_object->value</refname>
    <refpurpose>Returns value of attribute</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>value</methodname>
     <methodparam><type>string</type><parameter>name</parameter></methodparam>
    </methodsynopsis>
    <para>
     Returns the value of the attribute with the given name or false if an
     error occured.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-attribute">
   <refnamediv>
    <refname>hw_api_attribute</refname>
    <refpurpose>Creates instance of class hw_api_attribute</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>attribute</methodname>
     <methodparam choice="opt"><type>string</type><parameter>name</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>value</parameter></methodparam>
    </methodsynopsis>
    <para>
     Creates a new instance of hw_api_attribute with the given name and value.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-attribute-key">
   <refnamediv>
    <refname>hw_api_attribute->key</refname>
    <refpurpose>Returns key of the attribute</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>key</methodname>
     <methodparam><type>void</type><parameter></parameter></methodparam>
    </methodsynopsis>
    <para>
     Returns the name of the attribute.
    </para>
    <para>
     See also <function>hwapi_attribute_value</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-attribute-value">
   <refnamediv>
    <refname>hw_api_attribute->value</refname>
    <refpurpose>Returns value of the attribute</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>value</methodname>
     <methodparam><type>void</type><parameter></parameter></methodparam>
    </methodsynopsis>
    <para>
     Returns the value of the attribute.
    </para>
    <para>
     See also <function>hwapi_attribute_key</function>,
              <function>hwapi_attribute_values</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-attribute-values">
   <refnamediv>
    <refname>hw_api_attribute->values</refname>
    <refpurpose>Returns all values of the attribute</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>values</methodname>
     <methodparam><type>void</type><parameter></parameter></methodparam>
    </methodsynopsis>
    <para>
     Returns all values of the attribute as an array of strings.
    </para>
    <para>
     See also <function>hwapi_attribute_value</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-attribute-langdepvalue">
   <refnamediv>
    <refname>hw_api_attribute->langdepvalue</refname>
    <refpurpose>Returns value for a given language</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>langdepvalue</methodname>
     <methodparam><type>string</type><parameter>language</parameter></methodparam>
    </methodsynopsis>
    <para>
     Returns the value in the given language of the attribute.
    </para>
    <para>
     See also <function>hwapi_attribute_value</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-error-count">
   <refnamediv>
    <refname>hw_api_error->count</refname>
    <refpurpose>Returns number of reasons</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>count</methodname>
     <methodparam><type>void</type><parameter></parameter></methodparam>
    </methodsynopsis>
    <para>
     Returns the number of error reasons.
    </para>
    <para>
     See also <function>hwapi_error_reason</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-error-reason">
   <refnamediv>
    <refname>hw_api_error->reason</refname>
    <refpurpose>Returns reason of error</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>reason</methodname>
     <methodparam><type>void</type><parameter></parameter></methodparam>
    </methodsynopsis>
    <para>
     Returns the first error reason.
    </para>
    <para>
     See also <function>hwapi_error_count</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-reason-type">
   <refnamediv>
    <refname>hw_api_reason->type</refname>
    <refpurpose>Returns type of reason</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>type</methodname>
     <methodparam><type>void</type><parameter></parameter></methodparam>
    </methodsynopsis>
    <para>
     Returns the type of a reason.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-reason-description">
   <refnamediv>
    <refname>hw_api_reason->description</refname>
    <refpurpose>Returns description of reason</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>description</methodname>
     <methodparam><type>void</type><parameter></parameter></methodparam>
    </methodsynopsis>
    <para>
     Returns the description of a reason
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-new-content">
   <refnamediv>
    <refname>hw_api_content</refname>
    <refpurpose>Create new instance of class hw_api_content</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>content</methodname>
     <methodparam><type>string</type><parameter>content</parameter></methodparam>
     <methodparam><type>string</type><parameter>mimetype</parameter></methodparam>
    </methodsynopsis>
    <para>
     Creates a new content object from the string
     <parameter>content</parameter>. The mimetype is set to
     <parameter>mimetype</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-content-read">
   <refnamediv>
    <refname>hw_api_content->read</refname>
    <refpurpose>Read content</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>read</methodname>
     <methodparam><type>string</type><parameter>buffer</parameter></methodparam>
     <methodparam><type>integer</type><parameter>len</parameter></methodparam>
    </methodsynopsis>
    <para>
     Reads <parameter>len</parameter> bytes from the content into the given
     buffer.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.hwapi-content-mimetype">
   <refnamediv>
    <refname>hw_api_content->mimetype</refname>
    <refpurpose>Returns mimetype</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>mimetype</methodname>
     <methodparam><type>void</type><parameter></parameter></methodparam>
    </methodsynopsis>
    <para>
     Returns the mimetype of the content.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
