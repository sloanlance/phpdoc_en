 <reference id="ref.ncurses">
  <title>Ncurses terminal screen control functions</title>
  <titleabbrev>ncurses functions</titleabbrev>
  
  <partintro>
   <para>
   </para>
  </partintro>
  
  
  <refentry id="function.ncurses-can-change-color">
   <refnamediv>
    <refname>ncurses_can_change_color</refname>
    <refpurpose>Check if we can change terminals colors </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_can_change_color</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.ncurses-cbreak">
   <refnamediv>
    <refname>ncurses_cbreak</refname>
    <refpurpose>Switch of input buffering </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_cbreak</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-clear">
   <refnamediv>
    <refname>ncurses_clear</refname>
    <refpurpose>Clear screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_clear</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-clrtobot">
   <refnamediv>
    <refname>ncurses_clrtobot</refname>
    <refpurpose>Clear screen from current position to bottom </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_clrtobot</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-clrtoeol">
   <refnamediv>
    <refname>ncurses_clrtoeol</refname>
    <refpurpose>Clear screen from current position to end of line </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_clrtoeol</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-def-prog-mode">
   <refnamediv>
    <refname>ncurses_def_prog_mode</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_def_prog_mode</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-def-shell-mode">
   <refnamediv>
    <refname>ncurses_def_shell_mode</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_def_shell_mode</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-delch">
   <refnamediv>
    <refname>ncurses_delch</refname>
    <refpurpose>Delete character at current position, move rest of line left </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_delch</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-deleteln">
   <refnamediv>
    <refname>ncurses_deleteln</refname>
    <refpurpose>Delete line at current position, move rest of screen up </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_deleteln</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-doupdate">
   <refnamediv>
    <refname>ncurses_doupdate</refname>
    <refpurpose>Write all prepared refreshes to terminal </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_doupdate</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-echo">
   <refnamediv>
    <refname>ncurses_echo</refname>
    <refpurpose>Activate keyboard input echo </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_echo</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-erase">
   <refnamediv>
    <refname>ncurses_erase</refname>
    <refpurpose>Erease terminal screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_erase</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-erasechar">
   <refnamediv>
    <refname>ncurses_erasechar</refname>
    <refpurpose>Return current erase character </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_erasechar</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-flash">
   <refnamediv>
    <refname>ncurses_flash</refname>
    <refpurpose>Flash terminal screen (visual bell) </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_flash</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-flushinp">
   <refnamediv>
    <refname>ncurses_flushinp</refname>
    <refpurpose>Flush keyboard input buffer </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_flushinp</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-has-colors">
   <refnamediv>
    <refname>ncurses_has_colors</refname>
    <refpurpose>Check if terminal has colors </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_has_colors</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-has-ic">
   <refnamediv>
    <refname>ncurses_has_ic</refname>
    <refpurpose>Check for insert- and delete-capabilities </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_has_ic</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-has-il">
   <refnamediv>
    <refname>ncurses_has_il</refname>
    <refpurpose>Check for line insert- and delete-capabilities </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_has_il</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-inch">
   <refnamediv>
    <refname>ncurses_inch</refname>
    <refpurpose>Get character and attribute at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_inch</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-insertln">
   <refnamediv>
    <refname>ncurses_insertln</refname>
    <refpurpose>Insert a line, move rest of screen down </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_insertln</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-isendwin">
   <refnamediv>
    <refname>ncurses_isendwin</refname>
    <refpurpose>Ncurses is in endwin mode, normal screen output may be performed </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_isendwin</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-killchar">
   <refnamediv>
    <refname>ncurses_killchar</refname>
    <refpurpose>Return current line kill character </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_killchar</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-nl">
   <refnamediv>
    <refname>ncurses_nl</refname>
    <refpurpose>Translate newline and carriage return / line feed </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_nl</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-nocbreak">
   <refnamediv>
    <refname>ncurses_nocbreak</refname>
    <refpurpose>Switch terminal to cooked mode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_nocbreak</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-noecho">
   <refnamediv>
    <refname>ncurses_noecho</refname>
    <refpurpose>Switch off keyboard input echo </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_noecho</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-nonl">
   <refnamediv>
    <refname>ncurses_nonl</refname>
    <refpurpose>Do not ranslate newline and carriage return / line feed </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_nonl</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-noraw">
   <refnamediv>
    <refname>ncurses_noraw</refname>
    <refpurpose>Switch terminal out of raw mode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_noraw</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-raw">
   <refnamediv>
    <refname>ncurses_raw</refname>
    <refpurpose>Switch terminal into raw mode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_raw</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-resetty">
   <refnamediv>
    <refname>ncurses_resetty</refname>
    <refpurpose>Restore saved terminal state </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_resetty</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-savetty">
   <refnamediv>
    <refname>ncurses_savetty</refname>
    <refpurpose>Save terminal state </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_savetty</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-attr">
   <refnamediv>
    <refname>ncurses_slk_attr</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_slk_attr</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-clear">
   <refnamediv>
    <refname>ncurses_slk_clear</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_slk_clear</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-noutrefresh">
   <refnamediv>
    <refname>ncurses_slk_noutrefresh</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_slk_noutrefresh</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-refresh">
   <refnamediv>
    <refname>ncurses_slk_refresh</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_slk_refresh</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-restore">
   <refnamediv>
    <refname>ncurses_slk_restore</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_slk_restore</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-touch">
   <refnamediv>
    <refname>ncurses_slk_touch</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_slk_touch</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-termattrs">
   <refnamediv>
    <refname>ncurses_termattrs</refname>
    <refpurpose>Return a logical OR of all attribute flags supported by terminal </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_termattrs</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-use-default-colors">
   <refnamediv>
    <refname>ncurses_use_default_colors</refname>
    <refpurpose>Assign terminal default colors to color id -1 </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ncurses_use_default_colors</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-addch">
   <refnamediv>
    <refname>ncurses_addch</refname>
    <refpurpose>Add character at current position and advance cursor </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_addch</function></funcdef>
      <paramdef>int <parameter>ch</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-addchnstr">
   <refnamediv>
    <refname>ncurses_addchnstr</refname>
    <refpurpose>Add attributed string with specified length at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_addchnstr</function></funcdef>
      <paramdef>string <parameter>s</parameter></paramdef>
      <paramdef>int <parameter>n</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-addchstr">
   <refnamediv>
    <refname>ncurses_addchstr</refname>
    <refpurpose>Add attributed string at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_addchstr</function></funcdef>
      <paramdef>string <parameter>s</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-addnstr">
   <refnamediv>
    <refname>ncurses_addnstr</refname>
    <refpurpose>Add string with specified length at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_addnstr</function></funcdef>
      <paramdef>string <parameter>s</parameter></paramdef>
      <paramdef>int <parameter>n</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-addstr">
   <refnamediv>
    <refname>ncurses_addstr</refname>
    <refpurpose>Output text at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_addstr</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-assume-default-colors">
   <refnamediv>
    <refname>ncurses_assume_default_colors</refname>
    <refpurpose>Define default colors for color 0 </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_assume_default_colors</function></funcdef>
      <paramdef>int <parameter>fg</parameter></paramdef>
      <paramdef>int <parameter>bg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-attroff">
   <refnamediv>
    <refname>ncurses_attroff</refname>
    <refpurpose>Turn off the given attributes </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_attroff</function></funcdef>
      <paramdef>int <parameter>attributes</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-attron">
   <refnamediv>
    <refname>ncurses_attron</refname>
    <refpurpose>Turn on the given attributes </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_attron</function></funcdef>
      <paramdef>int <parameter>attributes</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-attrset">
   <refnamediv>
    <refname>ncurses_attrset</refname>
    <refpurpose>Set given attributes </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_attrset</function></funcdef>
      <paramdef>int <parameter>attributes</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-baudrate">
   <refnamediv>
    <refname>ncurses_baudrate</refname>
    <refpurpose>Return baudrate of terminal </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_baudrate</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-beep">
   <refnamediv>
    <refname>ncurses_beep</refname>
    <refpurpose>Let the terminal beep </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_beep</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-bkgd">
   <refnamediv>
    <refname>ncurses_bkgd</refname>
    <refpurpose>Set background property for terminal screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_bkgd</function></funcdef>
      <paramdef>int <parameter>attrchar</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-border">
   <refnamediv>
    <refname>ncurses_border</refname>
    <refpurpose>Draw a border around the screen using attributed characters </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_border</function></funcdef>
      <paramdef>int <parameter>left</parameter></paramdef>
      <paramdef>int <parameter>right</parameter></paramdef>
      <paramdef>int <parameter>top</parameter></paramdef>
      <paramdef>int <parameter>bottom</parameter></paramdef>
      <paramdef>int <parameter>tl_corner</parameter></paramdef>
      <paramdef>int <parameter>tr_corner</parameter></paramdef>
      <paramdef>int <parameter>bl_corner</parameter></paramdef>
      <paramdef>int <parameter>br_corner</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-color-set">
   <refnamediv>
    <refname>ncurses_color_set</refname>
    <refpurpose>Set fore- and background color </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_color_set</function></funcdef>
      <paramdef>int <parameter>pair</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-curs-set">
   <refnamediv>
    <refname>ncurses_curs_set</refname>
    <refpurpose>Set cursor state </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_curs_set</function></funcdef>
      <paramdef>int <parameter>visibility</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-define-key">
   <refnamediv>
    <refname>ncurses_define_key</refname>
    <refpurpose>Define a keycode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_define_key</function></funcdef>
      <paramdef>string <parameter>definition</parameter></paramdef>
      <paramdef>int <parameter>keycode</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-delay-output">
   <refnamediv>
    <refname>ncurses_delay_output</refname>
    <refpurpose>Delay output on terminal using padding characters </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_delay_output</function></funcdef>
      <paramdef>int <parameter>milliseconds</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-delwin">
   <refnamediv>
    <refname>ncurses_delwin</refname>
    <refpurpose>Delete a ncurses window </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_delwin</function></funcdef>
      <paramdef>resource <parameter>window</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-echochar">
   <refnamediv>
    <refname>ncurses_echochar</refname>
    <refpurpose>Single character output including refresh </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_echochar</function></funcdef>
      <paramdef>int <parameter>character</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-end">
   <refnamediv>
    <refname>ncurses_end</refname>
    <refpurpose>Stop using ncurses, clean up the screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_end</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-filter">
   <refnamediv>
    <refname>ncurses_filter</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_filter</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-getch">
   <refnamediv>
    <refname>ncurses_getch</refname>
    <refpurpose>Read a character from keyboard </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_getch</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-halfdelay">
   <refnamediv>
    <refname>ncurses_halfdelay</refname>
    <refpurpose>Put terminal into halfdelay mode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_halfdelay</function></funcdef>
      <paramdef>int <parameter>tenth</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-has-key">
   <refnamediv>
    <refname>ncurses_has_key</refname>
    <refpurpose>Check for presence of a function key on terminal keyboard </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_has_key</function></funcdef>
      <paramdef>int <parameter>keycode</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-hline">
   <refnamediv>
    <refname>ncurses_hline</refname>
    <refpurpose>Draw a horizontal line at current position using an attributed character and max. n characters long </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_hline</function></funcdef>
      <paramdef>int <parameter>charattr</parameter></paramdef>
      <paramdef>int <parameter>n</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-init">
   <refnamediv>
    <refname>ncurses_init</refname>
    <refpurpose>Initialize ncurses </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_init</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-init-color">
   <refnamediv>
    <refname>ncurses_init_color</refname>
    <refpurpose>Set new RGB value for color </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_init_color</function></funcdef>
      <paramdef>int <parameter>color</parameter></paramdef>
      <paramdef>int <parameter>r</parameter></paramdef>
      <paramdef>int <parameter>g</parameter></paramdef>
      <paramdef>int <parameter>b</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-init-pair">
   <refnamediv>
    <refname>ncurses_init_pair</refname>
    <refpurpose>Allocate a color pair </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_init_pair</function></funcdef>
      <paramdef>int <parameter>pair</parameter></paramdef>
      <paramdef>int <parameter>fg</parameter></paramdef>
      <paramdef>int <parameter>bg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-insch">
   <refnamediv>
    <refname>ncurses_insch</refname>
    <refpurpose>Insert character moving rest of line including character at current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_insch</function></funcdef>
      <paramdef>int <parameter>character</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-insdelln">
   <refnamediv>
    <refname>ncurses_insdelln</refname>
    <refpurpose>Insert lines before current line scrolling down (negative numbers delete and scroll up) </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_insdelln</function></funcdef>
      <paramdef>int <parameter>count</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-insstr">
   <refnamediv>
    <refname>ncurses_insstr</refname>
    <refpurpose>Insert string at current position, moving rest of line right </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_insstr</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-instr">
   <refnamediv>
    <refname>ncurses_instr</refname>
    <refpurpose>Read string from terminal screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_instr</function></funcdef>
      <paramdef>string <parameter>buffer</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-keyok">
   <refnamediv>
    <refname>ncurses_keyok</refname>
    <refpurpose>Enable or disable a keycode </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_keyok</function></funcdef>
      <paramdef>int <parameter>keycode</parameter></paramdef>
      <paramdef>bool <parameter>enable</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mouseinterval">
   <refnamediv>
    <refname>ncurses_mouseinterval</refname>
    <refpurpose>Set timeout for mouse button clicks </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mouseinterval</function></funcdef>
      <paramdef>int <parameter>milliseconds</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-move">
   <refnamediv>
    <refname>ncurses_move</refname>
    <refpurpose>Move output position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_move</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvaddch">
   <refnamediv>
    <refname>ncurses_mvaddch</refname>
    <refpurpose>Move current position and add character </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvaddch</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvaddchnstr">
   <refnamediv>
    <refname>ncurses_mvaddchnstr</refname>
    <refpurpose>Move position and add attrributed string with specified length </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvaddchnstr</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>string <parameter>s</parameter></paramdef>
      <paramdef>int <parameter>n</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvaddchstr">
   <refnamediv>
    <refname>ncurses_mvaddchstr</refname>
    <refpurpose>Move position and add attributed string </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvaddchstr</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>string <parameter>s</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvaddnstr">
   <refnamediv>
    <refname>ncurses_mvaddnstr</refname>
    <refpurpose>Move position and add string with specified length </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvaddnstr</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>string <parameter>s</parameter></paramdef>
      <paramdef>int <parameter>n</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvaddstr">
   <refnamediv>
    <refname>ncurses_mvaddstr</refname>
    <refpurpose>Move position and add string </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvaddstr</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>string <parameter>s</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvcur">
   <refnamediv>
    <refname>ncurses_mvcur</refname>
    <refpurpose>Move cursor immediately </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvcur</function></funcdef>
      <paramdef>int <parameter>old_y</parameter></paramdef>
      <paramdef>int <parameter>old_x</parameter></paramdef>
      <paramdef>int <parameter>new_y</parameter></paramdef>
      <paramdef>int <parameter>new_x</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvdelch">
   <refnamediv>
    <refname>ncurses_mvdelch</refname>
    <refpurpose>Move position and delete character, shift rest of line left </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvdelch</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvgetch">
   <refnamediv>
    <refname>ncurses_mvgetch</refname>
    <refpurpose>Move position and get character at new position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvgetch</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvhline">
   <refnamediv>
    <refname>ncurses_mvhline</refname>
    <refpurpose>Set new position and draw a horizontal line using an attributed character and max. n characters long </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvhline</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>attrchar</parameter></paramdef>
      <paramdef>int <parameter>n</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvinch">
   <refnamediv>
    <refname>ncurses_mvinch</refname>
    <refpurpose>Move position and get attributed character at new position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvinch</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvvline">
   <refnamediv>
    <refname>ncurses_mvvline</refname>
    <refpurpose>Set new position and draw a vertical line using an attributed character and max. n characters long </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvvline</function></funcdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>attrchar</parameter></paramdef>
      <paramdef>int <parameter>n</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-mvwaddstr">
   <refnamediv>
    <refname>ncurses_mvwaddstr</refname>
    <refpurpose>Add string at new position in window </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_mvwaddstr</function></funcdef>
      <paramdef>resource <parameter>window</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-napms">
   <refnamediv>
    <refname>ncurses_napms</refname>
    <refpurpose>Sleep </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_napms</function></funcdef>
      <paramdef>int <parameter>milliseconds</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-newwin">
   <refnamediv>
    <refname>ncurses_newwin</refname>
    <refpurpose>Create a new window </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_newwin</function></funcdef>
      <paramdef>int <parameter>rows</parameter></paramdef>
      <paramdef>int <parameter>cols</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-noqiflush">
   <refnamediv>
    <refname>ncurses_noqiflush</refname>
    <refpurpose>Do not flush on signal characters</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_noqiflush</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-putp">
   <refnamediv>
    <refname>ncurses_putp</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_putp</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-qiflush">
   <refnamediv>
    <refname>ncurses_qiflush</refname>
    <refpurpose>Flush on signal characters </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_qiflush</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-refresh">
   <refnamediv>
    <refname>ncurses_refresh</refname>
    <refpurpose>Refresh screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_refresh</function></funcdef>
      <paramdef>int <parameter>ch</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-scr-dump">
   <refnamediv>
    <refname>ncurses_scr_dump</refname>
    <refpurpose>Dump screen content to file </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_scr_dump</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-scr-init">
   <refnamediv>
    <refname>ncurses_scr_init</refname>
    <refpurpose>Initialize screen from file dump </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_scr_init</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-scr-restore">
   <refnamediv>
    <refname>ncurses_scr_restore</refname>
    <refpurpose>Restore screen from file dump </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_scr_restore</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-scr-set">
   <refnamediv>
    <refname>ncurses_scr_set</refname>
    <refpurpose>Inherit screen from file dump </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_scr_set</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-scrl">
   <refnamediv>
    <refname>ncurses_scrl</refname>
    <refpurpose>Scroll window content up or down without changing current position </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_scrl</function></funcdef>
      <paramdef>int <parameter>count</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-attroff">
   <refnamediv>
    <refname>ncurses_slk_attroff</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_slk_attroff</function></funcdef>
      <paramdef>int <parameter>intarg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-attron">
   <refnamediv>
    <refname>ncurses_slk_attron</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_slk_attron</function></funcdef>
      <paramdef>int <parameter>intarg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-attrset">
   <refnamediv>
    <refname>ncurses_slk_attrset</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_slk_attrset</function></funcdef>
      <paramdef>int <parameter>intarg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-color">
   <refnamediv>
    <refname>ncurses_slk_color</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_slk_color</function></funcdef>
      <paramdef>int <parameter>intarg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-slk-init">
   <refnamediv>
    <refname>ncurses_slk_init</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_slk_init</function></funcdef>
      <paramdef>int <parameter>intarg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-standend">
   <refnamediv>
    <refname>ncurses_standend</refname>
    <refpurpose>Stop using 'standout' attribute </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_standend</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-standout">
   <refnamediv>
    <refname>ncurses_standout</refname>
    <refpurpose>Start using 'standout' attribute </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_standout</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-start-color">
   <refnamediv>
    <refname>ncurses_start_color</refname>
    <refpurpose>Start using colors </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_start_color</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-typeahead">
   <refnamediv>
    <refname>ncurses_typeahead</refname>
    <refpurpose>Specify different filedescriptor for typeahead checking </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_typeahead</function></funcdef>
      <paramdef>int <parameter>fd</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-ungetch">
   <refnamediv>
    <refname>ncurses_ungetch</refname>
    <refpurpose>Put a character back into the input stream </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_ungetch</function></funcdef>
      <paramdef>int <parameter>keycode</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-use-extended-names">
   <refnamediv>
    <refname>ncurses_use_extended_names</refname>
    <refpurpose>Control use of extended names in terminfo descriptions </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_use_extended_names</function></funcdef>
      <paramdef>bool <parameter>flag</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-vidattr">
   <refnamediv>
    <refname>ncurses_vidattr</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_vidattr</function></funcdef>
      <paramdef>int <parameter>intarg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-vline">
   <refnamediv>
    <refname>ncurses_vline</refname>
    <refpurpose>Draw a vertical line at current position using an attributed character and max. n characters long </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_vline</function></funcdef>
      <paramdef>int <parameter>charattr</parameter></paramdef>
      <paramdef>int <parameter>n</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-wrefresh">
   <refnamediv>
    <refname>ncurses_wrefresh</refname>
    <refpurpose>Refresh window on terminal screen </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ncurses_wrefresh</function></funcdef>
      <paramdef>resource <parameter>window</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-bkgdset">
   <refnamediv>
    <refname>ncurses_bkgdset</refname>
    <refpurpose>Control screen background </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>ncurses_bkgdset</function></funcdef>
      <paramdef>int <parameter>attrchar</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-timeout">
   <refnamediv>
    <refname>ncurses_timeout</refname>
    <refpurpose>Set timeout for special key sequences </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>ncurses_timeout</function></funcdef>
      <paramdef>int <parameter>millisec</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ncurses-use-env">
   <refnamediv>
    <refname>ncurses_use_env</refname>
    <refpurpose>Control use of environment information about terminal size </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>ncurses_use_env</function></funcdef>
      <paramdef>bool <parameter>flag</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     undocumented
    </para>
   </refsect1>
  </refentry>

 </reference>

 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->

