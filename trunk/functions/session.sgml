 <reference id="ref.session">
  <title>Session handling functions</title>
  <titleabbrev>Sessions</titleabbrev>
  <partintro>
   <para>
    To configure the session managment system in PHP4 you can use the
    following entries in your php.ini:
   <informalexample><programlisting>
session_save_path = "/tmp"
session_auto_start = 0 
session_lifetime = 0 ; lifetime in seconds
; 0 means to only use session cookies (as long as browser is open)
   </programlisting></informalexample>
  <para>
   <systemitem>&lt;?=sid&gt;</systemitem> is a shortcut for
   the session id parameter to add to a URL so the session
   can be preserved without using cookies. (It is equivalent to
   <systemitem>&lt;?  echo <function>session_name</function> . "="
   . <function>session_id</function>;</systemitem>.

   <note>
    <para>
     Session handling was added in PHP 4.0.
   </note>
  </partintro>

  <refentry id="function.session-start">
   <refnamediv>
    <refname>session_start</refname>
    <refpurpose>Initialize session data</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>bool <function>session_start</function></funcdef>
     <void>
    </funcsynopsis>
    <simpara>
     <function>session_start</function> creates a session (or resumes
     the current one based on the session id being passed via a GET
     variable or a cookie).
    <simpara>
     This function always returns true.
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-destroy">
   <refnamediv>
    <refname>session_destroy</refname>
    <refpurpose>Destroys all data registered to a session</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>bool <function>session_destroy</function></funcdef>
     <void>
    </funcsynopsis>
    <simpara>
     <function>session_destroy</function> destroys all of the data
     associated with the current session.
    <simpara>
     This function always returns true.
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-name">
   <refnamediv>
    <refname>session_name</refname>
    <refpurpose>Get and/or set the current session name</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>session_name</function></funcdef>
     <paramdef>string <parameter><optional>name</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_name</function> returns the name of the current
     session. If <parameter>name</parameter> is specified, the name of
     the current session is changed to its value.
    <example>
     <title><function>session_name</function> examples</title>
     <programlisting>
$username="foo";

if(isset($username)) {
    session_name($username);
}

echo "Your username is " . session_name();
     </programlisting>
    </example>
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-module-name">
   <refnamediv>
    <refname>session_module_name</refname>
    <refpurpose>Get and/or set the current session module</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>session_module_name</function></funcdef>
     <paramdef>string <parameter><optional>module</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_module_name</function> returns the name of the current
     session module. If <parameter>module</parameter> is specified, that
     module will be used instead.
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-save-path">
   <refnamediv>
    <refname>session_save_path</refname>
    <refpurpose>Get and/or set the current session save path</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>session_save_path</function></funcdef>
     <paramdef>string <parameter><optional>path</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_save_path</function> returns the path of the current
     directory used to save session data. If <parameter>path</parameter>
     is specified, the path to which data is saved will be changed.
    <note>
     <para>
      On some operating systems, you may want to specify a path on
      a filesystem that handles lots of small files efficiently. For
      example, on Linux, reiserfs may provide better performance than
      ext2fs.
    </note>
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-id">
   <refnamediv>
    <refname>session_id</refname>
    <refpurpose>Get and/or set the current session id</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>session_id</function></funcdef>
     <paramdef>string <parameter><optional>id</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_id</function> returns the session id for the current
     session. If <parameter>id</parameter> is specified, it will replace
     the current session id.
    <para>
     directory used to save session data. If <parameter>path</parameter>
     is specified, the path to which data is saved will be changed.
    <para>
     The constant <systemitem>SID</systemitem> can also be used to retrieve
     the current name and session id as a string suitable for adding to
     URLs.
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-register">
   <refnamediv>
    <refname>session_register</refname>
    <refpurpose>Register a variable with the current session</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>bool <function>session_register</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_register</function> registers the global variable
     named <parameter>name</parameter> with the current session.
    <para>
     This function returns true when the variable is successfully
     registered with the session.
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-unregister">
   <refnamediv>
    <refname>session_unregister</refname>
    <refpurpose>Unregister a variable from the current session</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>bool <function>session_unregister</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_unregister</function> unregisters (forgets)
     the global variable named <parameter>name</parameter> from the
     current session.
    <para>
     This function returns true when the variable is successfully
     unregistered from the session.
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-is-registered">
   <refnamediv>
    <refname>session_is_registered</refname>
    <refpurpose>Find out if a variable is registered in a session</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>bool <function>session_is_registered</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_is_registered</function> returns true if there
     is a variable with the name <parameter>name</parameter> registered
     in the current session.
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-decode">
   <refnamediv>
    <refname>session_decode</refname>
    <refpurpose>Decodes session data from a string</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>bool <function>session_decode</function></funcdef>
     <paramdef>string <parameter>data</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_decode</function> decodes the session data in
     <parameter>data</parameter>, setting variables stored in the
     session.
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-encode">
   <refnamediv>
    <refname>session_encode</refname>
    <refpurpose>Encodes the current session data as a string</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>bool <function>session_encode</function></funcdef>
     <void>
    </funcsynopsis>
    <para>
     <function>session_encode</function> returns a string with the
     contents of the current session encoded within.
    <note>
     <para>
      This function was added in PHP 4.0.
    </note>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
