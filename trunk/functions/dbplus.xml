<?xml encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
 <reference id="ref.dbplus">
  <title>DB++ functions</title>
  <titleabbrev></titleabbrev>
	
  <partintro>
   &warn.experimental;
	 
	 <section id="dbplus.intro">
		<title>Experimental support for db++ database</title>
		<para>
		 This paper describes the the db++ extension which enables
		 PHP to access db++ relation files through all of the
		 search and update methods available in the client/server "C"
		 library interface of db++ and to read and process the output of a
		 db++ query.
		</para>
	 </section>
	 
	 <section id="dbplus.requirenments">
		<title>Requirenments</title>
		<para>
		 ??? Download where
		</para>
	 </section>
	 
	 <section id="dbplus.installation">
		<title>Installation</title>
		<para>
		 Creation and installation of this extension requires the db++
		 client libraries and header files to be installed on your system
		 as described above. You have to run <command>configure</command>
		 with option <option>--with-dbplus</option> to build this extension.
		</para>
		<para>
		 <command>configure</command> looks for the client libraries and
		 header files under the default
		 path<filename>/usr/dbplus/</filename>.
		 If you have installed db++ in a different place you have add the
		 installation path to the <command>configure</command> option like
		 this: <option>--with-dbplus=/your/installation/path</option>.
		</para>
	 </section>

  </partintro>
	
  <refentry id="function.dbplus-add">
   <refnamediv>
    <refname>dbplus_add</refname>
    <refpurpose>Add a tuple to a relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_add</function></funcdef>
			<paramdef>int <parameter>relation</parameter></paramdef>
			<paramdef>array <parameter>tuple</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>
	
  <refentry id="function.dbplus-aql">
   <refnamediv>
    <refname>dbplus_aql</refname>
    <refpurpose>Perform AQL query</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_aql</function></funcdef>
     <paramdef>string <parameter>query</parameter></paramdef>
     <paramdef>string
      <parameter><optional>server</optional></parameter>
     </paramdef>
     <paramdef>string
      <parameter><optional>dbpath</optional></parameter>
     </paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-chdir">
   <refnamediv>
    <refname>dbplus_chdir</refname>
    <refpurpose>Get/Set database virtual current directory</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dbplus_chdir</function></funcdef>
     <paramdef>string
      <parameter><optional>newdir</optional></parameter>
     </paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-close">
   <refnamediv>
    <refname>dbplus_close</refname>
    <refpurpose>Close a relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_close</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-curr">
   <refnamediv>
    <refname>dbplus_curr</refname>
    <refpurpose>Get current tuple from relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_curr</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>array <parameter>tuple</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-errcode">
   <refnamediv>
    <refname>dbplus_errcode</refname>
    <refpurpose>Get error string for given errorcode or last error</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dbplus_errcode</function></funcdef>
     <paramdef>int <parameter>err</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-first">
   <refnamediv>
    <refname>dbplus_first</refname>
    <refpurpose>Get first tuple from relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_first</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>array <parameter>tuple</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-flush">
   <refnamediv>
    <refname>dbplus_flush</refname>
    <refpurpose>???</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_flush</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-freealllocks">
   <refnamediv>
    <refname>dbplus_freealllocks</refname>
    <refpurpose>Free all locks held by this client</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_freealllocks</function></funcdef>
	  <void/>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-freerlocks">
   <refnamediv>
    <refname>dbplus_freerlocks</refname>
    <refpurpose>Free all locks on given relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_freerlocks</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-info">
   <refnamediv>
    <refname>dbplus_info</refname>
    <refpurpose>???</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_info</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>string <parameter>key</parameter></paramdef>
     <paramdef>array <parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-last">
   <refnamediv>
    <refname>dbplus_last</refname>
    <refpurpose>Get last tuple from relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_last</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>array <parameter>tuple</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-lockrel">
   <refnamediv>
    <refname>dbplus_lockrel</refname>
    <refpurpose>Request read-lock on relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_lockrel</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-next">
   <refnamediv>
    <refname>dbplus_next</refname>
    <refpurpose>Get next tuple from relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_next</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>array <parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

	<refentry id="function.dbplus-open">
   <refnamediv>
    <refname>dbplus_open</refname>
    <refpurpose>Open relation file</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_open</function></funcdef>
			<paramdef>string <parameter>name</parameter></paramdef>
		 </funcprototype>
		</funcsynopsis>
   &warn.experimental.func;
    <para>
		 The relation file <parameter>name</parameter> will be opened.
		 <parameter>name</parameter> can be either a file name or a
		 relative or absolute path name. This will be mapped in any case
		 to an absolute relation file path on a specific host machine and
		 server.
		</para>
		<para>
		 On success a relation file handle (cursor) is returned which must be used in any subsequent
		 commanads referencing the relation.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-prev">
   <refnamediv>
    <refname>dbplus_prev</refname>
    <refpurpose>Get previous tuple from relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_prev</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>array <parameter>tuple</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-restorepos">
   <refnamediv>
    <refname>dbplus_restorepos</refname>
    <refpurpose>???</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_restorepos</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>array <parameter>tuple</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-ropen">
   <refnamediv>
    <refname>dbplus_ropen</refname>
    <refpurpose>Open relation file ... ???</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_ropen</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-runlink">
   <refnamediv>
    <refname>dbplus_runlink</refname>
    <refpurpose>Remove relation from filesystem</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_runlink</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-rzap">
   <refnamediv>
    <refname>dbplus_rzap</refname>
    <refpurpose>Remove all tuples from relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_rzap</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>int <parameter>truncate</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-savepos">
   <refnamediv>
    <refname>dbplus_savepos</refname>
    <refpurpose>???</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_savepos</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-setindex">
   <refnamediv>
    <refname>dbplus_setindex</refname>
    <refpurpose>???</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_setindex</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>string <parameter>idx_name</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-setindexbynumber">
   <refnamediv>
    <refname>dbplus_setindexbynumber</refname>
    <refpurpose>???</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_setindexbynumber</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>int <parameter>idx_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-sql">
   <refnamediv>
    <refname>dbplus_sql</refname>
    <refpurpose>Perform SQL query</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_sql</function></funcdef>
     <paramdef>string <parameter>query</parameter></paramdef>
     <paramdef>string <parameter>server</parameter></paramdef>
     <paramdef>string <parameter>dbpath</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-tremove">
   <refnamediv>
    <refname>dbplus_tremove</refname>
    <refpurpose>Remove tuple and return new current tuple</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_tremove</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>array <parameter>old</parameter></paramdef>
     <paramdef>array
      <parameter><optional>current</optional></parameter>
     </paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-undo">
   <refnamediv>
    <refname>dbplus_undo</refname>
    <refpurpose>???</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_undo</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-undoprepare">
   <refnamediv>
    <refname>dbplus_undoprepare</refname>
    <refpurpose>???</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_undoprepare</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-unlockrel">
   <refnamediv>
    <refname>dbplus_unlockrel</refname>
    <refpurpose>Give up read-lock on relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_unlockrel</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-unselect">
   <refnamediv>
    <refname>dbplus_unselect</refname>
    <refpurpose>???</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_unselect</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-update">
   <refnamediv>
    <refname>dbplus_update</refname>
    <refpurpose>Update specified tuple in relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_update</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     <paramdef>array <parameter>old</parameter></paramdef>
     <paramdef>array <parameter>new</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-xlockrel">
   <refnamediv>
    <refname>dbplus_xlockrel</refname>
    <refpurpose>Request exclusive write lock on relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_xlockrel</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-xunlockrel">
   <refnamediv>
    <refname>dbplus_xunlockrel</refname>
    <refpurpose>Free exclusive write lock on relation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_xunlockrel</function></funcdef>
     <paramdef>int <parameter>relation</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>


<!-- unimplemented functions -->


  <refentry id="function.dbplus-change">
   <refnamediv>
    <refname>dbplus_change</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_change</function></funcdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>string <parameter>domain</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-find">
   <refnamediv>
    <refname>dbplus_find</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_find</function></funcdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>string <parameter>constr</parameter></paramdef>
     <paramdef>string <parameter>tname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-freelock">
   <refnamediv>
    <refname>dbplus_freelock</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_freelock</function></funcdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>string <parameter>tname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-getlock">
   <refnamediv>
    <refname>dbplus_getlock</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_getlock</function></funcdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>string <parameter>tname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-getunique">
   <refnamediv>
    <refname>dbplus_getunique</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_getunique</function></funcdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>string <parameter>varname</parameter></paramdef>
     <paramdef>int <parameter>flush</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-rchperm">
   <refnamediv>
    <refname>dbplus_rchperm</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_rchperm</function></funcdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>int <parameter>mask</parameter></paramdef>
     <paramdef>string <parameter>user</parameter></paramdef>
     <paramdef>string <parameter>group</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-rcreate">
   <refnamediv>
    <refname>dbplus_rcreate</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_rcreate</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>string <parameter>domlist</parameter></paramdef>
     <paramdef>int <parameter>flag</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-rcrtexact">
   <refnamediv>
    <refname>dbplus_rcrtexact</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_rcrtexact</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>int <parameter>flag</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-rcrtlike">
   <refnamediv>
    <refname>dbplus_rcrtlike</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_rcrtlike</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>int <parameter>flag</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-resolve">
   <refnamediv>
    <refname>dbplus_resolve</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_resolve</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>string <parameter>vname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-rkeys">
   <refnamediv>
    <refname>dbplus_rkeys</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_rkeys</function></funcdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>string <parameter>domlist</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-rquery">
   <refnamediv>
    <refname>dbplus_rquery</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_rquery</function></funcdef>
			<void/>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-rrename">
   <refnamediv>
    <refname>dbplus_rrename</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_rrename</function></funcdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>int <parameter>flag</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-rsecindex">
   <refnamediv>
    <refname>dbplus_rsecindex</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_rsecindex</function></funcdef>
     <paramdef>int <parameter>handle</parameter></paramdef>
     <paramdef>string <parameter>domlist</parameter></paramdef>
     <paramdef>int <parameter>compact</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dbplus-tcl">
   <refnamediv>
    <refname>dbplus_tcl</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dbplus_tcl</function></funcdef>
     <paramdef>int <parameter>sid</parameter></paramdef>
     <paramdef>string <parameter>script</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
   &warn.experimental.func;
    <para>
		 Not implemented yet.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim: ts=1 sw=1 et syntax=sgml
-->
