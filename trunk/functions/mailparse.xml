<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
 <reference id="ref.mailparse">
  <title>mailparse functions</title>
  <titleabbrev>mailparse functions</titleabbrev>

  <partintro>
   <para>
    &warn.experimental;
   </para>
  </partintro>

  <refentry id="function.mailparse-uudecode-all">
   <refnamediv>
    <refname>mailparse_uudecode_all</refname>
    <refpurpose>
     Scans the data from fp and extract each embedded uuencoded
     file. Returns an array listing filename information 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>mailparse_uudecode_all</function></funcdef>
      <paramdef>resource <parameter>fp</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-rfc822-parse-addresses">
   <refnamediv>
    <refname>mailparse_rfc822_parse_addresses</refname>
    <refpurpose>
     Parse addresses and returns a hash containing that data 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>mailparse_rfc822_parse_addresses</function></funcdef>
      <paramdef>string <parameter>addresses</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-determine-best-xfer-encoding">
   <refnamediv>
    <refname>mailparse_determine_best_xfer_encoding</refname>
    <refpurpose>
     Figures out the best way of encoding the content read from the
     file pointer fp, which must be seek-able 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>mailparse_determine_best_xfer_encoding</function></funcdef>
      <paramdef>resource <parameter>fp</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-stream-encode">
   <refnamediv>
    <refname>mailparse_stream_encode</refname>
    <refpurpose>
     Streams data from source file pointer, apply encoding and write
     to destfp 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>mailparse_stream_encode</function></funcdef>
      <paramdef>resource <parameter>sourcefp</parameter></paramdef>
      <paramdef>resource <parameter>destfp</parameter></paramdef>
      <paramdef>string <parameter>encoding</parameter></paramdef>      
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-msg-parse">
   <refnamediv>
    <refname>mailparse_msg_parse</refname>
    <refpurpose>Incrementally parse data into buffer </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>mailparse_msg_parse</function></funcdef>
      <paramdef>resource <parameter>rfc2045buf</parameter></paramdef>
      <paramdef>string <parameter>data</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-msg-parse-file">
   <refnamediv>
    <refname>mailparse_msg_parse_file</refname>
    <refpurpose>Parse file and return a resource representing the structure </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>mailparse_msg_parse_file</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-msg-free">
   <refnamediv>
    <refname>mailparse_msg_free</refname>
    <refpurpose>Frees a handle allocated by mailparse_msg_crea</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>mailparse_msg_free</function></funcdef>
      <paramdef>resource <parameter>rfc2045buf</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-msg-create">
   <refnamediv>
    <refname>mailparse_msg_create</refname>
    <refpurpose>Returns a handle that can be used to parse a message </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>mailparse_msg_create</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-msg-get-structure">
   <refnamediv>
    <refname>mailparse_msg_get_structure</refname>
    <refpurpose>Returns an array of mime section names in the supplied message </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>mailparse_msg_get_structure</function></funcdef>
      <paramdef>resource <parameter>rfc2045</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-msg-extract-part">
   <refnamediv>
    <refname>mailparse_msg_extract_part</refname>
    <refpurpose>
     Extracts/decodes a message section.  If callbackfunc is not
     specified, the contents will be sent to "stdout"
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>mailparse_msg_extract_part</function></funcdef>
      <paramdef>resource <parameter>rfc2045</parameter></paramdef>
      <paramdef>string <parameter>msgbody</parameter></paramdef>
      <paramdef>string
       <parameter><optional>callbackfunc</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-msg-extract-part-file">
   <refnamediv>
    <refname>mailparse_msg_extract_part_file</refname>
    <refpurpose>Extracts/decodes a message section, decoding the transfer encoding </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>mailparse_msg_extract_part_file</function></funcdef>
      <paramdef>resource <parameter>rfc2045</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>string
       <parameter><optional>callbackfunc</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-msg-get-part-data">
   <refnamediv>
    <refname>mailparse_msg_get_part_data</refname>
    <refpurpose>Returns an associative array of info about the message </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>mailparse_msg_get_part_data</function></funcdef>
      <paramdef>resource <parameter>rfc2045</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mailparse-msg-get-part">
   <refnamediv>
    <refname>mailparse_msg_get_part</refname>
    <refpurpose>Returns a handle on a given section in a mimemessage </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>mailparse_msg_get_part</function></funcdef>
      <paramdef>resource <parameter>rfc2045</parameter></paramdef>
      <paramdef>string <parameter>mimesection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
     &warn.experimental.func;
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

