 <reference id="ref.imap">
  <title>IMAP functions</title>
  <titleabbrev>IMAP</titleabbrev>

  <partintro>
   <simpara>
    To get these functions to work, you have to compile PHP with
    <option role="configure">--with-imap</option>. That requires the c-client library to be
    installed. Grab the latest version from <ulink
    url="ftp://ftp.cac.washington.edu/imap/">ftp://ftp.cac.washington.edu/imap/</ulink>
    and compile it. Then copy c-client/c-client.a to /usr/local/lib or
    some other directory on your link path and copy c-client/rfc822.h,
    mail.h and linkage.h to /usr/local/include or some other directory
    in your include path.
  </partintro>

  <refentry id="function.imap-append">
   <refnamediv>
    <refname>imap_append</refname>
    <refpurpose>Append a string message to a specified mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_append</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>mbox</parameter></paramdef>
     <paramdef>string <parameter>message</parameter></paramdef>
     <paramdef>string<parameter>flags</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns true on sucess, false on error.  
    <para>
     <function>imap_append</function> appends a string message to the
     specified mailbox <parameter>mbox</parameter>. If the optional
     <parameter>flags</parameter> is specified, writes the
     <parameter>flags</parameter> to that mailbox also.
    <para>
     When talking to the Cyrus IMAP server, you must use "\r\n" as
     your end-of-line terminator instead of "\n" or the operation will
     fail.
   </refsect1>
  </refentry>

  <refentry id="function.imap-base64">
   <refnamediv>
    <refname>imap_base64</refname>
    <refpurpose>Decode BASE64 encoded text</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_base64</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>imap_base64</function> function decodes BASE-64 encoded
     text. The decoded message is returned as a string.
   </refsect1>
  </refentry>


  <refentry id="function.imap-body">
   <refnamediv>
    <refname>imap_body</refname>
    <refpurpose>Read the message body</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_body</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>msg_number</parameter></paramdef>
     <paramdef>int <parameter>flags</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>imap_body</function> returns the body of the message,
     numbered <parameter> msg_number</parameter> in the current
     mailbox. The optional <parameter>flags</parameter> are a bit mask
     with one or more of the following:
     <itemizedlist>
      <listitem><simpara>
	FT_UID - The msgno is a UID
      <listitem><simpara>
	FT_PEEK - Do not set the \Seen flag if not already set
      <listitem><simpara>
	FT_INTERNAL - The return string is in internal format, will
	not canonicalize to CRLF.
     </itemizedlist>
   </refsect1>
  </refentry>


  <refentry id="function.imap-check">
   <refnamediv>
    <refname>imap_check</refname>
    <refpurpose>Check current mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_check</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns information about the current mailbox. Returns FALSE on
     failure.  
    <para> 
     The <function>imap_check</function> function checks the current
     mailbox status on the server and returns the information in an
     object with following properties.
    <para>
     <informalexample>
      <literallayout>
        Date : date of the message
	Driver : driver
	Mailbox : name of the mailbox	
	Nmsgs : number of messages	
	Recent : number of recent messages
      </literallayout>
     </informalexample>
   </refsect1>
  </refentry>



  <refentry id="function.imap-close">
   <refnamediv>
    <refname>imap_close</refname>
    <refpurpose>Close an IMAP stream</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_close</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>flags</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Close the imap stream. Takes an optional
     <parameter>flag</parameter> CL_EXPUNGE, which will silently
     expunge the mailbox before closing.
   </refsect1>
  </refentry>

  <refentry id="function.imap-createmailbox">
   <refnamediv>
    <refname>imap_createmailbox</refname>
    <refpurpose>Create a new mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_createmailbox</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>mbox</parameter></paramdef>
    </funcsynopsis>
    <para>  
     <function>imap_createmailbox</function> creates a new mailbox
     specified by <parameter>mbox</parameter>.
    <para>
     Returns true on success and false on error.
   </refsect1>
  </refentry>


  <refentry id="function.imap-delete">
   <refnamediv>
    <refname>imap_delete</refname>
    <refpurpose>Mark a messge for deletion from current mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_delete</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>msg_number</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns true.
    <para>  
     <function>imap_delete</function> function marks message pointed
     by <parameter>msg_number</parameter> for deletion. Actual
     deletion of the messages is done by
     <function>imap_expunge</function>.
   </refsect1>
  </refentry>


  <refentry id="function.imap-deletemailbox">
   <refnamediv>
    <refname>imap_deletemailbox</refname>
    <refpurpose>Delete a mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_deletemailbox</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>mbox</parameter></paramdef>
    </funcsynopsis>
    <para> 
     <function>imap_deletemailbox</function> deletes the specified
     mailbox.
    <para>
     Returns true on success and false on error.
   </refsect1>
  </refentry>


  <refentry id="function.imap-expunge">
   <refnamediv>
    <refname>imap_expunge</refname>
    <refpurpose>Delete all messages marked for deletion</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_expunge</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
    </funcsynopsis>
    <para>  
     <function>imap_expunge</function> deletes all the messages marked
     for deletion by <function>imap_delete</function>.
    <para>
     Returns true.
   </refsect1>
  </refentry>


  <refentry id="function.imap-fetchbody">
   <refnamediv>
    <refname>imap_fetchbody</refname>
    <refpurpose>Fetch a particular section of the body of the
    message</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_fetchbody</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>msg_number</parameter></paramdef>
     <paramdef>string <parameter>part_number</parameter></paramdef>
     <paramdef>flags <parameter>flags</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function causes a fetch of a particular section of the body
     of the specified messages as a text string and returns that text
     string. The section specification is a string of integers
     delimited by period which index into a body part list as per the
     IMAP4 specification. Body parts are not decoded by this function.
    <para>
     The options for <function>imap_fetchbody </function>e a bitmask
     with one or more of the following
     <itemizedlist>
      <listitem><simpara>
	FT_UID - The msgono is a UID
      <listitem><simpara>
	FT_PEEK - Do not set the \Seen flag if not already set
      <listitem><simpara>
	FT_UID - The return string is in "internal" format, without
	any attempt to canonicalize CRLF
     </itemizedlist>
   </refsect1>
  </refentry>


  <refentry id="function.imap-fetchstructure">
   <refnamediv>
    <refname>imap_fetchstructure</refname>
    <refpurpose>Read the structure of a particular message</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_fetchstructure</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>msg_number</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function causes a fetch of all the structured information
     for the given <parameter>msg_number</parameter>. The returned
     value is an object with following elements.
    <para>  

     <informalexample>
      <literallayout>
	 type, encoding, ifsubtype, subtype, ifdescription, description, ifid,
	 id, lines, bytes, ifparameters
      </literallayout>
     </informalexample>
    <para>
     It also returns an array of objects called parameters[]. This
     object has following properties.

     <informalexample>
      <literallayout>
	attribute, value
      </literallayout>
     </informalexample>
     In case of multipart, it also returns an array of objects of all
     the properties, called parts[].
   </refsect1>
  </refentry>


  <refentry id="function.imap-header">
   <refnamediv>
    <refname>imap_header</refname>
    <refpurpose>Read the header of the message</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>object <function>imap_header</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>msg_number</parameter></paramdef>
     <paramdef>int <parameter>fromlength</parameter></paramdef>
     <paramdef>int <parameter>subjectlength</parameter></paramdef>
     <paramdef>int <parameter>defaulthost</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function returns an object of various header elements
    <para>  
     <informalexample>
      <literallayout>
       remail,date,Date,subject,Subject,in_reply_to,message_id,newsgroups,
       followup_to,references

message flags:
   Unseen - 'U' if unseen, ' ' if seen
   Answered - 'A' if answered, ' ' if unanswered
   Deleted - 'D' if deleted, ' ' if not deleted
   Draft - 'X' if draft, ' ' if not draft
   Flagged - 'F' if flagged, ' ' if not flagged

toaddress (full to: line, up to 1024 characters)

to[] (returns an array of objects from the To line, containing:)
   personal
   adl
   mailbox
   host

fromaddress (full from: line, up to 1024 characters)

from[] (returns an array of objects from the From line, containing:)
   personal
   adl
   mailbox
   host

ccaddress (full cc: line, up to 1024 characters)
cc[] (returns an array of objects from the Cc line, containing:)
   personal
   adl
   mailbox
   host

bccaddress (full bcc line, up to 1024 characters)
bcc[] (returns an array of objects from the Bcc line, containing:)
   personal
   adl
   mailbox
   host

reply_toaddress (full reply_to: line, up to 1024 characters)
reply_to[] (returns an array of objects from the Reply_to line, containing:)
   personal
   adl
   mailbox
   host

senderaddress (full sender: line, up to 1024 characters)
sender[] (returns an array of objects from the sender line, containing:)
   personal
   adl
   mailbox
   host

return_path (full return-path: line, up to 1024 characters)
return_path[] (returns an array of objects from the return_path line, containing:)
   personal
   adl
   mailbox
   host

udate ( mail message date in unix time)

fetchfrom (from line formatted to fit <parameter>fromlength</parameter> characters)
fetchsubject (subject line formatted to fit <parameter>subjectlength</parameter> characters)
      </literallayout>
     </informalexample>
   </refsect1>
  </refentry>

  <refentry id="function.imap-headers">
   <refnamediv>
    <refname>imap_headers</refname>
    <refpurpose>Returns headers for all messages in a mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_headers</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns an array of string formatted with header info. One
     element per mail message.
   </refsect1>
  </refentry>


  <refentry id="function.imap-listmailbox">
   <refnamediv>
    <refname>imap_listmailbox</refname>
    <refpurpose>Read the list of mailboxes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_listmailbox</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>ref</parameter></paramdef>
     <paramdef>string <parameter>pat</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns an array containing the names of the mailboxes.
   </refsect1>
  </refentry>


  <refentry id="function.imap-getmailboxes">
   <refnamediv>
    <refname>imap_getmailboxes</refname>
    <refpurpose>Read the list of mailboxes, returning detailed information on each one</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_getmailboxes</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>ref</parameter></paramdef>
     <paramdef>string <parameter>pat</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns an array of objects containing mailbox information. Each
     object has the attributes <parameter>name</parameter>, specifying
     the full name of the mailbox; <parameter>delimiter</parameter>,
     which is the hierarchy delimiter for the part of the hierarchy
     this mailbox is in; and
     <parameter>attributes</parameter>. <parameter>Attributes</parameter>
     is a bitmask that can be tested against:
    <itemizedlist>
     <listitem><simpara>
	LATT_NOINFERIORS - This mailbox has no "children" (there are no mailboxes below this one)
     <listitem><simpara>
	LATT_NOSELECT - This is only a container, not a mailbox - you cannot open it.
     <listitem><simpara>
	LATT_MARKED - This mailbox is marked. Only used by UW-IMAPD.
     <listitem><simpara>
	LATT_UNMARKED - This mailbox is not marked. Only used by UW-IMAPD.
    </itemizedlist>
    <para>
     <parameter>ref</parameter> should normally be just the IMAP
     server, in the form: {imap_server:imap_port}, and
     <parameter>pattern</parameter> specifies where in the mailbox
     hierarchy to start searching. If you want all mailboxes, pass
     <parameter>pattern</parameter> as an empty string.
    <para>
     There are two special characters you can pass as part of the
     <parameter>pattern</parameter>: '*' and '%'. '*' means to return
     all mailboxes. If you pass <parameter>pattern</parameter> as '*',
     you will get a list of the entire mailbox hierarchy. '%' means to
     return the current level only. '%' as the
     <parameter>pattern</parameter> parameter will return only the top
     level mailboxes; '~/mail/%' on UW_IMAPD will return every mailbox
     in the ~/mail directory, but none in subfolders of that
     directory.
   </refsect1>
  </refentry>


  <refentry id="function.imap-listsubscribed">
   <refnamediv>
    <refname>imap_listsubscribed</refname>
    <refpurpose>List all the subscribed mailboxes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_listsubscribed</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>ref</parameter></paramdef>
     <paramdef>string <parameter>pattern</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns an array of all the mailboxes that you have
     subscribed. The <parameter>ref</parameter> and
     <parameter>pattern</parameter> arguments specify the base
     location to search from and the pattern the mailbox name must
     match.
   </refsect1>
  </refentry>


  <refentry id="function.imap-getsubscribed">
   <refnamediv>
    <refname>imap_getsubscribed</refname>
    <refpurpose>List all the subscribed mailboxes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_getsubscribed</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>ref</parameter></paramdef>
     <paramdef>string <parameter>pattern</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function is identical to
     <function>imap_getmailboxes</function>, except that it only
     returns mailboxes that the user is subscribed to.
   </refsect1>
  </refentry>


  <refentry id="function.imap-mail-copy">
   <refnamediv>
    <refname>imap_mail_copy</refname>
    <refpurpose>Copy specified messages to a mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_mail_copy</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>msglist</parameter></paramdef>
     <paramdef>string <parameter>mbox</parameter></paramdef>
     <paramdef>int <parameter>flags</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns true on success and false on error.  
    <para> 
     Copies mail messages specified by <parameter>msglist</parameter>
     to specified mailbox. <parameter>msglist</parameter> is a range
     not just message numbers.
    <para>
     flags is a bitmask of one or more of
     <itemizedlist>
      <listitem><simpara>
	CP_UID - the sequence numbers contain UIDS
      <listitem><simpara>
	CP_MOVE - Delete the messages from the current mailbox after
	copying
     </itemizedlist>
   </refsect1>
  </refentry>


  <refentry id="function.imap-mail-move">
   <refnamediv>
    <refname>imap_mail_move</refname>
    <refpurpose>Move specified messages to a mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_mail_move</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>msglist</parameter></paramdef>
     <paramdef>string <parameter>mbox</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Moves mail messages specified by <parameter>msglist</parameter>
     to specified mailbox. <parameter>msglist</parameter> is a range
     not just message numbers.
    <para>
     Returns true on success and false on error.
   </refsect1>
  </refentry>


  <refentry id="function.imap-num-msg">
   <refnamediv>
    <refname>imap_num_msg</refname>
    <refpurpose>Gives the number of messages in the current
    mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_num_msg</function></funcdef>
     <paramdef>int <parameter>stream_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     Return the number of messages in the current mailbox.
   </refsect1>
  </refentry>


  <refentry id="function.imap-num-recent">
   <refnamediv>
    <refname>imap_num_recent</refname>
    <refpurpose>Gives the number of recent messages in current
    mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_num_recent</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns the number of recent messages in the current mailbox.
    <para>  
   </refsect1>
  </refentry>


  <refentry id="function.imap-open">
   <refnamediv>
    <refname>imap_open</refname>
    <refpurpose>Open an IMAP stream to a mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_open</function></funcdef>
     <paramdef>string <parameter>mailbox</parameter></paramdef>
     <paramdef>string <parameter>username</parameter></paramdef>
     <paramdef>string <parameter>password</parameter></paramdef>
     <paramdef>int <parameter>flags</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns an IMAP stream on success and false on error.  This
     function can also be used to open streams to POP3 and NNTP
     servers.  To connect to an IMAP server running on port 143 on the
     local machine, do the following: 
     <informalexample>
      <programlisting role=php> 
$mbox = imap_open("{localhost:143}INBOX","user_id","password");
      </programlisting>
     </informalexample>

     To connect to a POP3 server on port 110 on the local server, use:

     <informalexample>
      <programlisting>
$mbox = imap_open("{localhost/pop3:110}INBOX","user_id","password");
      </programlisting>
     </informalexample>

     To connect to an NNTP server on port 119 on the local server, use:
     
     <informalexample>
      <programlisting>
$nntp = imap_open("{localhost/nntp:119}comp.test","","");
      </programlisting>
     </informalexample>

     To connect to a remote server replace "localhost" with the name
     or the IP address of the server you want to connect to.
    <para>
     The options are a bit mask with one or more of the following:
     <itemizedlist>
      <listitem><simpara>
	OP_READONLY - Open mailbox read-only
      <listitem><simpara>
	OP_ANONYMOUS - Dont use or update a .newsrc for news
      <listitem><simpara>
	OP_HALFOPEN - For IMAP and NNTP names, open a connection but
	dont open a mailbox
      <listitem><simpara>
	CL_EXPUNGE - Expunge mailbox automatically upon mailbox close
     </itemizedlist>
   </refsect1>
  </refentry>


  <refentry id="function.imap-ping">
   <refnamediv>
    <refname>imap_ping</refname>
    <refpurpose>Check if the IMAP stream is still active</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_ping</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
    </funcsynopsis>
    <para>  
     Returns true if the stream is still alive, false otherwise.
    <para>
     <function>imap_ping</function> function pings the stream to see
     it is still active. It may discover new mail; this is the
     preferred method for a periodic "new mail check" as well as a
     "keep alive" for servers which have inactivity timeout.
   </refsect1>
  </refentry>


  <refentry id="function.imap-renamemailbox">
   <refnamediv>
    <refname>imap_renamemailbox</refname>
    <refpurpose>Rename an old mailbox to new mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_renamemailbox</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>old_mbox</parameter></paramdef>
     <paramdef>string <parameter>new_mbox</parameter></paramdef>
    </funcsynopsis>
    <para>  
     This function renames on old mailbox to new mailbox.
    <para>
     Returns true on success and false on error.
   </refsect1>
  </refentry>


  <refentry id="function.imap-reopen">
   <refnamediv>
    <refname>imap_reopen</refname>
    <refpurpose>Reopen IMAP stream to new mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_reopen</function></funcdef>
     <paramdef>string <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>mailbox</parameter></paramdef>
     <paramdef>string
     <parameter><optional>flags</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns true on success and false on error.
    <para>  
     This function reopens the specified stream to new mailbox.
    <para>
     The options are a bit mask with one or more of the following:
     <itemizedlist>
      <listitem><simpara>
	OP_READONLY - Open mailbox read-only
      <listitem><simpara>
	OP_ANONYMOUS - Dont use or update a .newsrc for news
      <listitem><simpara>
	OP_HALFOPEN - For IMAP and NNTP names, open a connection but
	dont open a mailbox
      <listitem><simpara>
	CL_EXPUNGE - Expunge mailbox automatically upon mailbox close
     </itemizedlist>  
   </refsect1>
  </refentry>


  <refentry id="function.imap-subscribe">
   <refnamediv>
    <refname>imap_subscribe</refname>
    <refpurpose>Subscribe to a mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_subscribe</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>mbox</parameter></paramdef>
    </funcsynopsis>
    <para>  
     Subscribe to a new mailbox.
    <para>
     Returns true on success and false on error.
   </refsect1>
  </refentry>


  <refentry id="function.imap-undelete">
   <refnamediv>
    <refname>imap_undelete</refname>
    <refpurpose>Unmark the message which is marked deleted</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_undelete</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>msg_number</parameter></paramdef>
    </funcsynopsis>
    <para> 
     This function removes the deletion flag for a specified message,
     which is set by <function>imap_delete</function>.
    <para>
     Returns true on success and false on error.
   </refsect1>
  </refentry>


  <refentry id="function.imap-unsubscribe">
   <refnamediv>
    <refname>imap_unsubscribe</refname>
    <refpurpose>Unsubscribe from a mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_unsubscribe</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>mbox</parameter></paramdef>
    </funcsynopsis>
    <para>  
     Unsubscribe from a specified mailbox.
    <para>
     Returns true on success and false on error.
   </refsect1>
  </refentry>

  <refentry id="function.imap-qprint">
   <refnamediv>
    <refname>imap_qprint</refname>
    <refpurpose>Convert a quoted-printable string to an 8 bit
    string</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_qprint</function></funcdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcsynopsis>
    <para>  
     Convert a quoted-printable string to an 8 bit string
    <para>
     Returns an 8 bit (binary) string
   </refsect1>
  </refentry>

  <refentry id="function.imap-8bit">
   <refnamediv>
    <refname>imap_8bit</refname>
    <refpurpose>Convert an 8bit string to a quoted-printable string.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_8bit</function></funcdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcsynopsis>
    <para>  
     Convert an 8bit string to a quoted-printable string.
    <para>
     Returns a quoted-printable string
   </refsect1>
  </refentry>

  <refentry id="function.imap-binary">
   <refnamediv>
    <refname>imap_binary</refname>
    <refpurpose>Convert an 8bit string to a base64 string.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_binary</function></funcdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcsynopsis>
    <para>  
     Convert an 8bit string to a base64 string.
    <para>
    Returns a base64 string
   </refsect1>
  </refentry>

  <refentry id="function.imap-scanmailbox">
   <refnamediv>
    <refname>imap_scanmailbox</refname>
    <refpurpose>Read the list of mailboxes, takes a string to search
    for in the text of the mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_scanmailbox</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns an array containing the names of the mailboxes that have
     <parameter>string</parameter> in the text of the mailbox.
   </refsect1>
  </refentry>

  <refentry id="function.imap-mailboxmsginfo">
   <refnamediv>
    <refname>imap_mailboxmsginfo</refname>
    <refpurpose>Get information about the current mailbox</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_mailboxmsginfo</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns information about the current mailbox. Returns FALSE on failure.
    <para>  
     The <function>imap_mailboxmsginfo</function> function checks the
     current mailbox status on the server and returns the information
     in an object with following properties.
    <para>
     <informalexample>
      <literallayout>
       Date : date of the message
       Driver : driver
       Mailbox : name of the mailbox	
       Nmsgs : number of messages	
       Recent : number of recent messages
       Unread : number of unread messages
       Size : mailbox size
      </literallayout>
     </informalexample>
   </refsect1>
  </refentry>


  <refentry id="function.imap-rfc822-write-address">
   <refnamediv>
    <refname>imap_rfc822_write_address</refname>
    <refpurpose>Returns a properly formatted email address given the
    mailbox, host, and personal info.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_rfc822_write_address</function></funcdef>
     <paramdef>string <parameter>mailbox</parameter></paramdef>
     <paramdef>string <parameter>host</parameter></paramdef>
     <paramdef>string <parameter>personal</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns a properly formatted email address given the mailbox,
     host, and personal info.
   </refsect1>
  </refentry>

  <refentry id="function.imap-rfc822-parse-adrlist">
   <refnamediv>
    <refname>imap_rfc822_parse_adrlist</refname>
    <refpurpose>Parses an address string</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_rfc822_parse_adrlist</function></funcdef>
     <paramdef>string <parameter>address</parameter></paramdef>
     <paramdef>string <parameter>default_host</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function parses the address tring and for each address,
     returns an array of objects.  The 4 objects are:
    <para>
     <informalexample>
      <literallayout>
     mailbox - the mailbox name (username)
     host   - the host name
     personal - the personal name
     adl - at domain source route
      </literallayout>
     </informalexample>
   </refsect1>
  </refentry>

  <refentry id="function.imap-setflag-full">
   <refnamediv>
    <refname>imap_setflag_full</refname>
    <refpurpose>Sets flags on messages</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_setflag_full</function></funcdef>
     <paramdef>int <parameter>stream</parameter></paramdef>
     <paramdef>string <parameter>sequence</parameter></paramdef>
     <paramdef>string <parameter>flag</parameter></paramdef>
     <paramdef>string <parameter>options</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function causes a store to add the specified flag to the
     flags set for the messages in the specified sequence.
    <para>
     The options are a bit mask with one or more of the following:
     <informalexample>
      <literallayout>
        ST_UID          The sequence argument contains UIDs instead of
                         sequence numbers
      </literallayout>
     </informalexample>
   </refsect1>
  </refentry>

  <refentry id="function.imap-clearflag-full">
   <refnamediv>
    <refname>imap_clearflag_full</refname>
    <refpurpose>Clears flags on messages</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_clearflag_full</function></funcdef>
     <paramdef>int <parameter>stream</parameter></paramdef>
     <paramdef>string <parameter>sequence</parameter></paramdef>
     <paramdef>string <parameter>flag</parameter></paramdef>
     <paramdef>string <parameter>options</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function causes a store to delete the specified flag to the
     flags set for the messages in the specified sequence.
    <para>
     The options are a bit mask with one or more of the following:
     <informalexample>
      <literallayout>
        ST_UID          The sequence argument contains UIDs instead of
                         sequence numbers
      </literallayout>
     </informalexample>
   </refsect1>
  </refentry>

  <refentry id="function.imap-sort">
   <refnamediv>
    <refname>imap_sort</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_sort</function></funcdef>
     <paramdef>int <parameter>stream</parameter></paramdef>
     <paramdef>int <parameter>criteria</parameter></paramdef>
     <paramdef>int <parameter>reverse</parameter></paramdef>
     <paramdef>int <parameter>options</parameter></paramdef>
    </funcsynopsis>
    <para>
     Returns an array of message numbers sorted by the given
     parameters
    <para>
     Rev is 1 for reverse-sorting.
    <para>
     Criteria can be one (and only one) of the following:
     <informalexample>
      <literallayout>
                SORTDATE        message Date
                SORTARRIVAL     arrival date
                SORTFROM        mailbox in first From address
                SORTSUBJECT     message Subject
                SORTTO          mailbox in first To address 
                SORTCC          mailbox in first cc address 
                SORTSIZE        size of message in octets
      </literallayout>
     </informalexample>
    <para>
     The flags are a bitmask of one or more of the following:
     <informalexample>
      <literallayout>
        SE_UID          Return UIDs instead of sequence numbers
        SE_NOPREFETCH   Don't prefetch searched messages.
      </literallayout>
     </informalexample>
   </refsect1>
  </refentry>


  <refentry id="function.imap-fetchheader">
   <refnamediv>
    <refname>imap_fetchheader</refname>
    <refpurpose>Returns header for a message</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string<function>imap_fetchheader</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>msgno</parameter></paramdef>
     <paramdef>int <parameter>flags</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function causes a fetch of the complete, unfiltered RFC 822
     format header of the specified message as a text string and
     returns that text string.
    <para>
     The options are:
     <informalexample>
      <literallayout>
        FT_UID          The msgno argument is a UID 
        FT_INTERNAL     The return string is in "internal" format,
                         without any attempt to canonicalize to CRLF
                          newlines
        FT_PREFETCHTEXT The RFC822.TEXT should be pre-fetched at the
                         same time.  This avoids an extra RTT on an
                         IMAP connection if a full message text is
                         desired (e.g. in a "save to local file"
                         operation)
      </literallayout>
     </informalexample>
   </refsect1>
  </refentry>

  <refentry id="function.imap-uid">
   <refnamediv>
    <refname>imap_uid</refname>
    <refpurpose>This function returns the UID for the given message
    sequence number.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_uid</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>msgno</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function returns the UID for the given message sequence
     number. It is the inverse of <function>imap_msgno</function>.
   </refsect1>
  </refentry>


  <refentry id="function.imap-msgno">
   <refnamediv>
    <refname>imap_msgno</refname>
    <refpurpose>This function returns the message sequence number for the given UID.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>imap_msgno</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>int <parameter>uid</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function returns the message sequence number for the given
     UID. It is the inverse of <function>imap_uid</function>.
   </refsect1>
  </refentry>


  <refentry id="function.imap-search">
   <refnamediv>
    <refname>imap_search</refname>
    <refpurpose>This function returns an array of messages matching the given search criteria.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_search</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>criteria</parameter></paramdef>
     <paramdef>int <parameter>flags</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function performs a search on the mailbox currently opened
     in the given imap stream. <parameter>criteria</parameter> is a
     string, delimited by spaces, in which the following keywords are
     allowed. Any multi-word arguments (eg FROM "joe smith") must be
     quoted.
    <itemizedlist>  
     <listitem><simpara>
      ALL - return all messages matching the rest of the criteria
     <listitem><simpara>
      ANSWERED - match messages with the \\ANSWERED flag set
     <listitem><simpara>
      BCC "string" - match messages with "string" in the Bcc: field
     <listitem><simpara>
      BEFORE "date" - match messages with Date: before "date"
     <listitem><simpara>
      BODY "string" - match messages with "string" in the body of the message
     <listitem><simpara>
      CC "string" - match messages with "string" in the Cc: field
     <listitem><simpara>
      DELETED - match deleted messages
     <listitem><simpara>
      FLAGGED - match messages with the \\FLAGGED (sometimes referred to as Important or Urgent) flag set
     <listitem><simpara>
      FROM "string" - match messages with "string" in the From: field
     <listitem><simpara>
      KEYWORD "string" - match messages with "string" as a keyword
     <listitem><simpara>
      NEW - match new messages
     <listitem><simpara>
      OLD - match old messages
     <listitem><simpara>
      ON "date" - match messages with Date: matching "date"
     <listitem><simpara>
      RECENT - match messages with the \\RECENT flag set
     <listitem><simpara>
      SEEN - match messages that have been read (the \\SEEN flag is set)
     <listitem><simpara>
      SINCE "date" - match messages with Date: after "date"
     <listitem><simpara>
      SUBJECT "string" - match messages with "string" in the Subject:
     <listitem><simpara>
      TEXT "string" - match messages with text "string"
     <listitem><simpara>
      TO "string" - match messages with "string" in the To:
     <listitem><simpara>
      UNANSWERED - match messages that have not been answered
     <listitem><simpara>
      UNDELETED - match messages that are not deleted
     <listitem><simpara>
      UNFLAGGED - match messages that are not flagged
     <listitem><simpara>
      UNKEYWORD "string" - match messages that do not have the keyword "string"
     <listitem><simpara>
      UNSEEN - match messages which have not been read yet
    </itemizedlist>
    <para>
     For example, to match all unanswered messages sent by Mom, you'd
     use: "UNANSWERED FROM mom". Searches appear to be case
     insensitive. This list of criteria is from a reading of the UW
     c-client source code and may be uncomplete or
     inaccurate. Searcher beware.
    <para>
     Valid values for flags are SE_UID, which causes the returned
     array to contain UIDs instead of messages sequence numbers.
   </refsect1>
  </refentry>


  <refentry id="function.imap-last-error">
   <refnamediv>
    <refname>imap_last_error</refname>
    <refpurpose>This function returns the last IMAP error (if any) that occurred during this page request.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>imap_last_error</function></funcdef>
     <paramdef>void </paramdef>
    </funcsynopsis>
    <para>
     This function returns the full text of the last IMAP error
     message that occurred on the current page. The error stack is
     untouched; calling <function>imap_last_error</function>
     subsequently, with no intervening errors, will return the same
     error.
   </refsect1>
  </refentry>


  <refentry id="function.imap-errors">
   <refnamediv>
    <refname>imap_errors</refname>
    <refpurpose>This function returns all of the IMAP errors (if any) that have occurred during this page request or since the error stack was reset.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_errors</function></funcdef>
     <paramdef>void </paramdef>
    </funcsynopsis>
    <para>
     This function returns an array of all of the IMAP error messages
     generated since the last <function>imap_errors</function> call,
     or the beginning of the page. When
     <function>imap_errors</function> is called, the error stack is
     subsequently cleared.
   </refsect1>
  </refentry>


  <refentry id="function.imap-alerts">
   <refnamediv>
    <refname>imap_alerts</refname>
    <refpurpose>This function returns all IMAP alert messages (if any) that have occurred during this page request or since the alert stack was reset.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>imap_alerts</function></funcdef>
     <paramdef>void </paramdef>
    </funcsynopsis>
    <para>
     This function returns an array of all of the IMAP alert messages
     generated since the last <function>imap_alerts</function> call,
     or the beginning of the page. When
     <function>imap_alerts</function> is called, the alert stack is
     subsequently cleared. The IMAP specification requires that these
     messages be passed to the user.
   </refsect1>
  </refentry>


  <refentry id="function.imap-status">
   <refnamediv>
    <refname>imap_status</refname>
    <refpurpose>This function returns status information on a mailbox other than the current one.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>object <function>imap_status</function></funcdef>
     <paramdef>int <parameter>imap_stream</parameter></paramdef>
     <paramdef>string <parameter>mailbox</parameter></paramdef>
     <paramdef>int <parameter>options</parameter></paramdef>
    </funcsynopsis>
    <para>
     This function returns an object containing status information. Valid flags are:
    <itemizedlist>
     <listitem><simpara>
      SA_MESSAGES - set status->messages to the number of messages in the mailbox
     <listitem><simpara>
      SA_RECENT - set status->recent to the number of recent messages in the mailbox
     <listitem><simpara>
      SA_UNSEEN - set status->unseen to the number of unseen (new) messages in the mailbox
     <listitem><simpara>
      SA_UIDNEXT - set status->uidnext to the next uid to be used in the mailbox
     <listitem><simpara>
      SA_UIDVALIDITY - set status->uidvalidity to a constant that changes when uids for the mailbox may no longer be valid
     <listitem><simpara>
      SA_ALL - set all of the above
    </itemizedlist>
    <para>
     status->flags is also set, which contains a bitmask which can be
     checked against any of the above constants.
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
