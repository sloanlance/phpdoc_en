<?xml version="1.0" encoding="iso-8859-9"?>
<!-- $Revision: 1.40 $ -->
 <chapter id="introduction">
  <title>Giriþ</title>

  <sect1 id="intro-whatis">
   <title>PHP nedir?</title>
   <para>
    <acronym>PHP</acronym> (açýlýmý "PHP: Hypertext
    Preprocessor") geniþ bir kitle tarafýndan kullanýlan,
    özellikle web üzerinde geliþtirme için tasarlanmýþ bir betik dilidir.
    PHP kodu HTML içine gömülebilir biçimde tasarlanmýþtýr.
   </para>
   <para>
    Cevap basit gözükebilir, ama tam olarak ne anlama gelmektedir? Bir örnek:
   </para>
   <para>
    <example>
     <title>Giriþ örneði</title>
     <programlisting role="php">
<![CDATA[
<html>
    <head>
        <title>Örnek</title>
    </head>
    <body>

        <?php 
        echo "Merhaba, ben bir PHP betiðiyim!"; 
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
   
    Bir PHP betiðinin (scriptinin) Perl ya da C gibi dillerden ne kadar farklý bir yapýda olduðuna dikkat edin.
    HTML kodu yaratmak için bir sürü kod yazacaðýnýza, istediðiniz iþi yapan bir PHP kodu yazýp onu
    HTML kodunun içine gömüyorsunuz (bu örnekte, yapýlan iþ ekrana yazý yazmak).
    PHP kodu <link linkend="language.basic-syntax.phpmode">özel baþlangýç ve bitiþ etiketleri</link> arasýna yazýlýr.
    Bu etiketler "PHP kipine" rahatlýkla girip çýkabilmenizi saðlarlar.
   </para>
   <para>
   PHP&apos;yi Javascript gibi kullanýcý tarafýnda çalýþan dillerden ayýran,
   sunucu tarafýnda çalýþtýrýlýyor olmasýdýr. Yukardaki örnekteki kodu
   kendi sunucunuzda çalýþtýrýrsanýz, sitenize baðlanan kullanýcýlar kodu
   göremeyecekler ve müdahale edemeyecekler, yalnýzca sonucu görebileceklerdir.
   Dilerseniz web sunucunuzu bütün HTML dosyalarýnýzý PHP dosyasý olarak görüp
   iþleyecek hale bile getirebilirsiniz. Buna raðmen kullanýcýlar sizin gerçekte
   sunucu taraflý bir uygulama kullandýðýnýzý fark edemeyebilirler.
   </para>
   <para>
    PHP kullanmanýn en güzel yanlarýndan biri, yeni kullanýcýlar için öðreniminin oldukça
    kolay olmasý ve ayný zamanda profesyonel kullanýcýlar için ileri seviyede
    özellikler içermesidir. PHP&apos;nin uzun özellikler listesini okumaktan korkmayýn.
    Kýsa sürede PHP ile programlamaya baþlayabilir ve birkaç saat içersinde
    basit programlar yazmaya baþlayabilirsiniz.
   </para>
   <para>
   PHP&apos;nin geliþimi sunucu-taraflý programlamaya odaklanmýþsa da, çok daha fazlasýný
   yapmanýza olanak tanýyan araçlara da sahiptir.
   <link linkend="intro-whatcando">PHP neler yapabilir?</link> bölümünden
   bu araçlar hakkýnda daha fazla bilgiye ulaþabilirsiniz. Eðer yalnýzca web programlama
   ile ilgileniyorsanýz, <link linkend="tutorial">baþlangýç eðitmeni</link> bölümünden
   devam edebilirsiniz.
   </para>
  </sect1>

  <sect1 id="intro-whatcando">
   <title>PHP neler yapabilir?</title>
   <para>Her þeyi. PHP temel olarak sunucu-taraflý programlamaya odaklanmýþtýr,
   bu nedenle CGI uygulamalarýnýn yaptýðý her þeyi, örneðin formdan veri toplama,
   dinamik sayfa içeriði yaratma, ya da çerez alýp gönderme gibi iþlemleri yapabilirsiniz.
   Ancak PHP bunlardan çok daha fazlasýný yapabilecek kapasitededir.
   </para>
   <para>
    PHP betiklerinin kullanýldýðý üç temel alan vardýr.
    <itemizedlist>
     <listitem>
      <simpara>
      Sunucu-taraflý programlama. Bu PHP için en geleneksel ve en temel olan alandýr.
      Sunucu-taraflý programlama için üç þeye sahip olmanýz gerekir. PHP motoru (CGÝ ya da sunucu modülü),
      bir web sunucu ve bir web tarayýcýsý. Web sunucusunu PHP&apos;den anlar þekilde kurmanýz
      ve çalýþtýrmanýz gerekir. PHP uygulamasýnýn çýktýsýna web tarayýcýsý üzerinden eriþebilirsiniz.
      <link linkend="install">Kurulum bilgileri</link> bölümünden bununla ilgili daha fazla bilgiye ulaþabilirsiniz.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
      Komut satýrý uygulamalarý. Bir PHP uygulamasýný komut satýrýndan hiçbir sunucu ya da tarayýcý uygulama
      kullanmadan çalýþtýrabilirsiniz. Burada tek ihtiyacýnýz olan PHP motorudur. Bu tip kullaným cron
      üzerinden (Windows eþdeðeri görev yöneticisi) düzenli çalýþtýrýlan iþlemler ya da basit metin-iþlem
      görevleri için idealdir. <link linkend="features.commandline">PHP&apos;nin komut satýrýnda kullanýmý</link>
      bölümünden daha detaylý bilgiye ulaþmanýz mümkün.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
      Ýstemci tarafýnda çalýþan grafik arayüze sahip uygulamalar.
      PHP için görsel uygulamalarýn yazýlabileceði en iyi dil diyemeyiz, ancak PHP&apos;yi iyi biliyorsanýz
      ve PHP&apos;nin birtakým ileri seviye özelliklerini kendi istemci taraflý uygulamalarýnýzda
      kullanmak istiyorsanýz, PHP-GTK eklentisini bu tip programlar yazmak için kullanabilirsiniz.
      Bu þekilde platformdan baðýmsýz uygulamalar yazma þansýna da sahip olmuþ olacaksýnýz.
      PHP-GTK, PHP için bir eklentidir ve ana daðýtýmda yer almýyor.
      PHP-GTK ilginizi çektiyse, <ulink url="&url.php.gtk;">kendi web sitesini</ulink> ziyaret edebilirsiniz.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
   PHP bütün büyük iþletim sistemlerinde, Linux, birçok Unix türevi (HP-UX, Solaris, OpenBSD vb.),
   Microsoft Windows, Mac OS X, RÝSC OS dahil olmak üzere çeþitli platformlarda çalýþabilir.
   PHP benzer biçimde bugün yaygýn biçimde kullanýlan web sunucularýnýn büyük kýsmýný destekler.
   Bunlara Apache, Microsoft IIS, Microsoft PWS, Netscape ve iPlanet Sunucularý,
   Oreilly Website Pro, Caudium, Xitami, OmniHTTPD ve daha birçok sunucuyu örnek gösterebiliriz.
   Bu sunucularýn çoðunluðunda PHP modül olarak kullanýlabilir,
   geri kalanlarýnda da CGI standardý kullanýlarak PHP bir CGI iþleyici olarak çalýþtýrýlabilir.
   </para>
   <para>
    Sonuç olarak, PHP ile iþletim sistemi ve web sunucusu seçme özgürlüðüne sahipsiniz.
    Dahasý, hangi programlama yöntemini kullanacaðýnýza, fonksiyonel yaklaþýmý mý
    yoksa nesne yönelimli yaklaþýmý mý yoksa her ikisini birden mi kullanacaðýnýza kendiniz karar verebilirsiniz.
    Bütün OOP (nesne yönelimli programlama) özellikleri PHP&apos;nin þu andaki sürümünde
    varolmasa da, birçok kod kütüphanesi ve büyük uygulama (PEAR kütüphanesi dahil) OOP kullanýlarak yazýlmýþtýr.
   </para>
   <para>
   PHP yalnýzca HTML çýktý üretmekle sýnýrlý deðildir. PHP&apos;nin yetenekleri arasýnda resim çýktýsý üretebilme,
   PDF oluþturabilme ve hatta Flash filmleri yaratabilme (libswf ve Ming kullanarak) bulunmaktadýr.
   Ayný þekilde XHTML ya da XML gibi her tür metin tabanlý dosyayý yaratabilmeniz mümkündür.
   PHP bu dosyalarý otomatik olarak yaratabilir ve ekrana yazdýrmak haricinde sizin için
   dosya sisteminde saklayabilir, böylece dinamik içeriðiniz için sunucu-taraflý bir depo sistemini kullanýmýnýza sunabilir.
   </para>
   <para>
   PHP&apos;nin en güçlü ve en çok üstünde durulan özelliklerinden biri, sahip olduðu geniþ ve geliþmiþ veritabaný desteðidir.
   PHP ile veritabaný baðlantýlý web sayfalarý yaratmak son derece basittir. Aþaðýda desteklenen veritabanlarýnýn listesi bulunmaktadýr:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (salt-okunur)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 ve OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>SQLite</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
    Bunlarýn haricinde DBX adý verilen uzantý ile farklý veritabanlarý için ayný kodu
    kullanarak kodlama yapabilirsiniz. PHP, ek olarak ODBC&apos;yi, yani Açýk Veritabaný Baðlantý standardýný
    destekler, bu þekilde ODBC&apos;yi destekleyen tüm veritabanlarý ile iletiþim kurabilirsiniz.
   </para>
   <para>
   PHP, farklý hizmetlerle LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM
   (Windows için) ve daha sayýsýz protokol aracýlýðýyla konuþabilecek bir altyapýya da sahiptir.
   Hazýr modüllerin haricinde ham að soketleri açýp bu soketler üzerinden istediðiniz bütün
   protokollerle çalýþabilirsiniz. PHP, WDDX üzerinden sanal olarak web üzerinde hangi dilde
   yazýlmýþ olursa olsun tüm uygulamalarla haberleþebilir. Ayrýca Java nesnelerinin yaratýlabilmesi
   ve saydam (transparent) biçimde PHP nesneleri olarak kullanýlabilmeleri önemli bir diðer özelliktir.
   Uzaktaki nesnelere eriþim için CORBA uzantýsý, yine PHP&apos;nin sahip olduðu özellikler arasýndadýr.
   </para>
   <para>
   PHP oldukça faydalý doküman iþleme özelliklerine sahiptir. Bu yelpaze Geniþletilmiþ POSÝX ya da
   Perl düzenli ifade (regular expressions) komutlarýndan XML dosyalarýný okumaya kadar uzanýr.
   XML dosyalarýnýn okunmasý ve eriþimi için SAX ve DOM standartlarýný destekler.
   XSLT uzantýsý ile XML dokümanlarýnýn biçimlendirilmesi yapýlabilir. PHP 5 tüm XML uzantýlarýný
   libxml2 tabanýnda tek bir standartta toplamýþ ve SimpleXML ile XMLReader desteðini bünyesine
   katarak sunduðu imkan yelpazesini geniþletmiþtir.
   </para>
   <para>
   PHP&apos;yi e-ticaret alanýnda kullanýrken, Cybercash ödeme sistemi, CyberMUT, VeriSign Payflow
   Pro ve MCVE fonksiyonlarýný kullanabilir ve çevrimiçi ödeme uygulamalarýnýzý gerçekleþtirebilirsiniz.
   </para>
   <para>
   Bunlarýn dýþýnda, mnoGoSearch arama motoru, IRC að geçidi uzantýlarý, birçok sýkýþtýrma aracý (gzip, bz2) için yardýmcý araçlar,
   takvim araçlarý, dil çeviri fonksiyonlarý yine PHP&apos;nin sunmakta olduðu ilginç uzantýlardan bazýlarýdýr.
   </para>
   <para>
   Sizin de görebildiðiniz gibi bu sayfa PHP&apos;nin sunabileceði bütün özellikleri ve faydalarý anlatabilmek
   için yeterli deðil. <link linkend="install">PHP kurulumu</link> bölümünde ve <link linkend="funcref">fonksiyon baþvuru kaynaðý</link>nda
   listelenen uzantýlarýn baþlangýç bölümlerindeki açýklamalardan her bir uzantý için daha fazla bilgiye ulaþabilirsiniz.
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
