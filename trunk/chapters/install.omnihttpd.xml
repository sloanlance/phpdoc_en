<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
  <sect1 id="install.omnihttpd">
   <title>Servers-OmniHTTPd Server</title>
   <para>
    This section contains notes and hints specific to OmniHTTPd.
   </para>
   <sect2 id="install.omnihttpd.windows">
    <title>OmniHTTPd 2.0b1 and up for Windows</title>
    
    <simpara>
     You need to complete the following steps to make PHP
     work with OmniHTTPd. This is a CGI executable setup.
     SAPI is supported by OmniHTTPd, but some tests have shown
     that it is not so stable to use PHP as an ISAPI module.
    </simpara>
    
    <note>
     <title>Important for CGI users</title>
     <para>
      When running PHP as CGI with IIS, PWS, OmniHTTPD or Xitami,
      you MUST set the <link linkend="ini.cgi.force-redirect">
      cgi.force_redirect</link> directive to <literal>0</literal>.
      It defaults to <literal>1</literal> so be sure the directive
      isn't commented out (with a <literal>;</literal>).
     </para>
     <para>
      It's important that you're 100% sure that &php.ini; is
      being read by PHP.  To test this, make a call to
      <function>phpinfo</function> and near the top will be a
      listing called <literal>Configuration File (php.ini)</literal>.
      This will tell you where PHP is looking for &php.ini; and
      whether or not it's being read.  If just a PATH exists
      than it's not being read and you should put your &php.ini;
      there.  If &php.ini; is included with the PATH than it is
      being read.
     </para>
    </note>

    <para>
     <itemizedlist>
      <listitem>
       <para>
        Step 1: Install OmniHTTPd server.
       </para>
      </listitem>
      <listitem>
       <para>
        Step 2: Right click on the blue OmniHTTPd icon in the system
        tray and select <literal>Properties</literal>
       </para>
      </listitem>
      <listitem>
       <para>
        Step 3: Click on <literal>Web Server Global Settings</literal>
       </para>
      </listitem>
      <listitem>
       <para>
        Step 4: On the 'External' tab, enter: <literal>virtual = .php
         | actual = c:\path-to-php-dir\php.exe</literal>, and use the Add
         button.
       </para>
      </listitem>
      <listitem>
       <para>
        Step 5: On the <literal>Mime</literal> tab, enter:
        <literal>virtual = wwwserver/stdcgi | actual = .php</literal>,
        and use the Add button.
       </para>
      </listitem>
      <listitem>
       <para>
        Step 6: Click <literal>OK</literal>
       </para>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     Repeat steps 2 - 6 for each extension you want to associate with PHP.
    </simpara>
    <note>
     <para>
      Some OmniHTTPd packages come with built in PHP support.
      You can choose at setup time to do a custom setup, and
      uncheck the PHP component. We recommend you to use the latest
      PHP binaries. Some OmniHTTPd servers come with PHP 4 beta
      distributions, so you should choose not to set up
      the built in support, but install your own. If the server
      is already on your machine, use the Replace button in Step
      4 and 5 to set the new, correct information.
     </para>
    </note>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
