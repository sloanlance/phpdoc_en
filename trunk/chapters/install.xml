 <chapter id="installation">
  <title>Installation</title>

  <sect1 id="install.downloading">
   <title>Downloading the latest version</title>
   <simpara>
    The source code, and binary distributions for some platforms
    (including Windows), can be found at <literal><ulink
    url="&url.php;">&url.php;</ulink></literal>.
   </simpara>
  </sect1>

  <sect1 id="install.unix">
   <title>Installation on UNIX systems</title>

   <para>
    This section will guide you through the configuration and
    installation of PHP. 
   </para>

   <para>
    Prerequisite knowledge and software:
    
    <itemizedlist>
     <listitem>
      <simpara>
       Basic UNIX skills (being able to operate "make" and a C
       compiler)
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       An ANSI C compiler
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       A web server
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   
   <para>
    There are several ways to compile and configure PHP for the Unix
    platform. The entire configuration process is controlled by the
    use of commandline options to the <filename>configure</filename>
    script. This page outlines the usage of the most common options,
    but there are many others to play with. Check out the <link
    linkend="install.configure">Complete list of configure
     options</link> for an exhaustive rundown.
    <itemizedlist>
     <listitem>
      <simpara>
       As an <link linkend="install.unix.apache-module">Apache module</link>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       As an <link linkend="install.unix.fhttpd">fhttpd module</link>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       For use with <link
       linkend="install.unix.otherhttpd">AOLServer, NSAPI,
       phttpd, Pi3Web, Roxen, thttpd, or Zeus.</link>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       As a <link linkend="install.unix.commandline">CGI executable</link>
      </simpara>
     </listitem>
    </itemizedlist>
   </para>

   <sect2 id="install.unix.apache-module">
    <title>Apache Module</title>

    <para>
     PHP can be compiled in a number of different ways as an Apache
     module. First we show the quick instructions. Following this is
     a list of various examples with explanations, to provide an
     overview of how to accomplish certain things.
    </para>
    
    <para>
     You can select arguments to add to the
     <command>configure</command> on line 8 below from the <link
     linkend="install.configure">Complete list of configure
     options</link>.
    </para>

    <example id="install.unix.apache-module.quick">
     <title>
      Quick Installation Instructions (Apache Module Version)
     </title>
     <programlisting>
1.  gunzip apache_1.3.x.tar.gz
2.  tar xvf apache_1.3.x.tar
3.  gunzip php-x.x.x.tar.gz
4.  tar xvf php-x.x.x.tar
5.  cd apache_1.3.x
6.  ./configure --prefix=/www
7.  cd ../php-x.x.x
8.  ./configure --with-mysql --with-apache=../apache_1.3.x --enable-track-vars
9.  make
10. make install
11. cd ../apache_1.3.x
12. for PHP 3: ./configure --activate-module=src/modules/php3/libphp3.a
    for PHP 4: ./configure --activate-module=src/modules/php4/libphp4.a
13. make
14. make install

  Instead of this step you may prefer to simply copy the httpd binary
  overtop of your existing binary.  Make sure you shut down your
  server first though.

15. cd ../php-x.x.x
16. for PHP 3: cp php3.ini-dist /usr/local/lib/php3.ini
    for PHP 4: cp php.ini-dist /usr/local/lib/php.ini

  You can edit your .ini file to set PHP options.  If
  you prefer this file in another location, use
  --with-config-file-path=/path in step 8.

17. Edit your httpd.conf or srm.conf file and add: 
      
     For PHP 3:   AddType application/x-httpd-php3 .php3
     For PHP 4:   AddType application/x-httpd-php .php
 
  You can choose any extension you wish here.  .php is simply the one
  we suggest. You can even include .html .


18. Use your normal procedure for starting the Apache server. (You must
    stop and restart the server, not just cause the server to reload by
    use a HUP or USR1 signal.)
      </programlisting>
     </example>

     <para>
      <informalexample>
       <programlisting>
./configure --with-apxs --with-pgsql
       </programlisting>
      </informalexample>
     </para>
     <para>
      This will create a <filename>libphp4.so</filename> shared
      library that is loaded into Apache using a LoadModule line in
      Apache's <filename>httpd.conf</filename> file. The PostgreSQL
      support is embedded into this <filename>libphp4.so</filename>
      library.
     </para>
     <para>
      <informalexample>
       <programlisting>
./configure --with-apxs --with-pgsql=shared
       </programlisting>
      </informalexample>
     </para>
     <para>
      This will again create a <filename>libphp4.so</filename> shared
      library for Apache, but it will also create a
      <filename>pgsql.so</filename> shared library that is loaded into
      PHP either by using the extension directive in
      <filename>php.ini</filename> file or by loading it explicitly in
      a script using the <function>dl</function> function.
     </para>
     <para>
      <informalexample>
       <programlisting>
./configure --with-apache=/path/to/apache_source --with-pgsql
       </programlisting>
      </informalexample>
     </para>
     <para>
      This will create a <filename>libmodphp4.a</filename> library, a
      <filename>mod_php4.c</filename> and some accompanying files and
      copy this into the <literal>src/modules/php4</literal> directory
      in the Apache source tree. Then you compile Apache using
      <literal>--activate-module=src/modules/php4/libphp4.a</literal>
      and the Apache build system will create
      <filename>libphp4.a</filename> and link it statically into the
      <filename>httpd</filename> binary. The PostgreSQL support is
      included directly into this <filename>httpd</filename> binary,
      so the final result here is a single <filename>httpd</filename>
      binary that includes all of Apache and all of PHP.
     </para>
     <para>
      <informalexample>
       <programlisting>
./configure --with-apache=/path/to/apache_source --with-pgsql=shared
       </programlisting>
      </informalexample>
     </para>
     <para>
      Same as before, except instead of including PostgreSQL support
      directly into the final <filename>httpd</filename> you will get
      a <filename>pgsql.so</filename> shared library that you can load
      into PHP from either the <filename>php.ini</filename> file or
      directly using <function>dl</function>.
     </para>
     <para>
      When choosing to build PHP in different ways, you should consider
      the advantages and drawbacks of each method. Building as a shared
      object will mean that you can compile apache separately, and don't
      have to recompile everything as you add to, or change, PHP.
      Building PHP into apache (static method) means that PHP will
      load and run faster. For more information, see the Apache
      <ulink url="&url.apachedso;">webpage on DSO support</ulink>.
     </para>
   </sect2>

   <sect2 id="install.unix.fhttpd">
    <title>fhttpd Module</title>
    <para>
     To build PHP as an fhttpd module, answer "yes" to "Build as an
     fhttpd module?" (the <option><link
     linkend="install.configure.with-fhttpd">
     --with-fhttpd</link>=<replaceable>DIR</replaceable></option>
     option to configure) and specify the fhttpd source base
     directory.  The default directory is <filename
     class="directory">/usr/local/src/fhttpd</filename>. If you are
     running fhttpd, building PHP as a module will give better
     performance, more control and remote execution capability.
    </para>
   </sect2>

   <sect2 id="install.unix.otherhttpd">
    <title>Other web servers</title>
    <para>
     PHP can be built to support a large number of web servers. Please
     see <link linkend="install.configure.servers">Server-related
      options</link> for a full list of server-related configure
     options.
    </para>
   </sect2>
   
   <sect2 id="install.unix.commandline">
    <title>CGI/Commandline version</title>
    <para>
     The default is to build PHP as a CGI program.  This creates a
     commandline interpreter, which can be used for CGI processing, or
     for non-web-related PHP scripting.  If you are running a web
     server PHP has module support for, you should generally go for
     that solution for performance reasons.  However, the CGI version
     enables Apache users to run different PHP-enabled pages under
     different user-ids.  Please make sure you read through the <link
     linkend="security">Security chapter</link> if you are going to
     run PHP as a CGI.
    </para>
   </sect2>

   <sect2 id="database-support-options">
    <title>Database Support Options</title>
    <para>
     PHP has native support for a number of databases (as well as
     ODBC). To enable support for the various databases, options are
     given to the <filename>configure</filename> script at compile
     time. Read the <link linkend="install.configure.databases">list
     of all database-related options</link> for more information.
    </para>

    <para>
     For a list of all possible options to
     <filename>configure</filename>, please see the <link
      linkend="install.configure">Complete list of configure
      options</link>.
    </para>
   </sect2>

   <sect2 id="install.building">
    <title>Building</title>
    <simpara>
     When PHP is configured, you are ready to build the CGI executable
     or the PHP library.  The command <command>make</command> should
     take care of this.  If it fails and you can't figure out why, see
     the <link linkend="install-problems">Problems section</link>.
    </simpara>
   </sect2>

   <sect2 id="install.testing">
    <title>Testing</title>
    <simpara>
     If you have built PHP as a CGI program, you may test your build
     by typing <command>make test</command>.  It is always a good idea
     to test your build.  This way you may catch a problem with PHP on
     your platform early instead of having to struggle with it later.
    </simpara>
   </sect2>

   <sect2 id="install.benchmarking">
    <title>Benchmarking</title>
    <simpara>
     If you have built PHP 3 as a CGI program, you may benchmark your
     build by typing <command>make bench</command>. Note that if safe
     mode is on by default, the benchmark may not be able to finish if
     it takes longer then the 30 seconds allowed. This is because the
     <function>set_time_limit</function> can not be used in safe
     mode. Use the <link
      linkend="ini.max-execution-time">max_execution_time</link>
     configuration setting to control this time for your own
     scripts. <command>make bench</command> ignores the <link
      linkend="configuration.file">configuration file</link>.
    </simpara>
		<note>
		 <simpara>
			<command>make bench</command> is only available for PHP 3.
		 </simpara>
		</note>
   </sect2>

  </sect1>

  <sect1 id="install.configure">
   <title>Complete list of configure options</title>

   <note>
    <para>
     These are only used at compile time. If you want to alter PHP's
     runtime configuration, please go to <link
      linkend="configuration">Configuration</link>.
    </para>
   </note>

   <para>
    The following is a complete list of options supported by the PHP 3
    and PHP 4 <filename>configure</filename> scripts, used when
    compiling in Unix-like environments. Some are available in PHP 3,
    some in PHP 4, and some in both, as noted. There are many options
    the names of which have changed between PHP 3 and PHP 4, but which
    accomplish the same things. These entries are cross-referenced to
    each other, so if you have a problem getting your PHP 3-era
    configuration options to work, check here to see whether the names
    have changed.
   </para>

   <itemizedlist>
    <listitem>
     <para>
      <link linkend="install.configure.databases">Database</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.ecommerce">Ecommerce</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.graphics">Graphics</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.misc">Miscellaneous</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.networking">Networking</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.php">PHP Behaviour</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.servers">Server</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.text">Text and language</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link linkend="install.configure.xml">XML</link>
     </para>
    </listitem>
   </itemizedlist>

   <sect2 id="install.configure.databases">
    <title>Database</title>

    <variablelist>
     <varlistentry id="install.configure.with-adabas">
      <term>
       <parameter>--with-adabas[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include Adabas D support. DIR is the Adabas base
        install directory, defaults to /usr/local.
       </para>
       <para>
        <ulink url="&url.adabas;">Adabas home page</ulink>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-dba">
      <term>
       <parameter>--enable-dba=shared</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Build DBA as a shared module
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-dbase">
      <term>
       <parameter>--enable-dbase</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available; use <link
         linkend="install.configure.with-dbase">--with-dbase</link>
        instead.
       </para>
       <para>
        PHP 4: Enable the bundled dbase library. No external libraries
        are required.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-dbase">
      <term>
       <parameter>--with-dbase</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include the bundled dbase library. No external
        libraries are required.
       </para>
       <para>
        PHP 4: Option not available; use <link
         linkend="install.configure.enable-dbase">--enable-dbase</link>
        instead.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-db2">
      <term>
       <parameter>--with-db2[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include Berkeley DB2 support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-db3">
      <term>
       <parameter>--with-db3[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Berkeley DB3 support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-dbm">
      <term>
       <parameter>--with-dbm[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include DBM support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-dbmaker">
      <term>
       <parameter>--with-dbmaker[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include DBMaker support. DIR is the DBMaker base install
        directory, defaults to where the latest version of DBMaker is installed
        (such as /home/dbmaker/3.6).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-empress">
      <term>
       <parameter>--with-empress[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include Empress support. DIR is the Empress base install
        directory, defaults to $EMPRESSPATH
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-filepro">
      <term>
       <parameter>--enable-filepro</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available; use <link
         linkend="install.configure.with-filepro">--with-filepro</link>
        instead.
       </para>
       <para>
        PHP 4: Enable the bundled read-only filePro support. No
        external libraries are required.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-filepro">
      <term>
       <parameter>--with-filepro</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include the bundled read-only filePro support. No
        external libraries are required.
       </para>
       <para>
        PHP 4: Option not available; use <link
         linkend="install.configure.enable-filepro">--enable-filepro</link>
        instead.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gdbm">
      <term>
       <parameter>--with-gdbm[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include GDBM support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-hyperwave">
      <term>
       <parameter>--with-hyperwave</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include Hyperwave support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ibm-db2">
      <term>
       <parameter>--with-ibm-db2[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include IBM DB2 support. DIR is the DB2 base
        install directory, defaults to
        <filename>/home/db2inst1/sqllib</filename>.
       </para>
       <para>
        <ulink url="&url.ibmdb2;">IBM DB2 home page</ulink>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-informix">
      <term>
       <parameter>--with-informix[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include Informix support. DIR is the Informix base install
        directory, defaults to nothing.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ingres">
      <term>
       <parameter>--with-ingres[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Ingres II support. DIR is the Ingres base directory
        (default /II/ingres)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-interbase">
      <term>
       <parameter>--with-interbase[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include InterBase support. DIR is the InterBase base
        install directory, which defaults to <filename>/usr/interbase</filename>.
       </para>
       <simpara>
        <link linkend="ref.ibase">Interbase functions</link>
       </simpara>
       <simpara>
        <ulink url="&url.ibase;">Interbase home page</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ldap">
      <term>
       <parameter>--with-ldap[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include LDAP support. DIR is the LDAP base install
        directory.  Defaults to <filename>/usr</filename> and
        <filename>/usr/local</filename>
       </para>
       <para>
        PHP 4: Include LDAP support. DIR is the LDAP base install directory.
       </para>
       <simpara>
        This provides <acronym>LDAP</acronym> (Lightweight Directory Access
        Protocol support).  The parameter is the LDAP base install
        directory, defaults to <filename
         class="directory">/usr/local/ldap</filename>.
       </simpara>
       <simpara>
        More information about LDAP can be found in <ulink
         url="&url.rfc;rfc1777.html">RFC1777</ulink> and
        <ulink
         url="&url.rfc;rfc1778.html">RFC1778</ulink>.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-msql">
      <term>
       <parameter>--with-msql[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enables mSQL support.  The parameter to this
        option is the mSQL install directory and defaults to <filename
        class="directory">/usr/local/Hughes</filename>.  This is the
        default directory of the mSQL 2.0 distribution.
        <command>configure</command> automatically detects which mSQL
        version you are running and PHP supports both 1.0 and 2.0, but
        if you compile PHP with mSQL 1.0, you can only access mSQL 1.0
        databases, and vice-versa.
       </para>
       <simpara>
        See also <link linkend="ini.sect.msql">mSQL
        Configuration</link> Directives in the <link
        linkend="configuration.file">configuration file</link>.
       </simpara>
       <simpara>
        <ulink url="&url.msql;">mSQL home page</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mysql">
      <term>
       <parameter>--with-mysql[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include MySQL support. DIR is the MySQL base install directory,
        defaults to searching through a number of common places for the MySQL
        files.
       </para>
       <para>
        PHP 4: Include MySQL support. DIR is the MySQL base directory. If
        unspecified, the bundled MySQL library will be used. This
        option is turned on by default.
       </para>
       <para>
        See also <link linkend="ini.sect.mysql">MySQL
        Configuration</link> Directives in the <link
        linkend="configuration.file">configuration file</link>.
       </para>
       <para>
        <ulink url="&url.mysql;">MySQL home page</ulink>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ndbm">
      <term>
       <parameter>--with-ndbm[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include NDBM support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-oci8">
      <term>
       <parameter>--with-oci8[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Oracle-oci8 support. Default DIR is ORACLE_HOME.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-oracle">
      <term>
       <parameter>--with-oracle[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include Oracle database support. DIR is Oracle's home directory,
        defaults to $ORACLE_HOME.
       </para>
       <para>
        PHP 4: Include Oracle-oci7 support. Default DIR is ORACLE_HOME.
       </para>
       <simpara>
        Includes Oracle support.  Has been tested and should be
        working at least with Oracle versions 7.0 through 7.3.  The
        parameter is the <envar>ORACLE_HOME</envar> directory.  You do
        not have to specify this parameter if your Oracle environment
        has been set up.
       </simpara>
       <simpara>
        <ulink url="&url.oracle;">Oracle home page</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pgsql">
      <term>
       <parameter>--with-pgsql[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include PostgresSQL support. DIR is the PostgresSQL base
        install directory, which defaults to
        <filename>/usr/local/pgsql</filename>.
       </para>
       <para>
        PHP 4: Include PostgreSQL support. DIR is the PostgreSQL base
        install directory, which defaults to
        <filename>/usr/local/pgsql</filename>. Set DIR to shared to
        build as a dl, or shared,DIR to build as a dl and still specify
        DIR.
       </para>
       <simpara>
        See also <link linkend="ini.sect.pgsql">Postgres
        Configuration</link> Directives in the <link
        linkend="configuration.file">configuration file</link>.
       </simpara>
       <simpara>
        <ulink url="&url.pgsql;">PostgreSQL home page</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-solid">
      <term>
       <parameter>--with-solid[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include Solid support. DIR is the Solid base install
        directory, defaults to /usr/local/solid
       </para>
       <simpara>
        <ulink url="&url.solid;">Solid home page</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-sybase-ct">
      <term>
       <parameter>--with-sybase-ct[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include Sybase-CT support. DIR is the Sybase home
        directory, defaults to /home/sybase.
       </para>
       <simpara>
        See also <link linkend="ini.sect.sybct">Sybase-CT
         Configuration</link> Directives in the <link
         linkend="configuration.file">configuration
         file</link>.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-sybase">
      <term>
       <parameter>--with-sybase[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include Sybase-DB support. DIR is the Sybase home
        directory, which defaults to <filename>/home/sybase</filename>.
       </para>
       <simpara>
        See also <link linkend="ini.sect.sybase">Sybase
         Configuration</link> Directives in the <link
         linkend="configuration.file">configuration file</link>.
       </simpara>
       <simpara>
        <ulink url="&url.sybase;">Sybase home page</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-openlink">
      <term>
       <parameter>--with-openlink[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include OpenLink ODBC support. DIR is the OpenLink base
        install directory, defaults to /usr/local/openlink.
       </para>
       <simpara>
        <ulink url="&url.openlink;">OpenLink Software's home page</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-iodbc">
      <term>
       <parameter>--with-iodbc[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include iODBC support. DIR is the iODBC base install
        directory, defaults to <filename>/usr/local</filename>.
       </para>
       <para>
        This feature was first developed for iODBC Driver Manager, a
        freely redistributable ODBC driver manager which runs under
        many flavors of UNIX.
       </para>
       <simpara>
        <ulink url="&url.freeodbc;">FreeODBC home page</ulink> 
        or <ulink url="&url.iodbc;">iODBC home page</ulink>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-custom-odbc">
      <term>
       <parameter>--with-custom-odbc[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Includes support for an arbitrary custom ODBC
        library.  The parameter is the base directory and defaults to
        <filename class="directory">/usr/local</filename>.
       </para>
       <simpara>
        This option implies that you have defined CUSTOM_ODBC_LIBS
        when you run the configure script. You also must have a valid
        odbc.h header somewhere in your include path. If you don't
        have one, create it and include your specific header from
        there. Your header may also require some extra definitions,
        particularly when it is multiplatform. Define them in
        CFLAGS.
       </simpara>
       <simpara>
        For example, you can use Sybase SQL Anywhere on QNX as
        following:
        <literal>
         CFLAGS=-DODBC_QNX LDFLAGS=-lunix CUSTOM_ODBC_LIBS="-ldblib
         -lodbc" ./configure --with-custom-odbc=/usr/lib/sqlany50
        </literal>
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-unified-odbc">
      <term>
       <parameter>--disable-unified-odbc</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Disable unified ODBC support. Only applicable if iODBC, Adabas,
        Solid, Velocis or a custom ODBC interface is enabled.
       </para>
       <para>
        PHP 4: Option not available in PHP 4
       </para>
       <simpara>
        The Unified ODBC module, which is a common interface to all
        the databases with ODBC-based interfaces, such as Solid, IBM
        DB2 and Adabas D.  It also works for normal ODBC libraries.
        Has been tested with iODBC, Solid, Adabas D, IBM DB2 and
        Sybase SQL Anywhere. Requires that one (and only one) of these
        modules or the Velocis module is enabled, or a custom ODBC
        library specified. This option is only applicable if one of
        the following options is used: <link
        linkend="install.configure.with-iodbc">--with-iodbc</link>,
        <link
        linkend="install.configure.with-solid">--with-solid</link>,
        <link
        linkend="install.configure.with-ibm-db2">--with-ibm-db2</link>,
        <link
        linkend="install.configure.with-adabas">--with-adabas</link>,
        <link
        linkend="install.configure.with-velocis">--with-velocis</link>,
        or <link
        linkend="install.configure.with-custom-odbc">--with-custom-odbc</link>.
       </simpara>
       <simpara>
        See also <link linkend="ini.sect.uodbc">Unified ODBC
         Configuration</link> Directives in the <link
         linkend="configuration.file">configuration
         file</link>.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-unixODBC">
      <term>
       <parameter>--with-unixODBC[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include unixODBC support. DIR is the unixODBC base install
        directory, defaults to /usr/local.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-velocis">
      <term>
       <parameter>--with-velocis[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include Velocis support. DIR is the Velocis base install
        directory, defaults to /usr/local/velocis.
       </para>
       <simpara>
        <ulink url="&url.velocis;">Velocis home page</ulink>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>
   
   <sect2 id="install.configure.ecommerce">
    <title>Ecommerce</title>

    <variablelist>
     <varlistentry id="install.configure.with-ccvs">
      <term>
       <parameter>--with-ccvs[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Compile CCVS support into PHP4. Please specify your CCVS base
        install directory as DIR.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mck">
      <term>
       <parameter>--with-mck[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include Cybercash MCK support. DIR is the cybercash mck
        build directory, which defaults to
        <filename>/usr/src/mck-3.2.0.3-linux</filename>. For help, look
        in <filename>extra/cyberlib</filename>.
       </para>
       <para>
        PHP 4: Option not available; use <link
         linkend="install.configure.with-cybercash">--with-cybercash</link>
        instead.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-cybercash">
      <term>
       <parameter>--with-cybercash[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available; use <link
         linkend="install.configure.with-mck">--with-mck</link>
        instead.
       </para>
       <para>
        PHP 4: Include CyberCash support. DIR is the CyberCash MCK install
        directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pfpro">
      <term>
       <parameter>--with-pfpro[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Verisign Payflow Pro support
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>
   
   <sect2 id="install.configure.graphics">
    <title>Graphics</title>

    <variablelist>
     <varlistentry id="install.configure.enable-freetype-4bit-antialias-hack">
      <term>
       <parameter>--enable-freetype-4bit-antialias-hack</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include support for FreeType2 (experimental).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gd">
      <term>
       <parameter>--with-gd[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include GD support (DIR is GD's install dir).
       </para>
       <para>
        PHP 4: Include GD support (DIR is GD's install dir). Set DIR to shared
        to build as a dl, or shared,DIR to build as a dl and still specify DIR.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.without-gd">
      <term>
       <parameter>--without-gd</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Disable GD support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-imagick">
      <term>
       <parameter>--with-imagick[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include ImageMagick support. DIR is the install
        directory, and if left out, PHP will try to find it on its
        own. [experimental]
       </para>
       <para>
        PHP 4: Option not available in PHP 4
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-jpeg-dir">
      <term>
       <parameter>--with-jpeg-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: jpeg dir for pdflib 2.0
       </para>
       <para>
        PHP 4: jpeg dir for pdflib 3.x
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-png-dir">
      <term>
       <parameter>--with-png-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: png dir for pdflib 3.x
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-t1lib">
      <term>
       <parameter>--enable-t1lib</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Enable t1lib support.
       </para>
       <para>
        PHP 4: Option not available; use <link
         linkend="install.configure.with-t1lib">--with-t1lib</link>
        instead.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-t1lib">
      <term>
       <parameter>--with-t1lib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available; use <link
         linkend="install.configure.enable-t1lib">--enable-t1lib</link>
        instead.
       </para>
       <para>
        PHP 4: Include T1lib support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-tiff-dir">
      <term>
       <parameter>--with-tiff-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: tiff dir for pdflib 2.0
       </para>
       <para>
        PHP 4: tiff dir for pdflib 3.x
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ttf">
      <term>
       <parameter>--with-ttf[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include FreeType support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-xpm-dir">
      <term>
       <parameter>--with-xpm-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: xpm dir for gd-1.8+
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="install.configure.misc">
    <title>Miscellaneous</title>

    <para>
     These are being classified over time, where appropriate.
    </para>

    <variablelist>
     <varlistentry id="install.configure.disable-bcmath">
      <term>
       <parameter>--disable-bcmath</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Compile without BC arbitrary precision math
        functions. These functions allow you to operate with numbers
        outside of the ranges allowed by regular integers and floats;
        see <link linkend="ref.bc">BCMath Arbitrary Precision
         Mathematics Functions</link> for more information.
       </para>
       <para>
        PHP 4: Option not available; bcmath is not compiled in by
        default. Use <link
         linkend="install.configure.enable-bcmath">--enable-bcmath</link>
        to compile it in.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-display-source">
      <term>
       <parameter>--disable-display-source</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Compile without displaying source support
       </para>
       <para>
        PHP 4: Option not available in PHP 4
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-libtool-lock">
      <term>
       <parameter>--disable-libtool-lock</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: avoid locking (might break parallel builds)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-pear">
      <term>
       <parameter>--disable-pear</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Do not install PEAR
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-pic">
      <term>
       <parameter>--disable-pic</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Disable PIC for shared objects
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-posix">
      <term>
       <parameter>--disable-posix</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3; use <link
         linkend="install.configure.without-posix">--without-posix</link>
        instead.
       </para>
       <para>
        PHP 4: Disable POSIX-like functions
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-rpath">
      <term>
       <parameter>--disable-rpath</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Disable passing additional runtime library search paths
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-session">
      <term>
       <parameter>--disable-session</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Disable session support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-bcmath">
      <term>
       <parameter>--enable-bcmath</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3; bcmath is compiled in
        by default. Use <link
         linkend="install.configure.disable-bcmath">--disable-bcmath</link>
        to disable it.
       </para>
       <para>
        PHP 4: Compile with bc style precision math functions. Read
        README-BCMATH for instructions on how to get this module
        installed. These functions allow you to operate with numbers
        outside of the ranges allowed by regular integers and floats;
        see <link linkend="ref.bc">BCMath Arbitrary Precision
         Mathematics Functions</link> for more information.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-c9x-inline">
      <term>
       <parameter>--enable-c9x-inline</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable C9x-inline semantics
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-calendar">
      <term>
       <parameter>--enable-calendar</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable support for calendar conversion
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-debug">
      <term>
       <parameter>--enable-debug</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Compile with debugging symbols.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-debugger">
      <term>
       <parameter>--enable-debugger</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Compile with remote debugging functions
       </para>
       <para>
        PHP 4: Option not available in PHP 4
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-discard-path">
      <term>
       <parameter>--enable-discard-path</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: If this is enabled, the PHP CGI binary can safely be
        placed outside of the web tree and people will not be able to circumvent
        .htaccess security.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-dmalloc">
      <term>
       <parameter>--enable-dmalloc</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable dmalloc
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-exif">
      <term>
       <parameter>--enable-exif</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable exif support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-experimental-zts">
      <term>
       <parameter>--enable-experimental-zts</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: This will most likely break your build
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-fast-install">
      <term>
       <parameter>--enable-fast-install[=PKGS]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: optimize for fast installation [default=yes]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-force-cgi-redirect">
      <term>
       <parameter>--enable-force-cgi-redirect</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable the security check for internal server redirects.
        You should use this if you are running the CGI version with Apache.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-inline-optimization">
      <term>
       <parameter>--enable-inline-optimization</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: If you have much memory and are using gcc, you might try this.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-libgcc">
      <term>
       <parameter>--enable-libgcc</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable explicitly linking against libgcc
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-maintainer-mode">
      <term>
       <parameter>--enable-maintainer-mode</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: enable make rules and dependencies not useful (and
        sometimes confusing) to the casual installer
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-memory-limit">
      <term>
       <parameter>--enable-memory-limit</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Compile with memory limit support. [default=no] 
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-safe-mode">
      <term>
       <parameter>--enable-safe-mode</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable safe mode by default.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-satellite">
      <term>
       <parameter>--enable-satellite</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable CORBA support via Satellite (Requires ORBit)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-shared">
      <term>
       <parameter>--enable-shared[=PKGS]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: build shared libraries [default=yes]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sigchild">
      <term>
       <parameter>--enable-sigchild</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable PHP's own SIGCHLD handler.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-static">
      <term>
       <parameter>--enable-static[=PKGS]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: build static libraries [default=yes]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sysvsem">
      <term>
       <parameter>--enable-sysvsem</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable System V semaphore support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sysvshm">
      <term>
       <parameter>--enable-sysvshm</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable the System V shared memory support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-trans-sid">
      <term>
       <parameter>--enable-trans-sid</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable transparent session id propagation
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-cdb">
      <term>
       <parameter>--with-cdb[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include CDB support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-config-file-path">
      <term>
       <parameter>--with-config-file-path=PATH</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Sets the path in which to look for php3.ini. Defaults to
        <filename>/usr/local/lib</filename>
       </para>
       <para>
        PHP 4: Sets the path in which to look for <filename>php.ini</filename>. 
	Defaults to <filename>/usr/local/lib</filename>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-cpdflib">
      <term>
       <parameter>--with-cpdflib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include ClibPDF support. DIR is the ClibPDF install directory,
        defaults to /usr/local.
       </para>
       <para>
        PHP 4: Include cpdflib support (requires cpdflib &gt;= 2). DIR is the
        cpdfllib install directory, defaults to /usr.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-esoob">
      <term>
       <parameter>--with-esoob[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Easysoft OOB support. DIR is the OOB base install
        directory, defaults to /usr/local/easysoft/oob/client.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-exec-dir">
      <term>
       <parameter>--with-exec-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Only allow executables in DIR when in safe mode defaults
        to /usr/local/php/bin
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-fdftk">
      <term>
       <parameter>--with-fdftk[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include fdftk support. DIR is the fdftk install directory,
        defaults to /usr/local.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gnu-ld">
      <term>
       <parameter>--with-gnu-ld</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: assume the C compiler uses GNU ld [default=no]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-icap">
      <term>
       <parameter>--with-icap[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include ICAP support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-imap">
      <term>
       <parameter>--with-imap[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include IMAP support. DIR is the IMAP include and
        c-client.a directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-imsp">
      <term>
       <parameter>--with-imsp[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include IMSP support (DIR is IMSP's include dir and libimsp.a
        dir).
       </para>
       <para>
        PHP 4: Option not available in PHP 4
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-java">
      <term>
       <parameter>--with-java[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Java support. DIR is the base install directory for the
        JDK. This extension can only be built as a shared dl.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-kerberos">
      <term>
       <parameter>--with-kerberos[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Kerberos support in IMAP.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mcal">
      <term>
       <parameter>--with-mcal[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include MCAL support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mcrypt">
      <term>
       <parameter>--with-mcrypt[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include mcrypt support. DIR is the mcrypt install
        directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mhash">
      <term>
       <parameter>--with-mhash[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include mhash support. DIR is the mhash install directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mm">
      <term>
       <parameter>--with-mm[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include mm support for session storage
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mod_charset">
      <term>
       <parameter>--with-mod_charset</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable transfer tables for mod_charset (Rus Apache).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pdflib">
      <term>
       <parameter>--with-pdflib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include pdflib support (tested with 0.6 and 2.0). DIR is
        the pdflib install directory, which defaults to
        <filename>/usr/local</filename>.
       </para>
       <para>
        PHP 4: Include pdflib 3.x support. DIR is the pdflib install
        directory, which defaults to <filename>/usr/local</filename>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-readline">
      <term>
       <parameter>--with-readline[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include readline support. DIR is the readline install directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-regex">
      <term>
       <parameter>--with-regex=TYPE</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: regex library type: system, apache, php
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-servlet">
      <term>
       <parameter>--with-servlet[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include servlet support. DIR is the base install
        directory for the JSDK. This SAPI requires that the Java
        extension be built as a shared dl.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-swf">
      <term>
       <parameter>--with-swf[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include swf support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-system-regex">
      <term>
       <parameter>--with-system-regex</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Do not use the bundled regex library
       </para>
       <para>
        PHP 4: (deprecated) Use system regex library
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-tsrm-pth">
      <term>
       <parameter>--with-tsrm-pth[=pth-config]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Use GNU Pth.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-tsrm-pthreads">
      <term>
       <parameter>--with-tsrm-pthreads</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Use POSIX threads (default)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-x">
      <term>
       <parameter>--with-x</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: use the X Window System
       </para>
       <para>
        PHP 4: Option not available in PHP 4
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zlib-dir">
      <term>
       <parameter>--with-zlib-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: zlib dir for pdflib 2.0 or include zlib support
       </para>
       <para>
        PHP 4: zlib dir for pdflib 3.x or include zlib support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zlib">
      <term>
       <parameter>--with-zlib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include zlib support (requires zlib &gt;= 1.0.9). DIR is
        the zlib install directory, defaults to /usr.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.without-pcre-regex">
      <term>
       <parameter>--without-pcre-regex</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Don't include Perl Compatible Regular Expressions support
       </para>
       <para>
        PHP 4: Do not include Perl Compatible Regular Expressions support. Use
        --with-pcre-regex=DIR to specify DIR where PCRE's include and library
        files are located, if not using bundled library.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.without-posix">
      <term>
       <parameter>--without-posix</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Don't include POSIX functions
       </para>
       <para>
        PHP 4: Option not available in PHP 4; use <link
         linkend="install.configure.disable-posix">--disable-posix</link>
        instead.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="install.configure.networking">
    <title>Networking</title>

    <variablelist>
     <varlistentry id="install.configure.with-curl">
      <term>
       <parameter>--with-curl[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include CURL support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-ftp">
      <term>
       <parameter>--enable-ftp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available; use <link
         linkend="install.configure.with-ftp">--with-ftp</link>
        instead.
       </para>
       <para>
        PHP 4: Enable FTP support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ftp">
      <term>
       <parameter>--with-ftp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include FTP support.
       </para>
       <para>
        PHP 4: Option not available; use <link
         linkend="install.configure.enable-ftp">--enable-ftp</link>
        instead
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-url-fopen-wrapper">
      <term>
       <parameter>--disable-url-fopen-wrapper</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Disable the URL-aware fopen wrapper that allows accessing
        files via http or ftp.
       </para>
			 <warning>
				<para>
				 This switch is only available for PHP versions up to 4.0.3, newer
				 versions provide an INI parameter called 
         <parameter>allow_url_fopen</parameter> instead of forcing you to
         decide upon this feature at compile time.
				</para>
			 </warning>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mod-dav">
      <term>
       <parameter>--with-mod-dav=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include DAV support through Apache's mod_dav, DIR is
        mod_dav's installation directory (Apache module version only!)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-openssl">
      <term>
       <parameter>--with-openssl[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include OpenSSL support in SNMP.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-snmp">
      <term>
       <parameter>--with-snmp[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include SNMP support. DIR is the SNMP base install
        directory, defaults to searching through a number of common locations
        for the snmp install. Set DIR to shared to build as a dl, or shared,DIR
        to build as a dl and still specify DIR.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-ucd-snmp-hack">
      <term>
       <parameter>--enable-ucd-snmp-hack</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable UCD SNMP hack
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sockets">
      <term>
       <parameter>--enable-sockets</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable sockets support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-yaz">
      <term>
       <parameter>--with-yaz[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include YAZ support (ANSI/NISO Z39.50). DIR is the YAZ bin
        install directory
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-yp">
      <term>
       <parameter>--enable-yp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available; use <link
         linkend="install.configure.with-yp">--with-yp</link>
        instead.
       </para>
       <para>
        PHP 4: Include YP support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-yp">
      <term>
       <parameter>--with-yp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include YP support
       </para>
       <para>
        PHP 4: Option not available; use <link
         linkend="install.configure.enable-yp">--enable-yp</link>
        instead.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>

   <sect2 id="install.configure.php">
    <title>PHP Behaviour</title>

    <variablelist>
     <varlistentry id="install.configure.enable-magic-quotes">
      <term>
       <parameter>--enable-magic-quotes</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable magic quotes by default.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-short-tags">
      <term>
       <parameter>--disable-short-tags</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Disable the short-form &lt;? start tag by default.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-track-vars">
      <term>
       <parameter>--enable-track-vars</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Enable GET/POST/Cookie track variables by default.
       </para>
       <para>
        PHP 4: Option not available in PHP 4; as of PHP 4.0.2,
        track_vars is always on.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>

   <sect2 id="install.configure.servers">
    <title>Server</title>
    
    <variablelist>
     <varlistentry id="install.configure.with-aolserver-src">
      <term>
       <parameter>--with-aolserver-src=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Specify path to the source distribution of AOLserver
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-aolserver">
      <term>
       <parameter>--with-aolserver=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Specify path to the installed AOLserver
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-apache">
      <term>
       <parameter>--with-apache[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Build Apache module. DIR is the top-level Apache build
        directory, defaults to /usr/local/etc/httpd.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-apxs">
      <term>
       <parameter>--with-apxs[=FILE]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Build shared Apache module. FILE is the optional pathname
        to the Apache apxs tool; defaults to apxs.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="install.configure.enable-versioning">
      <term>
       <parameter>--enable-versioning</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Take advantage of versioning and scoping Provided by Solaris 2.x
        and Linux
       </para>
       <para>
        PHP 4: Export only required symbols. See INSTALL for more information
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-fhttpd">
      <term>
       <parameter>--with-fhttpd[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Build fhttpd module. DIR is the fhttpd sources directory,
        defaults to /usr/local/src/fhttpd.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-nsapi">
      <term>
       <parameter>--with-nsapi=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Specify path to the installed Netscape
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-phttpd">
      <term>
       <parameter>--with-phttpd=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: 
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pi3web">
      <term>
       <parameter>--with-pi3web=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Build PHP as a module for use with Pi3Web.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-roxen">
      <term>
       <parameter>--with-roxen=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Build PHP as a Pike module. DIR is the base Roxen directory,
        normally /usr/local/roxen/server.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-roxen-zts">
      <term>
       <parameter>--enable-roxen-zts</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Build the Roxen module using Zend Thread Safety.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-thttpd">
      <term>
       <parameter>--with-thttpd=SRCDIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: 
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zeus">
      <term>
       <parameter>--with-zeus=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Build PHP as an ISAPI module for use with Zeus.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    
   </sect2>

   <sect2 id="install.configure.text">
    <title>Text and language</title>
 
    <variablelist>
     <varlistentry id="install.configure.with-aspell">
      <term>
       <parameter>--with-aspell[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include ASPELL support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gettext">
      <term>
       <parameter>--with-gettext[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include GNU gettext support. DIR is the gettext install
        directory, defaults to /usr/local
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pspell">
      <term>
       <parameter>--with-pspell[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include PSPELL support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-recode">
      <term>
       <parameter>--with-recode[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include GNU recode support.
       </para>
       <para>
        PHP 4: Include recode support. DIR is the recode install directory.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>
   
   <sect2 id="install.configure.xml">
    <title>XML</title>

    <variablelist>   
     <varlistentry id="install.configure.with-dom">
      <term>
       <parameter>--with-dom[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include DOM support (requires libxml &gt;= 2.0). DIR is the
        libxml install directory, defaults to <filename>/usr</filename>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sablot-errors-descriptive">
      <term>
       <parameter>--enable-sablot-errors-descriptive</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable Descriptive errors
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-sablot">
      <term>
       <parameter>--with-sablot[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Sablotron support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-wddx">
      <term>
       <parameter>--enable-wddx</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable WDDX support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-xml">
      <term>
       <parameter>--disable-xml</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3; XML functionality is
        not built in by default. Use <link
         linkend="install.configure.with-xml">--with-xml</link>
        to turn it on.
       </para>
       <para>
        PHP 4: Disable XML support using bundled expat lib
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-xml">
      <term>
       <parameter>--with-xml</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include XML support
       </para>
       <para>
        PHP 4: Option not available; XML support is built in by
        default.  Use <link
         linkend="install.configure.disable-xml">--disable-xml</link> to
        turn it off.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>

  <sect1 id="install-windows95-nt">
   <title>Installation on Windows 95/98/NT systems</title>

   <simpara>
    This install guide will help you install and configure PHP on your
    Windows 9x/NT webservers. This guide was compiled by
     &link.bob;. The latest revision can be found at <ulink
     url="&url.win32install;">&url.win32install;</ulink>.
   </simpara>
   <para>
    This guide provides installation support for:
    <itemizedlist>
     <listitem>
      <para>
       Personal Web Server (Newest version recommended)
      </para>
     </listitem>
     <listitem>
      <para>
       Internet Information Server 3 or 4
      </para>
     </listitem>
     <listitem>
      <para>
       Apache 1.3.x
      </para>
     </listitem> 
     <listitem>
      <para>
       Omni HTTPd 2.0b1
      </para>
     </listitem>
    </itemizedlist>
   </para>
   
   <sect2 id="install.windows.general">
    <title>General Installation Steps</title>

    <para>
     The following steps should be performed on all installations
     before the server specific instructions.

     <itemizedlist>
      <listitem>
       <para>
        Extract the distribution file to a directory of your choice.
        &quot;C:\PHP\&quot; is a good start.
       </para>
      </listitem>
      <listitem>
       <para>
        Copy the file, &apos;php.ini-dist&apos; to your 
		&apos;%WINDOWS%&apos; directory on Windows 95/98 or to your 
		&apos;%SYSTEMROOT%&apos; directory under Windows NT or Windows 
		20000  and rename it to &apos;php.ini&apos;. Your 
		&apos;%WINDOWS%&apos; or &apos;%SYSTEMROOT%&apos; directory is
        typically:
        <simplelist>
         <member>c:\windows for Windows 95/98</member>
         <member>c:\winnt or c:\winnt40 for NT/2000 servers</member>
        </simplelist>
       </para>	
      </listitem>
      <listitem>
       <para>
        Edit your &apos;php.ini&apos; file:
        <itemizedlist>
         <listitem>
          <simpara>
           You will need to change the 'extension_dir' setting to
           point to your php-install-dir, or where you have placed
           your 'php_*.dll' files. ex: c:\php
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           If you are using Omni Httpd, do not follow the next step.
           Set the 'doc_root' to point to your webservers
           document_root. ex: c:\apache\htdocs or c:\webroot
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Choose which modules you would like to load when PHP
           starts. You can uncomment the: 'extension=php_*.dll' lines
           to load these modules. Some modules require you to have
           additional libraries installed on your system for the
           module to work correctly. The PHP <ulink
            url="&url.php.faq;">FAQ</ulink> has more information on
           where to get supporting libraries. You can also load a
           module dynamically in your script using:
           <command>dl("php_*.dll");</command>
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           On PWS and IIS, you can set the browscap.ini to point to:
           'c:\windows\system\inetsrv\browscap.ini' on Windows 95/98
           and 'c:\winnt\system32\inetsrv\browscap.ini' on NT
           Server. Additional information on using the browscap
           functionality in PHP can be found at this <ulink
            url="&url.browscap;">mirror</ulink>, select the "source"
           button to see it in action.
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </listitem>
     </itemizedlist></para>
    <simpara>
     The DLLs for PHP extensions are prefixed with 'php_'.  This
     prevents confusion between PHP extensions and their supporting
     libraries.
    </simpara>

   </sect2>

   <sect2 id="install.windows.iis3">
    <title>Windows 95/98/NT and PWS/IIS 3</title>

    <simpara>
     The recommended method for configuring these servers is to use
     the INF file included with the distribution
     (php_iis_reg.inf). You may want to edit this file and make sure
     the extensions and PHP install directories match your
     configuration. Or you can follow the steps below to do it
     manually.
    </simpara>
    <simpara>
     WARNING: These steps involve working directly with the windows
     registry. One error here can leave your system in an unstable
     state. We highly recommend that you back up your registry
     first. The PHP Development team will not be held responsible if
     you damage your registry.
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        Run Regedit.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Navigate to: <literal>HKEY_LOCAL_MACHINE /System
         /CurrentControlSet /Services /W3Svc /Parameters
         /ScriptMap</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        On the edit menu select: <literal>New->String Value</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Type in the extension you wish to use for your php
        scripts. ex: <literal>.php</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Double click on the new string value and enter the path to
        <literal>php.exe</literal> in the value data field. ex:
        <literal>c:\php\php.exe %s %s</literal>. The '%s %s' is VERY
        important, PHP will not work properly without it.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Repeat these steps for each extension you wish to associate
        with PHP scripts.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Now navigate to: <literal>HKEY_CLASSES_ROOT</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        On the edit menu select: <literal>New->Key</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Name the key to the extension you setup in the previous
        section. ex: <literal>.php</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Highlight the new key and in the right side pane, double click 
        the "default value" and enter <literal>phpfile</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Repeat the last step for each extension you set up in the
        previous section.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Now create another <literal>New->Key</literal> under
        <literal>HKEY_CLASSES_ROOT</literal> and name it
        <literal>phpfile</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Highlight the new key <literal>phpfile</literal> and in the
        right side pane, double click the "default value" and enter
        <literal>PHP Script</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Right click on the <literal>phpfile</literal> key and select
        <literal>New->Key</literal>, name it <literal>Shell</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Right click on the <literal>Shell</literal> key and select
        <literal>New->Key</literal>, name it <literal>open</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Right click on the <literal>open</literal> key and select
        <literal>New->Key</literal>, name it
        <literal>command</literal>. 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Highlight the new key <literal>command</literal> and in the
        right side pane, double click the "default value" and enter
        the path to <literal>php.exe</literal>. ex:
        <literal>c:\php\php.exe -q %1</literal>. (don't forget the
        <literal>%1</literal>). 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Exit Regedit.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        If using PWS on Windows, reboot to reload the registry.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <simpara>
     PWS and IIS 3 users now have a fully operational system. IIS 3
     users can use a nifty <ulink
      url="&url.iiscfg;">tool</ulink> from
     Steven Genusa to configure their script maps.
    </simpara>

   </sect2>

   <sect2 id="install.windowsnt.iis4">
    <title>Windows NT and IIS 4</title>

    <simpara>
     To install PHP on an NT Server running IIS 4, follow these
     instructions:
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        In Internet Service Manager (MMC), select the Web site or the
        starting point directory of an application.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Open the directory's property sheets (by right clicking and
        selecting properties), and then click the Home Directory,
        Virtual Directory, or Directory tab.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Click the Configuration button, and then click the App
        Mappings tab.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Click Add, and in the Executable box, type:
        <literal>c:\path-to-php-dir\php.exe %s %s</literal>. You MUST
        have the %s %s on the end, PHP will not function properly if
        you fail to do this.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        In the Extension box, type the file name extension you want
        associated with PHP scripts. (You must repeat step 5 and 6 for
        each extension you want accociated with PHP
        scripts. (<literal>.php</literal> and
        <literal>.phtml</literal> are common.)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Set up the appropriate security. (This is done in Internet
        Service Manager), and if your NT Server uses NTFS file system,
        add execute rights for I_USR_ to the directory that contains
        <literal>php.exe</literal>.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

   </sect2>

   <sect2 id="install.windows.apache">
    <title>Windows 9x/NT and Apache 1.3.x</title>
    
    <simpara>
     You must edit your <literal>srm.conf</literal> or
     <literal>httpd.conf</literal> to configure Apache to work with
     the PHP CGI binary.
    </simpara>
    <simpara>
     Although there can be a few variations of configuring PHP under
     Apache, this one is simple enough to be used by the
     newcomer. Please consult the Apache Docs for further
     configuration directives.
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        <literal>
         ScriptAlias /php/ "c:/path-to-php-dir/"
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         AddType application/x-httpd-php .php
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         AddType application/x-httpd-php .phtml
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         Action application/x-httpd-php "/php/php.exe"
        </literal>
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     To use the source code highlighting feature, simply create a PHP
     script file and stick this code in: <literal>&lt;?php show_source
      ("original_php_script.php"); ?></literal>. Substitute
     <literal>original_php_script.php</literal> with the name of the
     file you wish to show the source of. (this is only one way of
     doing it). <emphasis>Note:</emphasis> On Win-Apache all back
     slashes in a path statement such as: "c:\directory\file.ext",
     must be converted to forward slashes.
    </simpara>

   </sect2>

   <sect2 id="install.windows.omnihttpd">
    <title>Omni HTTPd 2.0b1 for Windows</title>
    
    <simpara>
     This has got to be the easiest config there is:
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <para>
        Step 1: Install Omni server
       </para>
      </listitem>
      <listitem>
       <para>
        Step 2: Right click on the blue OmniHTTPd icon in the system
        tray and select <literal>Properties</literal>
       </para>
      </listitem>
      <listitem>
       <para>
        Step 3: Click on <literal>Web Server Global Settings</literal>
       </para>
      </listitem>
      <listitem>
       <para>
        Step 4: On the 'External' tab, enter: <literal>virtual = .php
         | actual = c:\path-to-php-dir\php.exe</literal>
       </para>
      </listitem>
      <listitem>
       <para>
        Step 5: On the <literal>Mime</literal> tab, enter:
        <literal>virtual = wwwserver/stdcgi | actual = .php</literal>
       </para>
      </listitem>
      <listitem>
       <para>
        Step 6: Click <literal>OK</literal>
       </para>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     Repeat steps 2 - 6 for each extension you want to associate with
     PHP.
    </simpara>

   </sect2>

   <sect2 id="install.windows.installer">
    <title>Windows Installshield</title>
    
    <para>
     The Windows PHP installer available from the downloads page at 
     <ulink url="&url.php;">&url.php;</ulink> installs the CGI version of 
     PHP and, for IIS, PWS, and Xitami, configures the web server as well.
    </para>
    
    <simpara>
     Install your choosen http server on your system and make sure it all works.
    </simpara>
    
    <simpara>
     Run the installer exe file and follow the instructions provided by the
     installation wizard. Two types of installation are supported - standard,
     which provides sensible defaults for all the settings it can, and
     advanced, which asks questions as it goes along.
    </simpara>
    
    <simpara>
     The installation wizard gathers enough information to set up the 
     <filename>php.ini</filename> file and configure the web server to use PHP.
     For IIS and also PWS on NT Workstation, a list of all the nodes on the server 
     with script map settings is displayed, and you can choose those nodes to which 
     you wish to add the PHP script mappings.
    </simpara>

    <simpara>
     Once the installation has completed the installer will inform you if you
     need to restart your system, restart the server, or just start using PHP.
    </simpara>
   
   </sect2>

   <sect2 id="install.windows.modules">
    <title>PHP Modules</title>

    <para>
     <table>
      <title>PHP Modules</title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>php_calendar.dll</entry>
         <entry>Calendar conversion functions</entry>
        </row>
        <row>
         <entry>php_crypt.dll</entry>
         <entry>Crypt functions</entry>
        </row>
        <row>
         <entry>php_dbase.dll</entry>
         <entry>DBase functions</entry>
        </row>
        <row>
         <entry>php_dbm.dll</entry>
         <entry>GDBM emulation via Berkely DB2 library</entry>
        </row>
        <row>
         <entry>php_filepro.dll</entry>
         <entry>READ ONLY access to filepro databases</entry>
        </row>
        <row>
         <entry>php_gd.dll</entry>
         <entry>GD Library functions for gif manipulation</entry>
        </row>
        <row>
         <entry>php_hyperwave.dll</entry>
         <entry>HyperWave functions</entry>
        </row>
        <row>
         <entry>php_imap4r2.dll</entry>
         <entry>IMAP 4 functions</entry>
        </row>
        <row>
         <entry>php_ldap.dll</entry>
         <entry>LDAP functions</entry>
        </row>
        <row>
         <entry>php_msql1.dll</entry>
         <entry>mSQL 1 client</entry>
        </row>
        <row>
         <entry>php_msql2.dll</entry>
         <entry>mSQL 2 client</entry>
        </row>
        <row>
         <entry>php_mssql.dll</entry>
         <entry>MSSQL client (requires MSSQL DB-Libraries</entry>
        </row>
        <row>
         <entry>php3_mysql.dll (Built into PHP 4)</entry>
         <entry>MySQL functions</entry>
        </row>
        <row>
         <entry>php_nsmail.dll</entry>
         <entry>Netscape mail functions</entry>
        </row>
        <row>
         <entry>php_oci73.dll</entry>
         <entry>Oracle functions</entry>
        </row>
        <row>
         <entry>php_snmp.dll</entry>
         <entry>SNMP get and walk functions (NT only!)</entry>
        </row>
        <row>
         <entry>php_zlib.dll</entry>
         <entry>ZLib functions</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

   </sect2>

  </sect1>

  <sect1 id="install-problems">
   <title>Problems?</title>

   <sect2>
    <title>Read the FAQ</title>
    <simpara>
     Some problems are more common than others.  The most common ones
     are listed in the PHP FAQ, found at <ulink
      url="&url.php.faq;">&url.php.faq;</ulink>
    </simpara>
   </sect2>

   <sect2 id="install.bugreports">
    <title>Bug reports</title>
    <simpara>
     If you think you have found a bug in PHP, please report it.  The
     PHP developers probably don't know about it, and unless you
     report it, chances are it won't be fixed. You can report bugs
     using the bug-tracking system at <ulink
      url="&url.php.bugs;">&url.php.bugs;</ulink>.
    </simpara>
   </sect2>

   <sect2 id="install.otherproblems">
    <title>Other problems</title>

    <simpara>
     If you are still stuck, someone on the PHP installation mailing list may be
     able to help you. You should check out the archive first, in case
     someone already answered someone else who had the same problem as
     you. The archives are available from the support page on <ulink
      url="&url.php;">&url.php;</ulink>.  To subscribe to the PHP installation
     mailing list, send an empty mail to <ulink
      url="mailto:&email.php.install.subscribe;">&email.php.install.subscribe;</ulink>.
     The mailing list address is
     <literal>&email.php.install;</literal>.
    </simpara>
    <simpara>
     If you want to get help on the mailing list, please try to be
     precise and give the necessary details about your environment
     (which operating system, what PHP version, what web server, if
     you are running PHP as CGI or a server module, etc.), and
     preferably enough code to make others able to reproduce and test
     your problem.
    </simpara>
   </sect2>

  </sect1>

 </chapter>

 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->
