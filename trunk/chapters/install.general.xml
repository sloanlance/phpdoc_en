<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
  <sect1 id="install.general">
   <title>General Installation Considerations</title>
   <para>
    Before installing first, you need to know what do you
    want to use PHP for. There are three main fields you
    can use PHP, as described in the
    <link linkend="intro-whatcando">What can PHP do?</link>
    section:
    <itemizedlist>
     <listitem><simpara>Server-side scripting</simpara></listitem>
     <listitem><simpara>Command line scripting</simpara></listitem>
     <listitem><simpara>Client-side GUI applications</simpara></listitem>
    </itemizedlist>
   </para>
   <para>
    For the first and most common form, you need three things:
    PHP itself, a web server and a web browser. You
    probably already have a web browser, and depending on
    your operating system setup, you may also have a web
    server (e.g. Apache on Linux or IIS on Windows).
    You may also rent webspace at a company. This way, you
    don't need to set up anything on your own, only write
    your PHP scripts, upload it to the server you rent, and
    see the results in your browser. 
   </para>
   <para>
    While setting up the server and PHP on your own, you have
    two choices for the method of connecting PHP to the
    server. For many servers PHP has a direct module
    interface (also called SAPI). These servers include
    Apache, Microsoft Internet Information Server,
    Netscape and iPlanet servers. Many other servers
    have support for ISAPI, the Microsoft module
    interface (OmniHTTPd for example). If PHP has no
    module support for your web server, you can always
    use it as a CGI processor. This means you set up
    your server to use the command line executable of
    PHP (<filename>php.exe</filename> on Windows) to
    process all PHP file requests on the server.
   </para>
   <para>
    If you are also interested to use PHP for command line
    scripting (e.g. write scripts autogenerating some images
    for you offline, or processing text files depending
    on some arguments you pass to them), you always need
    the command line executable. For more information, read
    the section about <link linkend="features.commandline">writing
    command line PHP applications</link>. In this case,
    you need no server and no browser.
   </para>
   <para>
    With PHP you can also write client side GUI applications
    using the PHP-GTK extension. This is a completely
    different approach than writing web pages, as you
    do not output any HTML, but manage windows and objects
    within them. For more information about PHP-GTK, please
    <ulink url="&url.php.gtk;">visit the site dedicated to
    this extension</ulink>. PHP-GTK is not included in the
    official PHP distribution.
   </para>
   <para>
    From now on, this section deals with setting up PHP
    for web servers on Unix and Windows with server module
    interfaces and CGI executables.
   </para>
   <para>
    Downloading PHP, the source code, and binary
    distributions for Windows can be found at
    <ulink url="&url.php.downloads;">&url.php.downloads;</ulink>.
    We recommend you to choose a
    <ulink url="&url.mirrors;">mirror</ulink> nearest
    to you for downloading the distributions.
   </para>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
