<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
   <sect1 id="install.windows.apache1">
    <title>Apache 1.3.x on Microsft Windows</title>
    <para>
     This section contains notes and hints specific to Apache 1.3.x installs
     of PHP on Microsoft Windows systems. We also
     have <link linkend="install.windows.apache2">instructions and notes
     for Apache 2 on a separate page</link>.
    </para>
    
    <simpara>
     There are two ways to set up PHP to work with Apache 1.3.x
     on Windows. One is to use the CGI binary (php.exe),
     the other is to use the Apache module DLL. In either case
     you need to stop the Apache server, and edit your
     &httpd.conf; to configure Apache to work with PHP.
    </simpara>
    <simpara>
     It is worth noting here that now the SAPI module has been 
     made more stable under Windows, we recommend it's use above
     the CGI binary, since it is more transparent and secure.
    </simpara>
    <simpara>
     Although there can be a few variations of configuring PHP
     under Apache, these are simple enough to be used by the
     newcomer. Please consult the Apache Docs for further
     configuration directives.
    </simpara>
  
    <para>
     If you unziped the PHP package to <filename>c:\php\</filename> as described
     in the <link linkend="install.windows.manual">Manual
     Installation Steps</link> section, you need to insert
     these lines to your Apache configuration file to set
     up the CGI binary:
     <itemizedlist>
      <listitem>
       <simpara>
        <literal>
         ScriptAlias /php/ "c:/php/"
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         AddType application/x-httpd-php .php .phtml
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         Action application/x-httpd-php "/php/php.exe"
        </literal>
       </simpara>
      </listitem>
     </itemizedlist>
     Note that the second line in the list above can be found
     in the actual versions of &httpd.conf;, but it is commented out. Remember
     also to substitute the <filename>c:/php/</filename> for your actual path to
     PHP.
     </para>

    <warning>
     <para>
      By using the CGI setup, your server is open
      to several possible attacks. Please read
      our <link linkend="security.cgi-bin">CGI security 
      section</link> to learn how to defend yourself from attacks.
     </para>
    </warning>

    <para>
     If you would like to use PHP as a module in Apache, be sure to copy
     <filename>php4ts.dll</filename> to the <filename>windows/system</filename>
     (for Windows 9x/Me), <filename>winnt/system32</filename> (for Windows
     NT/2000) or <filename>windows/system32</filename> (for Windows XP)
     directory, overwriting any older file. Then you should add the following
     lines to your Apache &httpd.conf; file:
     <itemizedlist>
      <listitem>
       <simpara>
        Open &httpd.conf; with your favorite editor and locate the
        <literal>LoadModule</literal> directive and add the following line
        <emphasis>at the end</emphasis> of the list for PHP 4:
        <literal>LoadModule php4_module "c:/php/sapi/php4apache.dll"</literal>
        or the following for PHP 5:
        <literal>LoadModule php5_module "c:/php/sapi/php5apache.dll"</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        You may find after using the Windows installer for Apache that you need
        to define the <literal>AddModule</literal> directive for
        <filename>mod_php4.c</filename>. This is especially important if the
        <literal>ClearModuleList</literal> directive is defined, which you will
        find by scrolling down a few lines. You will see a list of
        <literal>AddModule</literal> entries, add the following line
        <emphasis>at the end</emphasis> of the list:      
        <literal>AddModule mod_php4.c</literal>  For PHP 5, instead use
        <literal>AddModule mod_php5.c</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
         Search for a phrase similar to
         <literal># AddType allows you to tweak mime.types</literal>. You will
         see some <literal>AddType</literal> entries, add the following line
         <emphasis>at the end</emphasis> of the list: 
         <literal>AddType application/x-httpd-php .php</literal>.
         You can choose any extension you want to parse through PHP here. .php
         is simply the one we suggest. You can even include .html, and .php3
         can be added for backwards compatibility.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     After changing the configuration file, remember to restart the server, for
     example, <command>NET STOP APACHE</command> followed by
     <command>NET START APACHE</command>, if you run Apache as a Windows
     Service, or use your regular shortcuts.
    </simpara>
    
    <simpara>
     There are two ways you can use the source code highlighting feature,
     however their ability to work depends on your installation. If you have
     configured Apache to use PHP as an SAPI module, then by adding the
     following line to your &httpd.conf; (at the same place you inserted
     <literal>AddType application/x-httpd-php .php</literal>, see above) you can
     use this feature:
     <literal>AddType application/x-httpd-php-source .phps</literal>.
    </simpara>
    <simpara>
     If you chose to configure Apache to use PHP as a CGI binary, you
     will need to use the <function>show_source</function> function. To
     do this simply create a PHP script file and add this code: 
     <literal>&lt;?php show_source ("original_php_script.php"); ?&gt;</literal>. 
     Substitute <literal>original_php_script.php</literal> with 
     the name of the file you wish to show the source of. 
    </simpara>
    
    <note>
     <simpara>
      On Win-Apache all backslashes in a path statement such
      as "c:\directory\file.ext", must be converted to
      forward slashes, as "c:/directory/file.ext".
     </simpara>
    </note>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
