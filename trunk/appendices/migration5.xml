<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
 <appendix id="migration5">
  <title>Migrating from PHP 4 to PHP 5</title>

  <section id='migration5.changes'>
   <title>What has changed in PHP 5</title>
   <para>
    PHP 5 and the integrated Zend Engine 2 have greatly improved PHP's
    performance and capabilities, but great care has been taken to break as
    little existing code as possible. So migrating your code from PHP 4 to 5
    should be very easy. Most existing PHP 4 code should be ready to run
    without changes, but you should still know about the <link
     linkend="migration5.incompatible">few differences</link> and
    take care to test your code before switching versions in production
    environments.
   </para>
  </section>

  <section id="migration5.incompatible">
   <title>Backward Incompatible Changes</title>
   <para>
    Although most existing PHP 4 code should work without changes, you should
    pay attention to this backward imcompatible changes:
   </para>
   <itemizedlist>
    <listitem><simpara>
      <function>strrpos</function> and <function>strripos</function> now use
      the entire string as a needle.
    </simpara></listitem>
    <listitem><simpara>
      Ilegal use of string offsets causes <constant>E_ERROR</constant> instead
      of <constant>E_WARNING</constant>.
    </simpara></listitem>
    <listitem><simpara>
      <function>array_merge</function> was changed to accept only arrays. If a
      non-array variable is passed, a <constant>E_WARNING</constant> will be
      thrown for every such parameter. Be careful because your code may start
      emitting <constant>E_WARNING</constant> out of the blue.
    </simpara></listitem>
    <listitem><simpara>
     PATH_TRANSLATED server variable is no longer set implicitly under
     Apache2 SAPI in contrast to the situation in PHP 4, where it is set to
     the same value as the SCRIPT_FILENAME server variable when it is not
     populated by Apache. This change was made to comply with the <ulink
      url="&url.cgispecs;">CGI specification</ulink>. Please refer to <ulink
      url="&url.php.bugs;23610">bug #23610</ulink> for further information.
    </simpara></listitem>
    <listitem><simpara>
     The <constant>T_ML_CONSTANT</constant> constant is no longer defined by
     the <link linkend="ref.tokenizer">Tokenizer</link> extension. If
     error_reporting is set to <constant>E_ALL</constant>, PHP will generate a
     notice. Instead of <constant>T_ML_CONSTANT</constant> for /* */ the
     <constant>T_COMMENT</constant> constant is used, thus both // and /* */
     are resolved as the <constant>T_COMMENT</constant> constant. However the
     PHPDoc style comments /** */ ,which starting PHP5 are parsed by PHP, are
     recongnized as <constant>T_DOC_COMMENT</constant>.
    </simpara></listitem>
    <listitem><simpara>
     $_SERVER should be populated with argc and argv if variables_order
     includes "S".  If you have specifically configured your system to not
     create $_SERVER, then of course it shouldn't be there.  The change was to
     always make argc and argv available in the CLI version regardless of the
     variables_order setting. As in, the CLI version will now always populate
     the global $argc and $argv variables.
    </simpara></listitem>
    <listitem><simpara>
      Classes must be declared before used.
    </simpara></listitem>
   </itemizedlist>
  </section>

  <section id="migration5.configuration">
   <title>Migrating Configuration Files</title>
   <para>
    Since the ISAPI modules changed their names, from php4xxx to php5xxx, you
    need to make some changes in the configuration files. There were also
    changes in the CLI and CGI filenames. Please refer to the corresponding
    section for more information.
   </para>
   <para>
    Migrate the Apache configuration is extremely easy. See the example below
    to check the change you need to do:
    <informalexample>
     <programlisting role="apache-conf">
<![CDATA[
# change this line:    
LoadModule php4_module /php/sapi/php4apache2.dll

# with this one:
LoadModule php5_module /php/php5apache2.dll
]]>
     </programlisting>
    </informalexample>
   </para>
   <para>
    If your webserver is running PHP in CGI mode, you should note that the
    CGI version has changed its name from php.exe to php-cgi.exe.
    In Apache you should do something like this:
    <informalexample>
     <programlisting role="apache-conf">
<![CDATA[
# change this line:    
Action application/x-httpd-php "/php/php.exe" 

# with this one:
Action application/x-httpd-php "/php/php-cgi.exe" 
]]>
     </programlisting>
    </informalexample>
   </para>
   <para>
    In other webservers you need to change either the CGI or the ISAPI module
    filenames.
   </para>
  </section>

 </appendix>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
