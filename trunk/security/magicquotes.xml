<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
  <chapter id="security.magicquotes">
   <title>Magic Quotes</title>

   <para>
    Magic Quotes is a process which automatically escapes all incoming data to a PHP script.
   </para>
   <warning>
    <para>
     You should NOT rely on this feature. It is strongly prefered to turn this off, and deal with
     user input properly.
    </para>
   </warning>

   <sect1 id="security.magicquotes.what">
    <title>What are Magic Quotes</title>
    <para>
     When on, all <literal>'</literal> (single-quote), <literal>"</literal> (double quote),
     <literal>\</literal> (backslash) and <literal>NULL</literal> characters are escaped with a
     backslash automatically.
    </para>
    <para>
     Magic Quotes has 3 Modes of operation.
    </para>
    <para>
     <link linkend="ini.magic_quotes_gpc">magic_quotes_gpc</link>. This affects GET, POST and COOKIE
     data. This information is populated by the end users of the script.
    </para>
    <para>
     <link linkend="ini.magic_quotes_runtime">magic_quotes_runtime</link>.  If enabled, most functions
     that return data from any sort of external source including databases and text files will have
     quotes escaped with a backslash.
    </para>
    <para>
     <link linkend="ini.magic_quotes_sybase">magic_quotes_sybase</link>. If enabled, a single-quote
     is escaped with a single-quote instead of a backslash.
    </para>
    <para>
     This setting will completely override magic_quotes_gpc. Having both directives enabled means
     only single quotes are escaped as <literal>''</literal>. Double quotes, backslashes and NULL's
     will remain untouched and unescaped. 
    </para>
   </sect1>

   <sect1 id="security.magicquotes.why">
    <title>Why use Magic Quotes</title>
    <para>
     Magic-quotes were implemented in PHP to reduce code written by beginners from being dangerous.
    </para>
    <para>
     Magic Quotes are enabled by default.
    </para>
    <para>
     If you disable magic quotes, you must be very careful to protect yourself from
     <link linkend="security.database.sql-injection">SQL Injection Attacks</link>.
    </para>
   </sect1>

   <sect1 id="security.magicquotes.whynot">
    <title>Why not to use Magic Quotes</title>
    <para>
     Portability, performance, etc.
    </para>
   </sect1>

   <sect1 id="security.magicquotes.disabling">
    <title>Disabling Magic Quotes</title>
    <para>
     Optimally, Magic Quotes should be disabled server side.
    </para>
    <para>
     <example>
      <title>Disabling magic quotes server side</title>
      <para>
       Set the value of magic_quotes_gpc and magic_quotes_runtime to Off in the
       php.ini.
      </para>
      <screen>
<![CDATA[
; Magic quotes
;

; Magic quotes for incoming GET/POST/Cookie data.
magic_quotes_gpc = Off

; Magic quotes for runtime-generated data, e.g. data from SQL, from exec(), etc.
magic_quotes_runtime = Off

; Use Sybase-style magic quotes (escape ' with '' instead of \').
magic_quotes_sybase = Off
]]>
      </screen>
      <para>
       If you do not have access to the server config, you can put this
       line in a ".htaccess" file. This will disable magic_quotes.
      </para>
      <screen>
<![CDATA[
php_value magic_quotes_gpc Off
]]>
      </screen>
     </example>
    </para>
    <para>
     In the interests of writing portable code (code that works
     in any environment), or, if you do not have access to change
     php.ini, you may wish to disable the effects of magic quotes
     on a per-script basis.
    </para>
    <para>
     <example>
      <title>Disabling magic quotes at runtime</title>
      <programlisting role="php">
<![CDATA[
<?php
if (get_magic_quotes_gpc()) {
    function stripslashes_deep($value)
    {
        $value = is_array($value) ?
                    array_map('stripslashes_deep', $value) :
                    stripslashes($value);

        return $value;
    }

    $_POST = array_map('stripslashes_deep', $_POST);
    $_GET = array_map('stripslashes_deep', $_GET);
    $_COOKIE = array_map('stripslashes_deep', $_COOKIE);
}
?>
]]>
      </programlisting>
     </example>
    </para>

   </sect1>

  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
