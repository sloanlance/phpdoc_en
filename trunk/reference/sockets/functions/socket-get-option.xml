<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./en/functions/sockets.xml, last change in rev 1.27 -->
  <refentry id="function.socket-get-option">
   <refnamediv>
    <refname>socket_get_option</refname>
    <refpurpose>Gets socket options for the socket </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>mixed</type><methodname>socket_get_option</methodname>
      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
      <methodparam><type>int</type><parameter>level</parameter></methodparam>
      <methodparam><type>int</type><parameter>optname</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     The <function>socket_get_option</function> function retrieves the value for
     the option specified by the <parameter>optname</parameter> parameter for the
     socket specified by the <parameter>socket</parameter> parameter. <function>socket_get_option</function>
     will return &false; on failure.
    </para>
    <para>
     The <parameter>level</parameter> parameter specifies the protocol level at
	 which the option resides. For example, to retrieve options at the socket level,
	 a <parameter>level</parameter> parameter of SOL_SOCKET would be used. Other
	 levels, such as TCP, can be used by specifying the protocol number of that level.
	 Protocol numbers can be found by using the <function>getprotobyname</function> function.
    </para>
    <table>
    <title>Available Socket Options</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Option</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>SO_DEBUG</entry>
       <entry>
        Reports whether debugging information is being recorded.
       </entry>
      </row>
      <row>
       <entry>SO_ACCEPTCONN</entry>
       <entry>
		Reports whether socket listening is enabled.
       </entry>
      </row>
      <row>
       <entry>SO_BROADCAST</entry>
       <entry>
		Reports whether transmission of broadcast messages is supported.
       </entry>
      </row>
      <row>
       <entry>SO_REUSEADDR</entry>
       <entry>
		Reports whether local addresses can be reused.
       </entry>
      </row>
      <row>
       <entry>SO_KEEPALIVE</entry>
       <entry>
		Reports whether connections are kept active with periodic transmission
		of messages. If the connected socket fails to respond to these messages,
		the connection is broken and processes writing to that socket are notified
		with a SIGPIPE signal.
       </entry>
      </row>
      <row>
       <entry>SO_LINGER</entry>
       <entry>
		Reports whether the <parameter>socket</parameter> lingers on <function>socket_close</function> if data is present.
       </entry>
      </row>
      <row>
       <entry>SO_OOBINLINE</entry>
       <entry>
		Reports whether the <parameter>socket</parameter> leaves out-of-band data inline.
       </entry>
      </row>
      <row>
       <entry>SO_SNDBUF</entry>
       <entry>
		Reports send buffer size information.
       </entry>
      </row>
      <row>
       <entry>SO_RCVBUF</entry>
       <entry>
		Reports recieve buffer size information.
       </entry>
      </row>
      <row>
       <entry>SO_ERROR</entry>
       <entry>
		Reports information about error status and clears it.
       </entry>
      </row>
      <row>
       <entry>SO_TYPE</entry>
       <entry>
		Reports the <parameter>socket</parameter> type.
       </entry>
      </row>
      <row>
       <entry>SO_DONTROUTE</entry>
       <entry>
		Reports whether outgoing messages bypass the standard routing facilities.
       </entry>
      </row>
      <row>
       <entry>SO_RCVLOWAT</entry>
       <entry>
        Reports the minimum number of bytes to process for <parameter>socket</parameter> input operations.
		( Defaults to 1 )
       </entry>
      </row>
      <row>
       <entry>SO_RCVTIMEO</entry>
       <entry>
		Reports the timeout value for input operations.
       </entry>
      </row>
      <row>
       <entry>SO_SNDLOWAT</entry>
       <entry>
		Reports the minimum number of bytes to process for <parameter>socket</parameter> output operations.
       </entry>
      </row>
      <row>
       <entry>SO_SNDTIMEO</entry>
       <entry>
        Reports the timeout value specifying the amount of time that an output
		function blocks because flow control prevents data from being sent.
       </entry>
      </row>
     </tbody>
    </tgroup>
    </table>
    <note>
     <para>
      This function used to be called <literal>socket_getopt()</literal> prior
      to PHP 4.3.0
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
