<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- splitted from ./en/functions/ibase.xml, last change in rev 1.2 -->
  <refentry id="function.ibase-execute">
   <refnamediv>
    <refname>ibase_execute</refname>
    <refpurpose>Execute a previously prepared query</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>ibase_execute</methodname>
      <methodparam><type>resource</type><parameter>query</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>bind_arg</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Execute a query prepared by <function>ibase_prepare</function>. If 
     the query raises an error, returns &false;. If it is successful and 
     there is a (possibly empty) result set (such as with a SELECT query), 
     returns a result identifier. If the query was successful and there were 
     no results, returns &true;.
    </para>
    <para>
     This is a lot more effective than using <function>ibase_query</function>
     if you are repeating a same kind of query several times with only
     some parameters changing.
    </para>
    <para>
     <example>
      <title><function>ibase_execute</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
   
    $dbh = ibase_connect($host, $username, $password); 

    $updates = array(
        1 => 'Eric',
        5 => 'Filip',
        7 => 'Larry'
    );

    $query = ibase_prepare($dbh, "UPDATE FOO SET BAR = ? WHERE BAZ = ?");

    while (list($baz, $bar) = each($updates)) {
        ibase_execute($query, $bar, $baz);
    }
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
      <para>
      In PHP 5.0.0 and up, this function returns the number of rows affected by
      the query (if > 0 and applicable to the statement type). A query that succeeded,
      but did not affect any rows (e.g. an UPDATE of a non-existent record) will return
      &true;.
      </para>
    </note>
    <para>
    See also <function>ibase_query</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
