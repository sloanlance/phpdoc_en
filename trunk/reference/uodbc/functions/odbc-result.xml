<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/uodbc.xml, last change in rev 1.2 -->
  <refentry id="function.odbc-result">
   <refnamediv>
    <refname>odbc_result</refname>
    <refpurpose>Get result data</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>odbc_result</methodname>
      <methodparam><type>resource</type><parameter>result_id</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>field</parameter></methodparam>
     </methodsynopsis>
    <para>
     Returns the contents of the field.
    </para>
    <para>
     <parameter>field</parameter> can either be an integer containing
     the column number of the field you want; or it can be a string
     containing the name of the field. For example:
     <informalexample><programlisting>
<![CDATA[
$item_3 = odbc_result ($Query_ID, 3);
$item_val = odbc_result ($Query_ID, "val");
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     The first call to <function>odbc_result</function> returns the
     value of the third field in the current record of the query
     result. The second function call to
     <function>odbc_result</function> returns the value of the field
     whose field name is "val" in the current record of the query
     result. An error occurs if a column number parameter for a field
     is less than one or exceeds the number of columns (or fields) in
     the current record. Similarly, an error occurs if a field with a
     name that is not one of the fieldnames of the table(s) that
     is(are) being queried.
    </para>
    <para>
     Field indices start from 1. Regarding the way binary or
     long column data is returned refer to 
     <function>odbc_binmode</function> and 
     <function>odbc_longreadlen</function>.

<!--

If the requested field contains
     binary data or is of datatype LONG, 
longer than 4096 bytes, the contents is not
     returned, instead it is sent directly to the client. Hint: If you
     need to have binary data returned, use the SQL function HEX() to
     retrieve the field in hexadecimal notation.  E.g. "SELECT
     HEX(binary_col) FROM mytable"
-->

    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
