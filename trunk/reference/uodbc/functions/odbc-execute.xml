<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<refentry xml:id="function.odbc-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>odbc_execute</refname>
  <refpurpose>Execute a prepared statement</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>odbc_execute</methodname>
   <methodparam><type>resource</type><parameter>result_id</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>parameters_array</parameter></methodparam>
  </methodsynopsis>
  <para>
   Executes a statement prepared with <function>odbc_prepare</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result_id</parameter></term>
     <listitem>
      <para>
       The result id <type>resource</type>, from <function>odbc_prepare</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parameters_array</parameter></term>
     <listitem>
      <para>
       Parameters in <parameter>parameter_array</parameter> will be
       substituted for placeholders in the prepared statement in order.
       Elements of this array will be converted to strings by calling this
       function.
      </para>
      <para>
       Any parameters in <parameter>parameter_array</parameter> which
       start and end with single quotes will be taken as the name of a
       file to read and send to the database server as the data for the
       appropriate placeholder.
      </para>
      <simpara>
       If you wish to store a string which actually begins and ends with
       single quotes, you must add a space or other non-single-quote character
       to the beginning or end of the parameter, which will prevent the
       parameter from being taken as a file name. If this is not an option,
       then you must use another mechanism to store the string, such as
       executing the query directly with <function>odbc_exec</function>).
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.2.0</entry>
       <entry>
        File reading is now subject to &safemode; and
        <link linkend="ini.open-basedir">open-basedir</link> restrictions
        in <parameter>parameters_array</parameter>.
       </entry>
      </row>
      <row>
       <entry>4.1.1</entry>
       <entry>
        <link linkend="features.remote-files">Remote files</link>
        are no longer supported in <parameter>parameters_array</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
