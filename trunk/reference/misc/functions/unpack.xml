<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./en/functions/misc.xml, last change in rev 1.22 -->
<refentry id="function.unpack">
 <refnamediv>
  <refname>unpack</refname>
  <refpurpose>Unpack data from binary string</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>array</type><methodname>unpack</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>unpack</function> from binary string into array
   according to <parameter>format</parameter>. Returns array
   containing unpacked elements of binary string.
  </para>
  <para>
   <function>unpack</function> works slightly different from Perl as
   the unpacked data is stored in an associative array. To
   accomplish this you have to name the different format codes and
   separate them by a slash /.
   <example>
    <title><function>unpack</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$array = unpack("c2chars/nint", $binarydata);
?>
]]>
    </programlisting>
    <para>
     The resulting array will contain the entries "chars1",
     "chars2" and "int".
    </para>
   </example>
  </para>
  <caution>
   <para>
    Note that PHP internally stores integral values as signed. If you
    unpack a large unsigned long and it is of the same size as PHP
    internally stored values the result will be a negative number
    even though unsigned unpacking was specified.
   </para>
  </caution>
  <para>
   See also <function>pack</function> for an explanation of the format
   codes.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
