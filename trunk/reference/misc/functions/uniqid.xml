<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<refentry xml:id="function.uniqid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>uniqid</refname>
  <refpurpose>Generate a unique ID</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>uniqid</methodname>
   <methodparam choice="opt"><type>string</type><parameter>prefix</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>more_entropy</parameter><initializer>false</initializer></methodparam>
  </methodsynopsis>
  <para>
   Gets a prefixed unique identifier based on the current time in
   microseconds. 
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>prefix</parameter></term>
     <listitem>
      <para>
       Can be useful, for instance, if you generate identifiers
       simultaneously on several hosts that might happen to generate the
       identifier at the same microsecond.
      </para>
      <para>
       With an empty <parameter>prefix</parameter>, the returned string will
       be 13 characters long.  If <parameter>more_entropy</parameter> is
       &true;, it will be 23 characters.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>more_entropy</parameter></term>
     <listitem>
      <para>
       If set to &true;, <function>uniqid</function> will add additional
       entropy (using the combined linear congruential generator) at the end
       of the return value, which should make the results more unique.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the unique identifier, as a string.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   If you need a unique identifier or token and you intend to give
   out that token to the user via the network (i.e. session cookies),
   it is recommended that you use something along these lines:
  </para>
  <para>
   This will create a 32 character identifier (a 128 bit hex number)
   that is extremely difficult to predict.
   <example>
    <title><function>uniqid</function> Example</title>
    <programlisting role="php">
<![CDATA[
<?php
// no prefix
// works only in PHP 5 and later versions
$token = md5(uniqid());

// better, difficult to guess
$better_token = md5(uniqid(mt_rand(), true));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0</entry>
       <entry>
        The <parameter>prefix</parameter> parameter was made optional.
       </entry>
      </row>
      <row>
       <entry>4.3.1</entry>
       <entry>
        The limit of 114 characters long for <parameter>prefix</parameter>
        was raised.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
