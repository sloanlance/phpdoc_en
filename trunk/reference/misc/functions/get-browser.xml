<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./en/functions/misc.xml, last change in rev 1.2 -->
  <refentry id="function.get-browser">
   <refnamediv>
    <refname>get_browser</refname>
    <refpurpose>
     Tells what the user's browser is capable of
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>object</type><methodname>get_browser</methodname>
      <methodparam choice="opt"><type>string</type><parameter>user_agent</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>get_browser</function> attempts to determine the
     capabilities of the user's browser. This is done by looking up
     the browser's information in the
     <filename>browscap.ini</filename> file. By default, the value of
     $HTTP_USER_AGENT is used; however, you can alter this (i.e., look
     up another browser's info) by passing the optional
     <parameter>user_agent</parameter> parameter to
     <function>get_browser</function>.
    </simpara>
    <simpara>
     The information is returned in an object, which will contain
     various data elements representing, for instance, the browser's
     major and minor version numbers and ID string; &true;/false values
     for features such as frames, JavaScript, and cookies; and so
     forth.
    </simpara>
    <simpara>
     While <filename>browscap.ini</filename> contains information on
     many browsers, it relies on user updates to keep the database
     current. The format of the file is fairly self-explanatory.
    </simpara>
    <para>
     The following example shows how one might list all available
     information retrieved about the user's browser.
     <example>
      <title><function>get_browser</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
function list_array ($array) {
    while (list ($key, $value) = each ($array)) {
    $str .= "<b>$key:</b> $value<br>\n";
    }
    return $str;
}
echo "$HTTP_USER_AGENT<hr>\n";
$browser = get_browser();
echo list_array ((array) $browser);
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     The output of the above script would look something like this:
    </simpara>
    <programlisting>
<![CDATA[
Mozilla/4.5 [en] (X11; U; Linux 2.2.9 i586)<hr>
<b>browser_name_pattern:</b> Mozilla/4\.5.*<br>
<b>parent:</b> Netscape 4.0<br>
<b>platform:</b> Unknown<br>
<b>majorver:</b> 4<br>
<b>minorver:</b> 5<br>
<b>browser:</b> Netscape<br>
<b>version:</b> 4<br>
<b>frames:</b> 1<br>
<b>tables:</b> 1<br>
<b>cookies:</b> 1<br>
<b>backgroundsounds:</b> <br>
<b>vbscript:</b> <br>
<b>javascript:</b> 1<br>
<b>javaapplets:</b> 1<br>
<b>activexcontrols:</b> <br>
<b>beta:</b> <br>
<b>crawler:</b> <br>
<b>authenticodeupdate:</b> <br>
<b>msn:</b> <br>
]]>
    </programlisting>
    <simpara>
     In order for this to work, your <link
     linkend="ini.sect.browscap">browscap</link> configuration file
     setting must point to the correct location of the
     <filename>browscap.ini</filename> file.
    </simpara>
    <simpara>
     For more information (including locations from which you may
     obtain a <filename>browscap.ini</filename> file), check the PHP
     FAQ at <ulink
     url="&url.php.faq;">&url.php.faq;</ulink>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
