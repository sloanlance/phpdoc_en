<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- splitted from ./en/functions/misc.xml, last change in rev 1.2 -->
  <refentry id="function.get-browser">
   <refnamediv>
    <refname>get_browser</refname>
    <refpurpose>
     Tells what the user's browser is capable of
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>get_browser</methodname>
     <methodparam choice="opt"><type>string</type><parameter>user_agent</parameter></methodparam>
     <methodparam choice="opt"><type>bool</type><parameter>return_array</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>get_browser</function> attempts to determine the
     capabilities of the user's browser. This is done by looking up
     the browser's information in the <filename>browscap.ini</filename>
     file.
    </para>
    <para>
     By default, the value of <varname>$_SERVER['HTTP_USER_AGENT']</varname> is
     used; however, you can alter this (i.e., look up another browser's
     info) by passing the optional <parameter>user_agent</parameter> parameter to
     <function>get_browser</function>. You can bypass <parameter>user_agent</parameter>
     parameter with &null; value.
    </para>
    <simpara>
     The information is returned in an <type>object</type>, which will contain
     various data elements representing, for instance, the browser's
     major and minor version numbers and ID string; &true;/&false; values
     for features such as frames, JavaScript, and cookies; and so
     forth.
    </simpara>
    <simpara>
     As of PHP 4.3.2, if the optional parameter
     <parameter>return_array</parameter> is &true;, this function will return an
     <type>array</type> instead of an <type>object</type>.
    </simpara>
    <para>
     <example>
      <title>Listing all information about the users browser</title>
      <programlisting role="php">
<![CDATA[
<?php
echo $_SERVER['HTTP_USER_AGENT'] . "\n\n";

$browser = get_browser(null, true);
print_r($browser);
?>
]]>
      </programlisting>
      &example.outputs.similar;
      <screen>
<![CDATA[
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7) Gecko/20040803 Firefox/0.9.3

Array
(
    [browser_name_regex] => ^mozilla/5\.0 (windows; .; windows nt 5\.1; .*rv:.*) gecko/.* firefox/0\.9.*$
    [browser_name_pattern] => Mozilla/5.0 (Windows; ?; Windows NT 5.1; *rv:*) Gecko/* Firefox/0.9*
    [parent] => Firefox 0.9
    [platform] => WinXP
    [browser] => Firefox
    [version] => 0.9
    [majorver] => 0
    [minorver] => 9
    [css] => 2
    [frames] => 1
    [iframes] => 1
    [tables] => 1
    [cookies] => 1
    [backgroundsounds] => 
    [vbscript] => 
    [javascript] => 1
    [javaapplets] => 1
    [activexcontrols] => 
    [cdf] => 
    [aol] => 
    [beta] => 1
    [win16] => 
    [crawler] => 
    [stripper] => 
    [wap] => 
    [netclr] => 
)
]]>
      </screen>
     </example>
    </para>
    <para>
     The <literal>cookies</literal> value simply means that the browser
     itself is capable of accepting cookies and does not mean the user has 
     enabled the browser to accept cookies or not. The only way to test if
     cookies are accepted is to set one with <function>setcookie</function>,
     reload, and check for the value.
    </para>
    <note>
     <para>
      In order for this to work, your <link linkend="ini.browscap">browscap</link>
      configuration setting in &php.ini; must point to the correct location of the
      <filename>browscap.ini</filename> file on your system.
     </para>
     <para>
      <filename>browscap.ini</filename> is not bundled with PHP, but you
      may find an <ulink url="&url.browscap.download;">up-to-date php_browscap.ini</ulink>
      file here.
     </para>
     <para>
      While <filename>browscap.ini</filename> contains information on
      many browsers, it relies on user updates to keep the database
      current. The format of the file is fairly self-explanatory.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
