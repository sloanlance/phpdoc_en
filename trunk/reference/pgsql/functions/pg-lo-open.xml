<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.2 -->
<refentry id="function.pg-lo-open">
 <refnamediv>
  <refname>pg_lo_open</refname>
  <refpurpose>Open a large object</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>pg_lo_open</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>int</type><parameter>oid</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_lo_open</function> opens a Large Object and
   returns large object resource. The resource encapsulates
   information about the connection. 
   <parameter>oid</parameter> specifies a valid large object oid and
   <parameter>mode</parameter> can be either "r", "w", or "rw". It
   returns &false; if there is an error.
  </para>
  <warning>
   <para>
    Do not close the database connection before closing the large
    object resource. 
   </para>
  </warning>
  <para>
   To use the large object (lo) interface, it is necessary to
   enclose it within a transaction block.
  </para>
  <note>
   <para>
    This function used to be called <literal>pg_loopen()</literal>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_lo_close</function></member>
    <member><function>pg_lo_create</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
