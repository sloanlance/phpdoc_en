<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.2 -->
  <refentry id='function.pg-send-query'>
   <refnamediv>
    <refname>pg_send_query</refname>
    <refpurpose>
     Sends asynchronous query
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>pg_send_query</methodname>
      <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
     <methodsynopsis>
      <type>bool</type><methodname>pg_send_query</methodname>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_send_query</function> send asynchronous query to the
     <parameter>connection</parameter>. Unlike
     <function>pg_query</function>, it can send multiple query to
     PostgreSQL and get the result one by one using
     <function>pg_get_result</function>. Script execution is not blocked
     while query is executing. Use
     <function>pg_connection_busy</function> to check connection is
     busy (i.e. query is executing). Query may be cancelled by calling
     <function>pg_cancel_query</function>.
    </para>
    <para>
     Although user can send multiple query at once, user cannot send
     multiple query over busy connection. If query is sent while
     connection is busy, it waits until last query is finished and
     discards all result.
    </para>
    <para>
     <example>
      <title>Asynchronous Queries</title>
      <programlisting role="php">
<![CDATA[
<?php
    $dbconn = pg_connect("dbname=publisher") or die("Could not connect");

    if (!pg_connection_busy($dbconn)) {
        pg_send_query($dbconn, "select * from authors; select count(*) from authors;");
    }
    
    $res1 = pg_get_result($dbconn);
    echo "First call to pg_get_result(): $res1\n";
    $rows1 = pg_num_rows($res1);
    echo "$res1 has $rows1 records\n\n";
    
    $res2 = pg_get_result($dbconn);
    echo "second call to pg_get_result(): $res2\n";
    $rows2 = pg_num_rows($res2);
    echo "$res2 has $rows2 records\n";
?>
]]>
      </programlisting>
      <para>
       The above example would produce the following output:
      </para>
      <screen>
<![CDATA[
first call to pg_get_result(): Resource id #3
Resource id #3 has 3 records

second call to pg_get_result(): Resource id #4
Resource id #4 has 1 records
]]>
      </screen>
     </example> 
    </para>
    <para>
     See also <function>pg_query</function>,
     <function>pg_cancel_query</function>,
     <function>pg_get_result</function> and
     <function>pg_connection_busy</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
