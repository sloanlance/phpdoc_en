<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.2 -->
  <refentry id="function.pg-lo-create">
   <refnamediv>
    <refname>pg_lo_create</refname>
    <refpurpose>Create a large object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>pg_lo_create</methodname>
      <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_lo_create</function> creates a Large
     Object and returns the <varname>oid</varname> of the large
     object.  <parameter>connection</parameter> specifies a valid
     database connection opened by <function>pg_connect</function> or
     <function>pg_pconnect</function>.  PostgreSQL access modes
     INV_READ, INV_WRITE, and INV_ARCHIVE are not supported, the
     object is created always with both read and write
     access. INV_ARCHIVE has been removed from PostgreSQL itself
     (version 6.3 and above). It returns large object oid,
     otherwise it returns &false; if an error occurred.
     
    </para>
    <para>
     To use the large object (lo) interface, it is necessary to
     enclose it within a transaction block.
    </para>
    <note>
     <para>
      This function used to be called <literal>pg_locreate()</literal>.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
