<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
  <refentry id="function.id3-get-tag">
   <refnamediv>
    <refname>id3_get_tag</refname>
    <refpurpose>Get all information stored in an ID3 tag</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>id3_get_tag</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>version</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>id3_get_tag</function> is used to get all information stored
     in the id3 tag of the specified file.
    </para>
    <note>
     <simpara>Instead of a filename you may also pass a valid stream resource.</simpara>
    </note>
    <para>
     The optional <parameter>version</parameter> parameter allows you to
     specify the version of the tag as MP3 files may contain both, version 1.x and
     version 2.x tags.
    </para>
    <para>
     <example>
      <title><function>id3_get_tag</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
$tag = id3_get_tag( "path/to/example.mp3" );
print_r($tag);
?>
]]>
      </programlisting>
      <para>
       This will output something like:
      </para>
      <screen>
<![CDATA[
Array
(
    [title] => DN-38416
    [artist] => Re:\Legion
    [album] => Reflections
    [year] => 2004
    [genre] => 19
)
]]>
      </screen>
     </example>
    </para>
    <para>
      The key <literal>genre</literal> will contain an integer between 0 and 147. You may
      use <function>id3_get_genre_name</function> to convert it to a human readable string.
    </para>
    <para>
     Since version 0.2 <function>id3_get_tag</function> also supports ID3 tags of version 2.2, 2.3 and 2.4.
     To extract information from these tags, pass one of the constants ID3_V2_2, ID3_V2_3 or ID3_V2_4 as the
     second parameter.
    </para>
    <para>
     <example>
      <title><function>id3_get_tag</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
$tag = id3_get_tag( "path/to/example2.mp3", ID3_V2_3 );
print_r($tag);
?>
]]>
      </programlisting>
      <para>
       This will output something like:
      </para>
      <screen>
<![CDATA[
Array
(
    [copyright] => Dirty Mac
    [originalArtist] => Dirty Mac
    [composer] => Marcus Götze
    [artist] => Dirty Mac
    [title] => Little Big Man
    [album] => Demo-Tape
    [track] => 5/12
    [genre] => (17)Rock
    [year] => 2001
)
]]>
      </screen>
     </example>
    </para>
    <para>
     ID3 v2.x tags can contain a lot more information about the MP3 file than ID3 v1.x tags.
    </para>
    <para>
     See also <function>id3_set_tag</function>,
     <function>id3_remove_tag</function> and <function>id3_get_version</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
