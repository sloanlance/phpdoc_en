<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./en/functions/mnogosearch.xml, last change in rev 1.18 -->
 <refentry id="function.udm-alloc-agent">
  <refnamediv>
   <refname>udm_alloc_agent</refname>
   <refpurpose>Allocate mnoGoSearch session</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>udm_alloc_agent</methodname>
     <methodparam><type>string</type><parameter>dbaddr</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>dbmode</parameter></methodparam>
    </methodsynopsis>
   <para><function>udm_alloc_agent</function> returns mnogosearch agent
    identifier on success, &false; on error. This function creates a
   session with database parameters.
   </para>
   
   <para>
    <parameter>dbaddr</parameter> - URL-style database description. 
    Options (type, host, database name, port, user and password) to connect 
    to SQL database. Do not matter for built-in text files support. Format:
    DBAddr DBType:[//[DBUser[:DBPass]@]DBHost[:DBPort]]/DBName/ Currently 
    supported DBType values are: mysql, pgsql, msql, solid, mssql, oracle, 
    ibase. Actually, it does not matter for native libraries support.
    But ODBC users should specify one of supported values. If your database 
    type is not supported, you may use "unknown" instead.
  </para>
   
   <para>
    <parameter>dbmode</parameter> - You may select SQL database mode of 
    words storage. When "single" is specified, all words are stored in the same
    table. If "multi" is selected, words will be located in different tables 
    depending of their lengths. "multi" mode is usually faster but requires 
    more tables in database. If "crc" mode is selected, mnoGoSearch will 
    store 32 bit integer word IDs calculated by CRC32 algorythm instead of
    words. This mode requres less disk space and it is faster comparing with "single"
    and "multi" modes. "crc-multi" uses the same storage structure with the 
    "crc" mode, but also stores words in different tables depending on
   words lengths like "multi" mode. Format: DBMode single/multi/crc/crc-multi</para>
   
   <note>
    <para>
     <parameter>dbaddr</parameter> and <parameter>dbmode</parameter> must match 
     those used during indexing.
    </para>
   </note>
   
   <note>
    <para>
     In fact this function does not open connection to database and
     thus does not check entered login and password. Actual connection to 
     database and login/password verification is done by <function>udm_find</function>.
    </para>
   </note>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
