<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.14 -->
  <refentry id="function.array-diff-uassoc">
   <refnamediv>
    <refname>array_diff_uassoc</refname>
    <refpurpose>Computes the difference of arrays with additional index check which is performed by a user supplied callback function.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>array_diff_assoc</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
      <methodparam><type>callback</type><parameter>key_compare_func</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_diff_uassoc</function> returns an <type>array</type>
     containing all the values from <parameter>array1</parameter>
     that are not present in any of the other arguments.
     Note that the keys are used in the comparison unlike
     <function>array_diff</function>. This comparison is done by a user supplied callback function.
     It must return an integer less than, equal
     to, or greater than zero if the first argument is considered to
     be respectively less than, equal to, or greater than the
     second. This is unlike <function>array_diff_assoc</function> where an
     internal function for comparing the indices is used.
    </para>
    <para>
     <example>
      <title><function>array_diff_uassoc</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
function key_compare_func($a, $b) {
    if ($a === $b) return 0;
    return ($a > $b)? 1:-1;
}

$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "green", "yellow", "red");
$result = array_diff_uassoc($array1, $array2, "key_compare_func");
?>
]]>
      </programlisting>
      <para>
       The result is:
      </para>
      <screen>
<![CDATA[
Array
(
    [b] => brown
    [c] => blue
    [0] => red
)
]]>
      </screen>
     </example>
    </para>
    <simpara>
     In our example above you see the <literal>"a" =&gt; "green"</literal>
     pair is present in both arrays and thus it is not in the ouput from the
     function. Unlike this, the pair <literal>0 =&gt; "red"</literal>
     is in the ouput because in the second argument <literal>"red"</literal>
     has key which is <literal>1</literal>.
    </simpara>
    <simpara>
     The equality of 2 indices is checked by the user supplied callback function.
    </simpara>
    <note>
     <simpara>
      Please note that this function only checks one dimension of a n-dimensional
      array. Of course you can check deeper dimensions by using, for example,
      <literal>array_diff_uassoc($array1[0], $array2[0], "key_compare_func");</literal>.
     </simpara>
    </note>
    <para>
     See also
     <function>array_diff</function>,
     <function>array_diff_assoc</function>,
     <function>array_udiff</function>,
     <function>array_udiff_assoc</function>, 
     <function>array_udiff_uassoc</function>, 
     <function>array_intersect</function>,  
     <function>array_intersect_assoc</function>,
     <function>array_uintersect</function>,  
     <function>array_uintersect_assoc</function> and 
     <function>array_uintersect_uassoc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
