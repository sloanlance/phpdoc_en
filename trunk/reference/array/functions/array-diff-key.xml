<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
  <refentry id="function.array-diff-key">
   <refnamediv>
    <refname>array_diff_key</refname>
    <refpurpose>Computes the difference of arrays using keys for comparison</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>array_diff_key</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_diff_key</function> returns an array
     containing all the values of <parameter>array1</parameter>
     that have keys that are not present in any of the other arguments.
     Note that the associativity is preserved. This function is like
     <function>array_diff</function> except the comparison is done on the
     keys instead of the values.
    </para>
    <para>
     <example>
      <title><function>array_diff_key</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);
$array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);

var_dump(array_diff_key($array1, $array2));
?>
]]>
      </programlisting>
      <para>
       The printout of the above program will be:
      </para>
      <screen>
<![CDATA[
array(2) {
  ["red"]=>
  int(2)
  ["purple"]=>
  int(4)
}
]]>
      </screen>
     </example>
    </para>
    <simpara>
     The two keys from the <literal>key =&gt; value</literal> pairs are
     considered equal only if 
     <literal>(string) $key1 === (string) $key2 </literal>. In other words
     a strict type check is executed so the string representation must be
     the same.
    </simpara>
    <note>
     <simpara>
      Please note that this function only checks one dimension of a n-dimensional
      array. Of course you can check deeper dimensions by using
      <literal>array_diff_key($array1[0], $array2[0]);</literal>.
     </simpara>
    </note>
    <para>
     See also <function>array_diff</function>,
     <function>array_udiff</function>
     <function>array_diff_assoc</function>,
     <function>array_diff_uassoc</function>,
     <function>array_udiff_assoc</function>,
     <function>array_udiff_uassoc</function>,
     <function>array_diff_ukey</function>,
     <function>array_intersect</function>,
     <function>array_intersect_assoc</function>,
     <function>array_intersect_uassoc</function>,
     <function>array_intersect_key</function> and
     <function>array_intersect_ukey</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
