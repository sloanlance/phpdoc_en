<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<refentry id="function.array-combine">
 <refnamediv>
  <refname>array_combine</refname>
  <refpurpose>Creates an array by using one array for keys and another for its values</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>array</type><methodname>array_combine</methodname>
   <methodparam><type>array</type><parameter>keys</parameter></methodparam>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
  </methodsynopsis>
  <para>
   Returns an <type>array</type> by using the values from the
   <parameter>keys</parameter> array as keys and the values from the
   <parameter>values</parameter> array as the corresponding values.
  </para>
  <para>
   Returns &false; if the number of elements for each array isn't equal or
   if the arrays are empty.
  </para>
  <para>
   <example>
    <title>A simple <function>array_combine</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$a = array('green', 'red', 'yellow');
$b = array('avocado', 'apple', 'banana');
$c = array_combine($a, $b);

print_r($c);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [green]  => avocado
    [red]    => apple
    [yellow] => banana
)
]]>
    </screen>
   </example>
  </para>
  <para>
   See also <function>array_merge</function>,
   <function>array_walk</function>, and
   <function>array_values</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
