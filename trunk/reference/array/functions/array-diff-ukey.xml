<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<refentry id="function.array-diff-ukey">
 <refnamediv>
  <refname>array_diff_ukey</refname>
  <refpurpose>Computes the difference of arrays using a callback function on the keys for comparison</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>array</type><methodname>array_diff_ukey</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam><type>array</type><parameter>array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
   <methodparam><type>callback</type><parameter>key_compare_func</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_diff_ukey</function> returns an array
   containing all the values of <parameter>array1</parameter>
   that have keys that are not present in any of the other arguments.
   Note that the associativity is preserved. This function is like
   <function>array_diff</function> except the comparison is done on the
   keys instead of the values.
  </para>
  <para>
   This comparison is done by a user supplied callback function.
   It must return an integer less than, equal to, or greater than zero if the
   first key is considered to be respectively less than, equal to, or
   greater than the second.
  </para>
  <para>
   <example>
    <title><function>array_diff_ukey</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
function key_compare_func($key1, $key2)
{
    if ($key1 == $key2)
        return 0;
    else if ($key1 > $key2)
        return 1;
    else
        return -1;
}

$array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);
$array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);

var_dump(array_diff_ukey($array1, $array2, 'key_compare_func'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  ["red"]=>
  int(2)
  ["purple"]=>
  int(4)
}
]]>
    </screen>
   </example>
  </para>
  <note>
   <simpara>
    Please note that this function only checks one dimension of a n-dimensional
    array. Of course you can check deeper dimensions by using
    <literal>array_diff_ukey($array1[0], $array2[0], 'callback_func');</literal>.
   </simpara>
  </note>
  <para>
   See also <function>array_diff</function>,
   <function>array_udiff</function>
   <function>array_diff_assoc</function>,
   <function>array_diff_uassoc</function>,
   <function>array_udiff_assoc</function>,
   <function>array_udiff_uassoc</function>,
   <function>array_diff_key</function>,
   <function>array_intersect</function>,
   <function>array_intersect_assoc</function>,
   <function>array_intersect_uassoc</function>,
   <function>array_intersect_key</function> and
   <function>array_intersect_ukey</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
