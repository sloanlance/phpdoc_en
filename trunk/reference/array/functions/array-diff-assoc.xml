<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.14 -->
  <refentry id="function.array-diff-assoc">
   <refnamediv>
    <refname>array_diff_assoc</refname>
    <refpurpose>Computes the difference of arrays with additional index check</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>array_diff_assoc</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_diff_assoc</function> returns an <type>array</type>
     containing all the values from <parameter>array1</parameter>
     that are not present in any of the other arguments.
     Note that the keys are used in the comparison unlike 
     <function>array_diff</function>.
    </para>
    <para>
     <example>
      <title><function>array_diff_assoc</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array ("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array ("a" => "green", "yellow", "red");
$result = array_diff_assoc ($array1, $array2);

/* The result is:
Array
(
    [b] => brown
    [c] => blue
    [0] => red
)
*/
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     In our example above you see the <literal>"a" =&gt; "green"</literal>
     pair is present in both arrays and thus it is not in the ouput from the
     function. Unlike this, the pair <literal>0 =&gt; "red"</literal> 
     is in the ouput because in the second argument <literal>"red"</literal>
     has key which is <literal>1</literal>. 
    </simpara>
    <simpara>
     Two values from <emphasis>key =&gt; value</emphasis> pairs are
     considered equal only if <literal>(string) $elem1 === (string)
     $elem2 </literal>. In other words a strict check takes place so 
     the string representations must be the same.
     <!-- TODO: example of it... -->
    </simpara>
    <note>
     <simpara>
      Please note that this function only checks one dimension of a n-dimensional
      array. Of course you can check deeper dimensions by using, for example, 
      <literal>array_diff_assoc($array1[0], $array2[0]);</literal>.
     </simpara>
    </note>
    <para>
     See also <function>array_diff</function>, <function>array_intersect</function>,
     and <function>array_intersect_assoc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
