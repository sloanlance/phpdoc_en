<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.2 -->
<refentry id="function.array-pop">
 <refnamediv>
  <refname>array_pop</refname>
  <refpurpose>Pop the element off the end of array</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>mixed</type><methodname>array_pop</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_pop</function> pops and returns the last value of
   the <parameter>array</parameter>, shortening the
   <parameter>array</parameter> by one element.
   If <parameter>array</parameter> is empty (or is not an array),
   &null; will be returned.
  </para>

  &array.resetspointer;

  <para>
   <example>
    <title><function>array_pop</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$stack = array("orange", "banana", "apple", "raspberry");
$fruit = array_pop($stack);
print_r($stack);
?>
]]>
    </programlisting>
    <para>
     After this, <varname>$stack</varname> will have only 3 elements:
    </para>
    <screen role="php">
<![CDATA[
Array
(
    [0] => orange
    [1] => banana
    [2] => apple
)
]]>
    </screen>
    <para>
     and <literal>raspberry</literal> will be assigned to
     <varname>$fruit</varname>.
    </para>
   </example>
  </para>
  <para>
   See also <function>array_push</function>,
   <function>array_shift</function>, and
   <function>array_unshift</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
