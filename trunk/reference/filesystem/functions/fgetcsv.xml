<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
  <refentry id="function.fgetcsv">
   <refnamediv>
    <refname>fgetcsv</refname>
    <refpurpose>Gets line from file pointer and parse for CSV fields</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>fgetcsv</methodname>
      <methodparam><type>int</type><parameter>fp</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Similar to <function>fgets</function> except that
     <function>fgetcsv</function> parses the line it reads for fields
     in <acronym>CSV</acronym> format and returns an array containing
     the fields read.  The field delimiter is a comma, unless you
     specify another delimiter with the optional third parameter.
    </simpara>
    <simpara>
     <parameter>Fp</parameter> must be a valid file pointer to a file
     successfully opened by <function>fopen</function>,
     <function>popen</function>, or <function>fsockopen</function>
    </simpara>
    <simpara>
     Length must be greater than the longest line to be found in the
     CSV file (allowing for trailing line-end characters).
    </simpara>
    <simpara>
     <function>fgetcsv</function> returns &false; on error, including
     end of file.
    </simpara>
    <simpara>
     N.B. A blank line in a CSV file will be returned as an array
     comprising a single &null; field, and will not be treated as an
     error.
    </simpara>
    <example>
     <title>
      <function>fgetcsv</function> example - Read and print entire
      contents of a CSV file
     </title>
     <programlisting role="php">
<![CDATA[
$row = 1;
$fp = fopen ("test.csv","r");
while ($data = fgetcsv ($fp, 1000, ",")) {
    $num = count ($data);
    print "<p> $num fields in line $row: <br>";
    $row++;
    for ($c=0; $c < $num; $c++) {
        print $data[$c] . "<br>";
    }
}
fclose ($fp);
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
