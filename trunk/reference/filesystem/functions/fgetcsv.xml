<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
  <refentry id="function.fgetcsv">
   <refnamediv>
    <refname>fgetcsv</refname>
    <refpurpose>Gets line from file pointer and parse for CSV fields</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>fgetcsv</methodname>
      <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Similar to <function>fgets</function> except that
     <function>fgetcsv</function> parses the line it reads for fields
     in <acronym>CSV</acronym> format and returns an array containing
     the fields read.  The optional third <parameter>delimiter</parameter>
     parameter defaults as a comma, and the optional <parameter>enclosure</parameter> 
     defaults as a double quotation mark.  Both <parameter>delimiter</parameter>
     and <parameter>enclosure</parameter> are limited to one character.  If
     either is more than one character, only the first character is used.
    </simpara>
    <note>
     <simpara>
      The <parameter>enclosure</parameter> parameter was added in PHP 4.3.0.
     </simpara>
    </note>
    <simpara>
     The <parameter>handle</parameter> parameter must be a valid file pointer to a file
     successfully opened by <function>fopen</function>,
     <function>popen</function>, or <function>fsockopen</function>.
    </simpara>
    <simpara>
     The <parameter>length</parameter> parameter must be greater than the longest 
     line to be found in the CSV file (allowing for trailing line-end characters).
    </simpara>
    <simpara>
     <function>fgetcsv</function> returns &false; on error, including
     end of file.
    </simpara>
    <note>
     <simpara>
      A blank line in a CSV file will be returned as an array
      comprising a single <type>null</type> field, and will not be treated 
      as an error.
     </simpara>
    </note>
    <para>
     <example>
      <title>Read and print the entire contents of a CSV file</title>
      <programlisting role="php">
<![CDATA[
<?php
$row = 1;
$handle = fopen("test.csv", "r");
while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
    $num = count($data);
    echo "<p> $num fields in line $row: <br />\n";
    $row++;
    for ($c=0; $c < $num; $c++) {
        echo $data[$c] . "<br />\n";
    }
}
fclose($handle);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     See also <function>explode</function>, <function>file</function>, 
     and <function>pack</function>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
