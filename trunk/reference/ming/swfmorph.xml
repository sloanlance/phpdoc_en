<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<refentry id="ming.swfmorph">
 <refnamediv>
  <refname>SWFMorph</refname>
  <refpurpose>SWFMorph Class</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <para>
   The methods here are sort of weird. It would make more sense to just 
   have newSWFMorph(shape1, shape2);, but as things are now, shape2 needs
   to know that it's the second part of a morph. (This, because it starts
   writing its output as soon as it gets drawing commands- if it kept its
   own description of its shapes and wrote on completion this and some 
   other things would be much easier.) 
  </para>
 </refsect1>
 <refsect1 role="members" id="ming.swfmorph.members">
  <title>Class Members</title>
  <refsect2 id="ming.swfmorph.methods">
   &reftitle.methods;
   <simplelist>
    <member><xref linkend="function.swfmorph.construct" /></member>
    <member><xref linkend="function.swfmorph.getshape1" /></member>
    <member><xref linkend="function.swfmorph.getshape2" /></member>
   </simplelist>
  </refsect2>
 </refsect1>
</refentry>

&reference.ming.swfmorph.construct;
&reference.ming.swfmorph.getshape1;
&reference.ming.swfmorph.getshape2;

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
