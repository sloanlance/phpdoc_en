<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<section id="outcontrol.configuration">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Output Control configuration options</title>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Name</entry>
      <entry>Default</entry>
      <entry>Changeable</entry>
     </row>
    </thead>
    <tbody>
    <row>
     <entry>output_buffering</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>output_handler</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>implicit_flush</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
    </row>
    </tbody>
   </tgroup>
  </table>
   For further details and definition of the PHP_INI_* constants see
  <function>ini_set</function>.
 </para>
 
 &ini.descriptions.title;
 
 <para>
 <variablelist>
  <varlistentry id="ini.output-buffering">
   <term>
    <parameter>output_buffering</parameter>
    <type>boolean</type>/<type>integer</type>
   </term>
   <listitem>
    <para>
     You can enable output buffering for all files by setting this directive
     to 'On'. If you wish to limit the size of the buffer to a certain size -
     you can use a maximum number of bytes instead of 'On', as a value for
     this directive (e.g., output_buffering=4096).
    </para>
   </listitem>
  </varlistentry>

  <varlistentry id="ini.output-handler">
   <term>
    <parameter>output_handler</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     You can redirect all of the output of your scripts to a function. For
     example, if you set output_handler to
     <function>mb_output_handler</function>, character encoding will be
     transparently converted to the specified encoding. Setting any output
     handler automatically turns on output buffering.
    </para>
    <note>
     <para>
      You cannot use both <function>mb_output_handler</function> with
      <function>ob_inconv_handler</function> and you cannot use both
      <function>ob_gzhandler</function> and
      <link linkend="ini.zlib.output-compression">zlib.output_compression</link>.
     </para>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry id="ini.implicit-flush">
   <term>
    <parameter>implicit_flush</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     &false; by default. Changing this to &true; tells PHP to tell the
     output layer to flush itself automatically after every output block.
     This is equivalent to calling the PHP function
     <function>flush</function> after each and every call to
     <function>print</function> or <function>echo</function> and each and
     every <literal>HTML</literal> block.
    </para>
    <para>
     When using PHP within an web environment, turning
     this option on has serious performance implications and is generally
     recommended for debugging purposes only. This value defaults to
     &true; when operating under the <literal>CLI SAPI</literal>.
    </para>
    <para>
     See also <function>ob_implicit_flush</function>.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
