<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/outcontrol.xml, last change in rev 1.1 -->
  <refentry id="function.ob-start">
   <refnamediv>
    <refname>ob_start</refname> 
    <refpurpose>Turn on output buffering</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>void</type><methodname>ob_start</methodname>
      <methodparam choice="opt"><type>callback</type><parameter>
        output_callback
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     This function will turn output buffering on. While output
     buffering is active no output is sent from the script (other than
     headers), instead the output is stored in an internal buffer.
    </para>
    <para>
     The contents of this internal buffer may be copied into a string
     variable using <function>ob_get_contents</function>.  To output
     what is stored in the internal buffer, use
     <function>ob_end_flush</function>.  Alternatively,
     <function>ob_end_clean</function> will silently discard the
     buffer contents.
    </para>
    <para>
     An optional <parameter>output_callback</parameter> function may
     be specified. This function takes a string as a parameter and
     should return a string. The function will be called when
     <function>ob_end_flush</function> is called, or when the output
     buffer is flushed to the browser at the end of the request.  When
     <parameter>output_callback</parameter> is called, it will receive
     the contents of the output buffer as its parameter and is
     expected to return a new output buffer as a result, which will be
     sent to the browser.
    </para>
    <note>
     <para>
      In PHP 4.0.4, <function>ob_gzhandler</function> was introduced
      to facilitate sending gz-encoded data to web browsers that
      support compressed web pages.  <function>ob_gzhandler</function>
      determines what type of content encoding the browser will accept
      and will return it's output accordingly.
     </para>
    </note>
    <para>
     Output buffers are stackable, that is, you may call
     <function>ob_start</function> while another
     <function>ob_start</function> is active. Just make
     sure that you call <function>ob_end_flush</function>
     the appropriate number of times. If multiple output callback
     functions are active, output is being filtered sequentially
     through each of them in nesting order.
    </para>
    <para>
     <function>ob_end_clean</function>,
     <function>ob_end_flush</function>, <function>ob_clean</function>,
     <function>ob_flush</function> and <function>ob_start</function>
     may not be called from a callback function. If you call them from
     callback function, the behavior is undefined. If you would like to
     delete the contents of a buffer, return "" (a null string) from callback
     function.
    </para>
    <example>
     <title>User defined callback function example</title>
     <programlisting role="php">
<![CDATA[
<?php

function callback($buffer) {

  // replace all the apples with oranges
  return (ereg_replace("apples", "oranges", $buffer));

}

ob_start("callback");

?>

<html>
<body>
<p>It's like comparing apples to oranges.
</body>
</html>

<?php

ob_end_flush();

?>
]]>
     </programlisting>
    </example>
    <para>
     Would produce:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<html>
<body>
<p>It's like comparing oranges to oranges.
</body>
</html>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     See also <function>ob_get_contents</function>,
     <function>ob_end_flush</function>,
     <function>ob_end_clean</function>,
     <function>ob_implicit_flush</function> and
     <function>ob_gzhandler</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
