<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./en/functions/image.xml, last change in rev 1.2 -->
  <refentry id="function.imagepsbbox">
   <refnamediv>
    <refname>imagepsbbox</refname>
    <refpurpose>
     Give the bounding box of a text rectangle using PostScript Type1
     fonts
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>imagepsbbox</methodname>
      <methodparam><type>string</type><parameter>text</parameter></methodparam>
      <methodparam><type>int</type><parameter>font</parameter></methodparam>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>space</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>tightness</parameter></methodparam>
      <methodparam choice="opt"><type>float</type><parameter>angle</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>size</parameter> is expressed in pixels.
    </para>
    <para>
     <parameter>space</parameter> allows you to change the default
     value of a space in a font.  This amount is added to the normal
     value and can also be negative.
    </para>
    <para>
     <parameter>tightness</parameter> allows you to control the amount
     of white space between characters. This amount is added to the
     normal character width and can also be negative.
    </para>
    <para>
     <parameter>angle</parameter> is in degrees.
    </para>
    <para>
     Parameters <parameter>space</parameter> and
     <parameter>tightness</parameter> are expressed in character space
     units, where 1 unit is 1/1000th of an em-square.
    </para>
    <para>
     Parameters <parameter>space</parameter>,
     <parameter>tightness</parameter>, and <parameter>angle</parameter>
     are optional.
    </para>
    <para>
     The bounding box is calculated using information available from
     character metrics, and unfortunately tends to differ slightly
     from the results achieved by actually rasterizing the text. If
     the angle is 0 degrees, you can expect the text to need 1 pixel
     more to every direction.
    </para>
    <note>
     <simpara>
      This function is only available if PHP is compiled using
      <option role="configure">--enable-t1lib</option>.
     </simpara>
    </note>
    <para>
     This function returns an array containing the following elements:
     <informaltable>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry>0</entry>
        <entry>lower left x-coordinate</entry>
       </row>
       <row>
        <entry>1</entry>
        <entry>lower left y-coordinate</entry>
       </row>
       <row>
        <entry>2</entry>
        <entry>upper right x-coordinate</entry>
       </row>
       <row>
        <entry>3</entry>
        <entry>upper right y-coordinate</entry>
       </row>
      </tbody>
     </tgroup>
     </informaltable>
    </para>
    <para>
     See also <function>imagepstext</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
