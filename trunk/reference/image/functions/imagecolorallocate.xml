<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- splitted from ./en/functions/image.xml, last change in rev 1.36 -->
 <refentry id="function.imagecolorallocate">
  <refnamediv>
   <refname>imagecolorallocate</refname>
   <refpurpose>Allocate a color for an image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>imagecolorallocate</methodname>
     <methodparam><type>resource</type><parameter>image</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>imagecolorallocate</function> returns a color
    identifier representing the color composed of the given
    <acronym>RGB</acronym> components.
    <parameter>red</parameter>, <parameter>green</parameter> and
    <parameter>blue</parameter> are the values of the red, green and blue
    component of the requested color respectively.  These parameters are
    integers between 0 and 255 or hexadecimals between 0x00 and 0xFF.
    <function>imagecolorallocate</function> must be called
    to create each color that is to be used in the image represented
    by <parameter>image</parameter>.
   </para>
   <note>
    <para>
     The first call to <function>imagecolorallocate</function> fills
     the background color in palette-based images - images created using
     <function>imagecreate</function>.
    </para>
   </note>
   <para>
    <example>
     <title><function>imagecolorallocate</function> example</title>
     <programlisting role="php">
<![CDATA[
<?php

$im = imagecreate(100, 100);

// sets background to red
$background = imagecolorallocate($im, 255, 0, 0);

// sets some colors
$white = imagecolorallocate($im, 255, 255, 255);
$black = imagecolorallocate($im, 0, 0, 0);

// hexadecimal way
$white = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
$black = imagecolorallocate($im, 0x00, 0x00, 0x00);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Returns -1 if the allocation failed.
   </para>
   <para>
    See also <function>imagecolorallocatealpha</function> and
    <function>imagecolordeallocate</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
