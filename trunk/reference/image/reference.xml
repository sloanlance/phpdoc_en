<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<reference id="ref.image">
 <title>Image functions</title>
 <titleabbrev>Image</titleabbrev>

 <partintro>
   <section id="image.intro">
   &reftitle.intro;
    <para>
     You can use the image functions in PHP to get the size of
     <acronym>JPEG</acronym>, <acronym>GIF</acronym>,
     <acronym>PNG</acronym>, <acronym>SWF</acronym>,
     <acronym>TIFF</acronym> and <acronym>JPEG2000</acronym> images.
    </para>
    <para>
     <note>
      Read requirements section about how to expand image capabilities
      to read, write and modify images and to read meta data of pictures
      taken by digital cameras.
     </note>
    </para>
   </section>

   <section id="image.requirements">
    &reftitle.required;
    <para>
     If you have the <acronym>GD</acronym> library (available at <ulink
     url="&url.gd;">&url.gd;</ulink>) you will also be able to create
     and manipulate images.
    </para>
    <para>
     The format of images you are able to manipulate depend on the
     version of <acronym>GD</acronym> you install, and any other libraries
     <acronym>GD</acronym> might need to access those image formats.
     Versions of <acronym>GD</acronym> older than gd-1.6
     support gif format images, and do not support png, where versions
     greater than gd-1.6 support png, not gif.
     <simpara>
      <note>
       Since PHP 4.3 there is a bundeled version of the GD lib. This bundeled
       version has some additional features like alpha blending and should
       be used in preference to the external library since it's codebase is
       better maintained and more stable.
      </note>
     </simpara>
    </para>
    <para>
     If you have PHP compiled with <option role="configure">--enable-exif</option>
     you are able to work with information stored in headers of
     <acronym>JPEG</acronym> and <acronym>TIFF</acronym> images. This way you can
     read meta data generated by digital cameras as mentioned above. These
     functions does not require the <acronym>GD</acronym> library.
    </para>
   </section>

   <section id="image.installation">
    &reftitle.install;
    <para>
     In order to read and write images in jpeg format, you will need to
     obtain and install jpeg-6b (available at
     <ulink url="&url.jpeg;">&url.jpeg;</ulink>), and then recompile
     <acronym>GD</acronym> to make use of jpeg-6b. You will also have to
     compile PHP with 
     <option role="configure">--with-jpeg-dir=/path/to/jpeg-6b</option>.
    </para>
    <para>
     To add support for Type 1 fonts, you can install t1lib (available
     at <ulink url="&url.t1lib;">&url.t1lib;</ulink>), and then add
     <option role="configure">--with-t1lib[=dir]</option>.
    </para>
   </section>
   
   <section id="image.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="image.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   &reference.image.constants;

 </partintro>

&reference.image.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

