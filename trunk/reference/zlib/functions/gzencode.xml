<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./en/functions/zlib.xml, last change in rev 1.4 -->
  <refentry id="function.gzencode">
   <refnamediv>
    <refname>gzencode</refname>
    <refpurpose>Create a gzip compressed string</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>gzencode</methodname>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>level</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>encoding_mode</parameter></methodparam>
     </methodsynopsis>
    <para>   
     This function returns a compressed version of the input
     <parameter>data</parameter> compatible with the output of the
     <command>gzip</command> program, or &false; if an error is
     encountered. The optional parameter <parameter>level</parameter>
     can be given as 0 for no compression up to 9 for maximum
     compression, if not given the default compression level will be
     the default compression level of the zlib library.
    </para>
    <para>
     You can also give <constant>FORCE_GZIP</constant> (the default)
     or <constant>FORCE_DEFLATE</constant> as optional third parameter
     <parameter>encoding_mode</parameter>. If you use
     <constant>FORCE_DEFLATE</constant>, you get a standard zlib
     deflated string (inclusive zlib headers) after the gzip file
     header but without the trailing crc32 checksum.
     <note>
      <para>
       <parameter>level</parameter> was added in PHP 4.2, before PHP
       4.2 <function>gzencode</function> only had the
       <parameter>data</parameter> and (optional)
       <parameter>encoding_mode</parameter> parameters..
      </para> 
     </note>
    </para>
    <para>
     The resulting data contains the appropriate headers and data
     structure to make a standard .gz file, e.g.:
     <example>
      <title>Creating a gzip file</title>
      <programlisting role="php">
<![CDATA[
<?php
    $data = implode("", file("bigfile.txt"));
    $gzdata = gzencode($data, 9);
    $fp = fopen("bigfile.txt.gz", "w");
    fwrite($fp, $gzdata);
    fclose($fp);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     For more information on the GZIP file format, see the document:
     <ulink url="&url.rfc;1952">GZIP file format specification
     version 4.3</ulink> (RFC 1952).
    </para>
    <para>
     See also <function>gzcompress</function>.
     <function>gzuncompress</function>,
     <function>gzdeflate</function>,
     <function>gzinflate</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
