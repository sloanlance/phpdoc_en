<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.11 Maintainer: ernani Status: ready -->
 <reference id="ref.zlib">
  <title>Funções de Compressão Zlib</title>
  <titleabbrev>Zlib</titleabbrev>

  <partintro>
   <section id="zlib.intro">
    &reftitle.intro;
    <para>
     Este módulo lhe possibilita ler e gerar transparentemente
     arquivos comprimidos do tipo gzip (.gz), através de muitas das
     funções <link linkend="ref.filesystem">filesystem</link>
     nas quais funcionam com arquivos gzip comprimidos (e arquivos não comprimidos
     também, mas não com sockets).
    </para>
    <note>
     <para>
      A Versão 4.0.4 introduziu a função fopen-wrapper para arquivos .gz, então
      você pode usar o prefixo 'zlib:' especial para acessar arquivos comprimidos
      transparentemente usando as funções normais de acesso a arquivos f*() se
      você concatenar o nome do arquivo e ou seu caminho com o prefixo 'zlib:' quando usar a função
      <function>fopen</function>.
     </para>
     <para>
      Na versão 4.3.0, este prefixo especial foi mudado para 'zlib://'
      para previnir ambiguidades com nome de arquivos contendo ':'.
     </para>
     <para>
      Esta facilidade requer uma biblioteca em tempo de execução que provê a função
      <literal>fopencookie()</literal>. Em meu conhecimento atual
      a GNU libc é a única bliblioteca que provê
      esta facilidade.
     </para>
    </note>
   </section>

   <section id="zlib.requirements">
    &reftitle.required;
    <para>
     Este módulo usa as funções da <ulink url="&url.zlib;">zlib</ulink>
     por Jean-loup Gailly e Mark Adler. Você terá que usar uma versão zlib
     &gt;= à 1.0.9 com este módulo.
    </para>
   </section>

   &reference.zlib.ini;

   <section id="zlib.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   &reference.zlib.constants;

   <section id="zlib.examples">
    &reftitle.examples;
    <para>
     Este exemplo abre um arquivo temporário e gera uma string teste
     dentro dele, então ela mostra o conteúdo deste arquivo duas vezes.
    </para>
    <example>
     <title>Pequeno Exemplo das funções Zlib</title>
     <programlisting role="php">
<![CDATA[
<?php

$filename = tempnam ('/tmp', 'zlibteste').'.gz';
print "<html>\n<head></head>\n<body>\n<pre>\n";
$s = "Somente um teste, teste, teste, teste, teste, teste, teste, teste!\n";

// abre o arquivo para gerar ele com a compressão máxima
$zp = gzopen($filename, "w9");

// escreve a string no arquivo
gzwrite($zp, $s);

// fecha o arquivo
gzclose($zp);

// abre o arquivo para leitura
$zp = gzopen($filename, "r");

// lê 3 caracteres
print gzread($zp, 3);

// mostra o conteúdo até o fim do arquivo e o fecha.
gzpassthru($zp);

print "\n";

// abre o arquivo e imprime o conteúdo dele (pela segunda vez).
if (readgzfile($filename) != strlen($s)) {
        echo "Erro com as funções zlib!";
}
unlink($filename);
print "</pre>\n</h1></body>\n</html>\n";

?>
]]>
     </programlisting>
    </example>
   </section>
  </partintro>

&reference.zlib.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

