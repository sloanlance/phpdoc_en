<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.15 $ -->
<!-- splitted from ./en/functions/datetime.xml, last change in rev 1.2 -->
  <refentry id="function.mktime">
   <refnamediv>
    <refname>mktime</refname>
    <refpurpose>Get Unix timestamp for a date</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>mktime</methodname>
      <methodparam choice="opt"><type>int</type><parameter>hour</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>minute</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>second</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>month</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>day</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>year</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>is_dst</parameter></methodparam>
     </methodsynopsis>
    <para>
     <emphasis>Warning:</emphasis> Note the strange order of
     arguments, which differs from the order of arguments in a regular
     Unix mktime() call and which does not lend itself well to leaving
     out parameters from right to left (see below). It is a common
     error to mix these values up in a script.
    </para>
    <para>
     Returns the Unix timestamp corresponding to the arguments
     given. This timestamp is a long integer containing the number of
     seconds between the Unix Epoch (January 1 1970 00:00:00 GMT) and the time
     specified.
    </para>
    <para>
     Arguments may be left out in order from right to left; any
     arguments thus omitted will be set to the current value according
     to the local date and time.
    </para>
    <para>
     <parameter>is_dst</parameter> can be set to 1 if the time is
     during daylight savings time (DST), 0 if it is not, or -1 (the default)
     if it is unknown whether the time is within daylight savings time
     or not. If it's unknown, PHP tries to figure it out itself. This can
     cause unexpected (but not incorrect) results.
    </para>
    <para>
     Some times are invalid if DST is enabled on the system PHP is running on
     or <parameter>is_dst</parameter> is set to 1. If DST is enabled in e.g.
     2:00, all times between 2:00 and 3:00 are invalid and
     <function>mktime</function> returns an undefined (usually negative) value.
     Some systems (e.g. Solaris 8) enable DST at midnight so time 0:30
     of the day when DST is enabled is evaluated as 23:30 of the previous day.
    </para>
    <note>
     <para>
      <parameter>is_dst</parameter> was added in 3.0.10.
     </para>
    </note>
    <para>
     <function>mktime</function> is useful for doing date arithmetic
     and validation, as it will automatically calculate the correct
     value for out-of-range input. For example, each of the following
     lines produces the string "Jan-01-1998".
     <example>
      <title><function>mktime</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
echo date("M-d-Y", mktime(0, 0, 0, 12, 32, 1997));
echo date("M-d-Y", mktime(0, 0, 0, 13, 1, 1997));
echo date("M-d-Y", mktime(0, 0, 0, 1, 1, 1998));
echo date("M-d-Y", mktime(0, 0, 0, 1, 1, 98));
?>
]]>
      </programlisting>
     </example>
     <parameter>Year</parameter> may be a two or four digit value,
     with values between 0-69 mapping to 2000-2069 and 70-99 to
     1970-1999 (on systems where time_t is a 32bit signed integer, as
     most common today, the valid range for
     <parameter>year</parameter> is somewhere between 1901 and 2038).
    </para>
    <para>
     <note>
      <title>Windows</title>
      <simpara>
       Negative timestamps are not supported under any known version
       of Windows.  Therefore the range of valid years includes only 1970
       through 2038.
      </simpara>
     </note>
    </para>
    <para>
     The last day of any given month can be expressed as the "0" day
     of the next month, not the -1 day. Both of the following examples
     will produce the string "The last day in Feb 2000 is: 29".
     <example>
      <title>Last day of next month</title>
      <programlisting role="php">
<![CDATA[
<?php
$lastday = mktime(0, 0, 0, 3, 0, 2000);
echo strftime("Last day in Feb 2000 is: %d", $lastday);
     
$lastday = mktime(0, 0, 0, 4, -31, 2000);
echo strftime("Last day in Feb 2000 is: %d", $lastday);
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
    Date with year, month and day equal to zero is considered illegal 
    (otherwise it what be regarded as 30.11.1999, which would be strange
     behavior).
    </simpara>
    <para>
     See also <function>gmmktime</function>,
     <function>date</function> and <function>time</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
