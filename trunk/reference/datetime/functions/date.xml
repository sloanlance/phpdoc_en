<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/datetime.xml, last change in rev 1.2 -->
  <refentry id="function.date">
   <refnamediv>
    <refname>date</refname>
    <refpurpose>Format a local time/date</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>date</methodname>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
        timestamp
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     Returns a string formatted according to the given format string using the
     given integer <parameter>timestamp</parameter> or the current local time
     if no timestamp is given.
     <note>
      <para>
       The valid range of a timestamp is typically from Fri, 13 Dec
       1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (These are
       the dates that correspond to the minimum and maximum values for
       a 32-bit signed integer.)
      </para>
      <para>
       To generate a timestamp from a string representation of the date, you
       may be able to use <function>strtotime</function>. Additionally, some
       databases have functions to convert their date formats into timestamps
       (such as MySQL's UNIX_TIMESTAMP function).
      </para>
     </note>
    </para>
    <para>
     The following characters are recognized in the format string:
     <itemizedlist>
      <listitem>
       <simpara>
        a - "am" or "pm"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        A - "AM" or "PM"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        B - Swatch Internet time
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        d - day of the month, 2 digits with leading zeros; i.e. "01"
        to "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        D - day of the week, textual, 3 letters; e.g. "Fri"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        F - month, textual, long; e.g. "January"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        g - hour, 12-hour format without leading zeros; i.e. "1" to
        "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        G - hour, 24-hour format without leading zeros; i.e. "0" to
        "23"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        h - hour, 12-hour format; i.e. "01" to "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        H - hour, 24-hour format; i.e. "00" to "23"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        i - minutes; i.e. "00" to "59"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        I (capital i) - "1" if Daylight Savings Time, "0" otherwise.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        j - day of the month without leading zeros; i.e. "1" to "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        l (lowercase 'L') - day of the week, textual, long;
        e.g. "Friday"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        L - boolean for whether it is a leap year; i.e. "0" or "1"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        m - month; i.e. "01" to "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        M - month, textual, 3 letters; e.g. "Jan"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        n - month without leading zeros; i.e. "1" to "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        O - Difference to Greenwich time in hours; e.g. "+0200"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        r - RFC 822 formatted date; e.g. "Thu, 21 Dec 2000 16:01:07 +0200"
        (added in PHP 4.0.4)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        s - seconds; i.e. "00" to "59"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        S - English ordinal suffix for the day of the month, 2 characters;
        i.e. "st", "nd", "rd" or "th"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        t - number of days in the given month; i.e. "28" to "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        T - Timezone setting of this machine; e.g. "EST" or "MDT"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        U - seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        w - day of the week, numeric, i.e. "0" (Sunday) to "6"
        (Saturday)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        W - ISO-8601 week number of year, weeks starting on Monday (added in PHP 4.1.0)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Y - year, 4 digits; e.g. "1999"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        y - year, 2 digits; e.g. "99"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        z - day of the year; i.e. "0" to "365"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Z - timezone offset in seconds (i.e. "-43200" to "43200"). The
        offset for timezones west of UTC is always negative, and for
        those east of UTC is always positive.
       </simpara>
      </listitem>
     </itemizedlist>
     Unrecognized characters in the format string will be printed
     as-is.  The "Z" format will always return "0" when using
     <function>gmdate</function>.
    </para>
    <para>
     <example>
      <title><function>date</function> example</title>
      <programlisting role="php">
<![CDATA[
echo date ("l dS of F Y h:i:s A");
echo "July 1, 2000 is on a " . date ("l", mktime(0,0,0,7,1,2000));
]]>
      </programlisting>
     </example>
    </para>
    <para>
     You can prevent a recognized character in the format string from being
     expanded by escaping it with a preceding backslash. If the character with
     a backslash is already a special sequence, you may need to also escape
     the backslash.
     <example>
      <title>Escaping characters in <function>date</function></title>
      <programlisting role="php">
<![CDATA[
echo date("l \\t\h\e jS"); // prints something like 'Saturday the 8th'
]]>
      </programlisting>
     </example>
    </para>
    <para>
     It is possible to use <function>date</function> and
     <function>mktime</function> together to find dates in the future
     or the past.
     <example>
      <title>
       <function>date</function> and <function>mktime</function>
       example
      </title>
      <programlisting role="php">
<![CDATA[
$tomorrow  = mktime (0,0,0,date("m")  ,date("d")+1,date("Y"));
$lastmonth = mktime (0,0,0,date("m")-1,date("d"),  date("Y"));
$nextyear  = mktime (0,0,0,date("m"),  date("d"),  date("Y")+1);
]]>
      </programlisting>
     </example>
     <note>
      <para>
       This can be more reliable than simply adding or subtracting the number
       of seconds in a day or month to a timestamp because of daylight savings
       time.
      </para>
     </note>
    </para>
    <para>
     Some examples of <function>date</function> formatting. Note that
     you should escape any other characters, as any which currently
     have a special meaning will produce undesirable results, and
     other characters may be assigned meaning in future PHP versions.
     When escaping, be sure to use single quotes to prevent characters
     like \n from becoming newlines.
     <example>
      <title>
       <function>date</function> Formatting
      </title>
      <programlisting role="php">
<![CDATA[
/* Today is March 10th, 2001, 5:16:18 pm */
$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm
$today = date("m.d.y");                         // 03.10.01
$today = date("j, n, Y");                       // 10, 3, 2001
$today = date("Ymd");                           // 20010310
$today = date('h-i-s, j-m-y, it is w Day z ');  // 05-16-17, 10-03-01, 1631 1618 6 Fripm01
$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // It is the 10th day.
$today = date("D M j G:i:s T Y");               // Sat Mar 10 15:16:08 MST 2001
$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:03:17 m is month
$today = date("H:i:s");                         // 17:16:17
]]>
      </programlisting>
     </example>
    </para>
    <para>
     To format dates in other languages, you should use the
     <function>setlocale</function> and <function>strftime</function>
     functions.
    </para>
    <para>
     See also <function>getlastmod</function>, <function>gmdate</function>,
     <function>mktime</function>, <function>strftime</function>
     and <function>time</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
