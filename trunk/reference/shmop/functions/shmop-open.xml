<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./en/functions/shmop.xml, last change in rev 1.12 -->
  <refentry id="function.shmop-open">
   <refnamediv>
    <refname>shmop_open</refname>
    <refpurpose>Create or open shared memory block</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>shmop_open</methodname>
      <methodparam><type>int</type><parameter>key</parameter></methodparam>
      <methodparam><type>string</type><parameter>flags</parameter></methodparam>
      <methodparam><type>int</type><parameter>mode</parameter></methodparam>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>shmop_open</function> can create or open a shared memory block.
    </para>
    <para>
     <function>shmop_open</function> takes 4 parameters: key, which is the
     system's id for the shared memory block, this parameter can be passed
     as a decimal or hex. The second parameter are the flags that you can use:
     <itemizedlist>
      <listitem>
       <simpara>
        "a" for access (sets SHM_RDONLY for shmat)
        use this flag when you need to open an existing shared memory 
        segment for read only
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "c" for create (sets IPC_CREATE)
        use this flag when you need to create a new shared memory segment 
        or if a segment with the same key exists, try to open it for read 
        and write
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "w" for read &amp; write access
        use this flag when you need to read and write to a shared memory 
        segment, use this flag in most cases.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "n" create a new memory segment (sets IPC_CREATE|IPC_EXCL)
        use this flag when you want to create a new shared memory segment 
        but if one already exists with the same flag, fail. This is useful
        for security purposes, using this you can prevent race condition 
        exploits.
       </simpara>
      </listitem>
     </itemizedlist>
     The third parameter is the mode, which are the permissions that you
     wish to assign to your memory segment, those are the same as permission
     for a file. Permissions need to be passed in octal form ex. 0644.
     The last parameter is size of the shared memory block you wish to create
     in bytes.
     <note><simpara>
      Note: the 3rd and 4th should be entered as 0 if you are opening an
      existing memory segment. On success <function>shmop_open</function> will
      return an id that you can use to access the shared memory segment
      you've created.
     </simpara></note>
    </para>
    <para>
     <example>
      <title>Create a new shared memory block</title>
      <programlisting role="php">
<![CDATA[
<?php
$shm_key = ftok(__FILE__,'t');
$shm_id = shmop_open($shm_key, "c", 0644, 100);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     This example opened a shared memory block with a system id returned by 
     <function>ftok</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
