<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
  <refentry id='function.simplexml-element-asXML'>
   <refnamediv>
    <refname>SimpleXMLElement->asXML</refname>
    <refpurpose>
     Return a well-formed XML string based on SimpleXML element
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>SimpleXMLElement->asXML</methodname>
     <void/>
    </methodsynopsis>
    <para>
     The <literal>asXML</literal> method formats the parent object's data
     in XML version 1.0.
    </para>
    <para>
     <example>
      <title>Get XML</title>
      <programlisting role="php">
<![CDATA[
<?php
$string = <<<XML
<a>
 <b>
  <c>text</c>
  <c>stuff</c>
 </b>
 <d>
  <c>code</c>
 </d>
</a>
XML;

$xml = simplexml_load_string($string);

echo $xml->asXML(); // <?xml ... <a><b><c>text</c><c>stuff</c> ...

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <literal>asXML</literal> also works on Xpath results:
     <example>
      <title>
       Using asXML() on 
       <link linkend="function.simplexml-element-xpath">Xpath</link>
       results
      </title>
      <programlisting role="php">
<![CDATA[
<?php
// Continued from example XML above.

/* Search for <a><b><c> */
$result = $xml->xpath('/a/b/c');

while(list( , $node) = each($result)) {
    echo $node->asXML(); // <c>text</c> and <c>stuff</c>
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
