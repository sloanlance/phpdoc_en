<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
  <refentry id='function.simplexml-import-dom'>
   <refnamediv>
    <refname>simplexml_import_dom</refname>
    <refpurpose>
     Get a <literal>SimpleXMLElement</literal> object from a
     DOM node.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>simplexml_import_dom</methodname>
     <methodparam><type>object</type><parameter>node</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>class_name</parameter></methodparam>
    </methodsynopsis>
    <para>
     <!-- same with this link -->
     This function takes a node of a <link linkend="ref.dom">DOM</link>
     document and makes it into a SimpleXML node. This new object can
     then be used as a native SimpleXML element. If any errors occur, 
     it returns &false;.
    </para>
    <!-- php5 DOM isn't documented; this depends on it... :| -->
    <!-- TODO: Document class_name and when it appeared. -->
    <example>
     <title>Import DOM</title>
     <programlisting role="php">
<![CDATA[
<?php
$dom = new domDocument;
$dom->loadXML('<books><book><title>blah</title></book></books>');
if (!$dom) {
    echo 'Error while parsing the document';
    exit;
}

$s = simplexml_import_dom($dom);

echo $s->book[0]->title; // blah
?>
]]>
     </programlisting>
    </example>
    <para>
      See also
      <function>dom-import-simplexml</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
