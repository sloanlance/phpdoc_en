<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<refentry id='function.simplexml-element-getDocNamespaces'>
 <refnamediv>
  <refname>SimpleXMLElement->getDocNamespaces</refname>
  <refpurpose>
   Returns namespaces declared in document
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>SimpleXMLElement->getDocNamespaces</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>recursive</parameter></methodparam>
  </methodsynopsis>
  <para>
   Returns namespaces declared in document
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>recursive</parameter></term>
     <listitem>
      <para>
       If specified, returns all namespaces declared in parent and child nodes. 
       Otherwise, returns only namespaces declared in root node.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The <literal>getDocNamespaces</literal> method returns an <type>array</type> 
   of namespace names with their associated URIs.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Get document namespaces</title>
    <programlisting role="php">
<![CDATA[
<?php

$xml = <<<XML
<?xml version="1.0" standalone="yes"?>
<people xmlns:p="http://example.org/ns">
    <p:person id="1">John Doe</p:person>
    <p:person id="2">Susie Q. Public</p:person>
</people>
XML;
 
$sxe = new SimpleXMLElement($xml); // or use simplexml_load_string()

$namespaces = $sxe->getDocNamespaces();
var_dump($namespaces);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Working with multiple namespaces</title>
    <programlisting role="php">
<![CDATA[
<?php

$xml = <<<XML
<?xml version="1.0" standalone="yes"?>
<people xmlns:p="http://example.org/ns" xmlns:t="http://example.org/test">
    <p:person t:id="1">John Doe</p:person>
    <p:person t:id="2" a:addr="123 Street" xmlns:a="http://example.org/addr">
        Susie Q. Public
    </p:person>
</people>
XML;
 
$sxe = new SimpleXMLElement($xml); // or use simplexml_load_string()

$namespaces = $sxe->getDocNamespaces(TRUE);
var_dump($namespaces);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.simplexml-element-getNamespaces" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
