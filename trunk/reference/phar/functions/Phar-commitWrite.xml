<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<refentry id="function.Phar-commitWrite">
 <refnamediv>
  <refname>Phar-&gt;commitWrite</refname>
  <refpurpose>End a Phar modification transaction by writing the Phar archive to disk</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>Phar-&gt;commitWrite</methodname>
   <void/>
  </methodsynopsis>

  <para>
   Although technically unnecessary, the <function>beginWrite</function> method
   can provide a significant performance boost when creating or modifying a
   Phar archive with a large number of files.  Ordinarily, every time a file
   within a Phar archive is created or modified in any way, the entire Phar
   archive will be recreated with the changes.  In this way, the archive will
   be up-to-date with the activity performed on it.
  </para>
  <para>
   However, this can be unnecessary when simply creating a new Phar archive,
   when it would make more sense to write the entire archive out at once.
   Similarly, it is often necessary to make a series of changes and to ensure
   that they all are possible before making any changes on disk, similar to the
   relational database concept of transactions.  the
   <function>beginWrite</function>/<function>commitWrite</function> pair
   of methods is provided for this purpose.
  </para>
  <para>
   Phar transactions are per-archive, a transaction active on the
   <literal>foo.phar</literal> Phar archive does not affect changes
   to the <literal>bar.phar</literal> Phar archive.
  </para>

 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>A <function>Phar-&gt;commitWrite</function> example</title>
    <para>
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$p = new Phar(dirname(__FILE__) . '/brandnewphar.phar', 0, 'brandnewphar.phar');
$p['file1.txt'] = 'hi';
$p->commitWrite();
var_dump($p->getStub());
$p->commitWrite("<?php
function __autoload($class)
{
    include 'phar://' . str_replace('_', '/', $class);
}
Phar::mapPhar('brandnewphar.phar');
include 'phar://brandnewphar.phar/startup.php';
__HALT_COMPILER();
?>");
var_dump($p->getStub());
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(24) "<?php __HALT_COMPILER();"
string(186) "<?php
function __autoload()
{
    include 'phar://' . str_replace('_', '/', );
}
Phar::mapPhar('brandnewphar.phar');
include 'phar://brandnewphar.phar/startup.php';
__HALT_COMPILER();
?>"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="function.Phar-beginWrite"><function>Phar-&gt;beginWrite</function></link></member>
    <member><link linkend="function.Phar-getStub"><function>Phar-&gt;getStub</function></link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
