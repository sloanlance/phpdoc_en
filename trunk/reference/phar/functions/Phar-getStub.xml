<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<refentry id="function.Phar-getStub">
 <refnamediv>
  <refname>Phar-&gt;getStub</refname>
  <refpurpose>Return the PHP loader or bootstrap stub of a Phar archive</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>Phar-&gt;getStub</methodname>
   <void/>
  </methodsynopsis>

  <para>
   One of the features that differentiates a Phar archive from other familiar archive
   formats like tar or zip is that a Phar archive is explicitly designed to be
   included to allow distributing an application or library that can be
   run without extraction directly from the archive.  In order to accomplish
   this, Phar archives contain a bootstrap loader, or <literal>stub</literal>
   written in PHP that can perform any action.  
  </para>

  <warning>
   <simpara>All stubs must end with
   <literal>__HALT_COMPILER();</literal> or the file is not a valid Phar archive.</simpara>
  </warning>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a string containing the contents of the bootstrap loader (stub) of
   the current Phar archive.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>A <function>Phar-&gt;getStub</function> example</title>
    <programlisting role="php">
<![CDATA[
$p = new Phar('myphar.phar');
echo $p->getStub();
echo "==NEXT==\n";
$p->commitWrite("<?php
function __autoload($class)
{
    include 'phar://' . str_replace('_', '/', $class);
}
Phar::mapPhar('myphar.phar');
include 'phar://myphar.phar/startup.php';
__HALT_COMPILER();
?>");
echo $p->getStub();
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<?php __HALT_COMPILER();
==NEXT==
<?php
function __autoload($class)
{
    include 'phar://' . str_replace('_', '/', $class);
}
Phar::mapPhar('myphar.phar');
include 'phar://myphar.phar/startup.php';
__HALT_COMPILER();
?>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="function.Phar-commit"><function>Phar-&gt;commit</function></link></member>
    <member><link linkend="function.Phar-begin"><function>Phar-&gt;begin</function></link></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
