<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<refentry xml:id="phar.converttophar" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::convertToPhar</refname>
  <refpurpose>Convert the phar archive to the phar file format, optionally compressing the entire archive using gzip or bzip2 compression</refpurpose>
 </refnamediv>


 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Phar::convertToPhar</methodname>
   <methodparam><type>int</type><parameter>compression</parameter></methodparam>
  </methodsynopsis>
  &phar.write;
  <para>
   This method is used to convert a phar archive in tar or zip format to
   the phar file format.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>compression</parameter></term>
     <listitem>
      <para>
       This can be one of <literal>Phar::GZ</literal> or <literal>Phar::BZ2</literal>.
       By default, no compression is applied.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The method returns &true; on success, but it is safer to encase the
   call within a try/catch block and assume success if an exception is
   not thrown.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   This method throws <classname>BadMethodCallException</classname> when unable
   to compress, an unknown compression method has been specified, the requested
   archive is buffering with <function>Phar::startBuffering</function> and
   has not concluded with <function>Phar::stopBuffering</function>, an
   <classname>UnexpectedValueException</classname> if write support is disabled,
   and a <classname>PharException</classname> if any problems are encountered
   during the phar creation process.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>A <function>Phar::convertToPhar</function> example</title>
    <para>
     Using Phar::convertToPhar():
    </para>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $phar = new Phar('myphar.tar.phar');
    // compress the entire archive with gzip compression
    // as well as converting it to the phar file format
    $phar->convertToPhar(Phar::GZ);
    $phar->setStub($phar->createDefaultStub('cli.php', 'web/index.php'));
} catch (Exception $e) {
    // handle the error here
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::convertToTar</function></member>
    <member><function>Phar::convertToZip</function></member>
    <member><function>Phar::compressAllFilesGZ</function></member>
    <member><function>Phar::compressAllFilesBZIP2</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
