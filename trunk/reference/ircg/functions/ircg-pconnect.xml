<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./en/functions/ircg.xml, last change in rev 1.1 -->
<refentry id="function.ircg-pconnect">
 <refnamediv>
  <refname>ircg_pconnect</refname>
  <refpurpose>Connect to an IRC server</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>resource</type><methodname>ircg_pconnect</methodname>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>server_ip</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>server_port</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>msg_format</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>ctcp_messages</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>user_settings</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>bailout_on_trivial</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>ircg_pconnect</function> will try to establish a
   connection to an IRC server and return a connection resource
   handle for further use.
  </para>
  <para>
   The only mandatory parameter is <parameter>username</parameter>,
   this will set your initial nickname on the
   server. <parameter>server_ip</parameter> and
   <parameter>server_port</parameter> are optional and default to
   <literal>127.0.0.1</literal> and <literal>6667</literal>.
   <note>
    <para>
     For now parameter <parameter>server_ip</parameter> will not do
     any hostname lookups and will only accept IP addresses in
     numerical form. DNS lookups are expensive and should be done in the
     context of IRCG.
    </para>
   </note>
  </para>
  <para>
   You can customize the output of IRC messages and events by
   selecting a format message set previously created with
   <function>ircg_register_format_messages</function> by specifying
   the set's name in <parameter>msg_format</parameter>.
  </para>
  <para>
   If you want to handle CTCP messages such as ACTION (/me), you need to
   define a mapping from CTCP type (e.g. ACTION) to a custom format
   string. Do this by passing an associative array as
   <parameter>ctcp_messages</parameter>. The keys of the array
   are the CTCP type and the respective value is the format message.
  </para>
  <para>
   You can define "ident", "password", and "realname" tokens which
   are sent to the IRC server by setting these in an associative
   array. Pass that array as <parameter>user_settings</parameter>.
  </para>
  <para>
   See also: <function>ircg_disconnect</function>,
   <function>ircg_is_conn_alive</function>,
   <function>ircg_register_format_messages</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
