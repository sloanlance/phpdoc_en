<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<section id="dba.installation">
 &reftitle.install;
 <para>
  By using the <option role="configure">--enable-dba=shared</option>
  configuration option you can build a dynamic loadable module to enable PHP
  for basic support of dbm-style databases. You also have to add support
  for at least one of the following handlers by specifying the
  <literal>--with-XXXX</literal> configure switch to your PHP configure
  line.
  <table>
   <title>Supported DBA handlers</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Handler</entry>
      <entry>Configure Switch</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><literal>dbm</literal></entry>
      <entry>
       To enable support for dbm add
       <option role="configure">--with-dbm[=DIR]</option>.
       <note>
        <para>
         dbm normally is a wrapper which often results in failures.
         This means you should only use dbm if you are sure it works
         and if you really need this format.
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>ndbm</literal></entry>
      <entry>
       To enable support for ndbm add
       <option role="configure">--with-ndbm[=DIR]</option>.
       <note>
        <para>
         ndbm normally is a wrapper which often results in failures.
         This means you should only use ndbm if you are sure it works
         and if you really need this format.
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>gdbm</literal></entry>
      <entry>
       To enable support for gdbm add
       <option role="configure">--with-gdbm[=DIR]</option>.
      </entry>
     </row>

     <row>
      <entry><literal>db2</literal></entry>
      <entry>
       To enable support for db2 add
       <option role="configure">--with-db2[=DIR]</option>.
       <note>
        <para>
         db2 conflicts with db3 and db4.
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>db3</literal></entry>
      <entry>
       To enable support for db3 add
       <option role="configure">--with-db3[=DIR]</option>.
       <note>
        <para>
         db3 conflicts with db2 and db4.
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>db4</literal></entry>
      <entry>
       To enable support for db4 add
       <option role="configure">--with-db4[=DIR]</option>.
       <note>
        <para>
         db4 conflicts with db2 and db3.
        </para>
       </note>
       <note>
        <para>
         This was added in PHP 4.3.2. In earlier versions of PHP you need to use
         <option role="configure">--with-db3=DIR</option> with DIR being the
         path to db4 library. It is not possible to use db versions starting 
         from 4.1 with PHP prior to version 4.3.0. Also, the db libraries with
         versions 4.1 through 4.1.24 cannot be used in any PHP version.
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>cdb</literal></entry>
      <entry>
       To enable support for cdb add
       <option role="configure">--with-cdb[=DIR]</option>.
       <note>
        <para>
         Since PHP 4.3.0 you can omit DIR to use the bundled cdb library 
         that adds the cdb_make handler which allows creation of cdb files
         and allows to access cdb files on the network using PHP's streams.
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>flatfile</literal></entry>
      <entry>
       To enable support for flatfile add
       <option role="configure">--with-flatfile</option>.
       <note>
        <para>
         This was added in PHP 4.3.0 to add compatibility with deprecated
         <link linkend="ref.dbm">dbm</link> extension. Use this handler only
         when you cannot install one of the libraries required by the other
         handlers and when you cannot use bundled cdb handler.
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>inifile</literal></entry>
      <entry>
       To enable support for inifile add
       <option role="configure">--with-inifile</option>.
       <note>
        <para>
         This was added in PHP 5.0.0 and allows to read and set microsoft style
         ini files (like the &php.ini; file).
        </para>
       </note>
      </entry>
     </row>

     <row>
      <entry><literal>qdbm</literal></entry>
      <entry>
       To enable support for qdbm add
       <option role="configure">--with-qdbm[=DIR]</option>.
       <note>
        <para>
         qdbm conflicts with dbm and gdbm.
        </para>
       </note>
       <note>
        <para>
         This was added in PHP 5.0.0. The qdbm library can be loaded from
         <ulink url="http://qdbm.sourceforge.net">http://qdbm.sourceforge.net</ulink>.
        </para>
       </note>
      </entry>
     </row>

    </tbody>
   </tgroup>
  </table>
  <note>
   <para>
    Up to PHP 4.3.0 you are able to add both db2 and db3 handler but only one
    of them can be used internally. That means that you cannot have both file 
    formats. Starting with PHP 5.0.0 there is a configuration check avoid such
    missconfigurations.
   </para>
  </note>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
