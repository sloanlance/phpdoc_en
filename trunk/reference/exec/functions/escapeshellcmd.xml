<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./en/functions/exec.xml, last change in rev 1.2 -->
<refentry id="function.escapeshellcmd">
 <refnamediv>
  <refname>escapeshellcmd</refname>
  <refpurpose>Escape shell metacharacters</refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>escapeshellcmd</methodname>
   <methodparam><type>string</type><parameter>command</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>escapeshellcmd</function> escapes any characters in a
   string that might be used to trick a shell command into executing
   arbitrary commands.  This function should be used to make sure
   that any data coming from user input is escaped before this data
   is passed to the <function>exec</function> or
   <function>system</function> functions, or to the <link
   linkend="language.operators.execution">backtick
   operator</link>. A standard use would be:</para>
  <para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$e = escapeshellcmd($userinput);
 
// here we don't care if $e has spaces
system("echo $e");
$f = escapeshellcmd($filename);
 
// and here we do, so we use quotes
system("touch \"/tmp/$f\"; ls -l \"/tmp/$f\"");
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   See also <function>escapeshellarg</function>, <function>exec</function>,
   <function>popen</function>, <function>system</function>, and the <link
   linkend="language.operators.execution">backtick operator</link>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
