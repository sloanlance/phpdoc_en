<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/exec.xml, last change in rev 1.2 -->
  <refentry id="function.exec">
   <refnamediv>
    <refname>exec</refname>
    <refpurpose>Execute an external program</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>exec</methodname>
      <methodparam><type>string</type><parameter>command</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>output
       </parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>return_var</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>exec</function> executes the given
     <parameter>command</parameter>, however it does not output
     anything.  It simply returns the last line from the result of the
     command.  If you need to execute a command and have all the data
     from the command passed directly back without any interference,
     use the <function>passthru</function> function.
    </para>
    <para>
     If the <parameter>array</parameter> argument is present, then the
     specified array will be filled with every line of output from the
     command.  Note that if the array already contains some elements,
     <function>exec</function> will append to the end of the array.
     If you do not want the function to append elements, call
     <function>unset</function> on the array before passing it to
     <function>exec</function>.
    </para>
    <para>
     If the <parameter>return_var</parameter> argument is present
     along with the <parameter>array</parameter> argument, then the
     return status of the executed command will be written to this
     variable.
    </para>
    <warning>
     <para>
      If you are going to allow data coming from user input to be passed to
      this function, then you should be using
      <function>escapeshellarg</function> or
      <function>escapeshellcmd</function> to make sure that users cannot trick
      the system into executing arbitrary commands.
     </para>
    </warning>
    <note>
     <para>
      If you start a program using this function and want to leave it running
      in the background, you have to make sure that the output of that program
      is redirected to a file or some other output stream or else PHP will
      hang until the execution of the program ends.
     </para>
    </note>
    <para>
     See also <function>system</function>,
     <function>passthru</function>, <function>popen</function>,
     <function>escapeshellcmd</function>, and the <link
     linkend="language.operators.execution">backtick operator</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
