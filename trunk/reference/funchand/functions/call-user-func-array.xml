<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.23 $ -->
<refentry xml:id="function.call-user-func-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>call_user_func_array</refname>
  <refpurpose>Call a user function given with an array of parameters</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>call_user_func_array</methodname>
   <methodparam><type>callback</type><parameter>function</parameter></methodparam>
   <methodparam><type>array</type><parameter>param_arr</parameter></methodparam>
  </methodsynopsis>
  <para>
   Call a user defined <parameter>function</parameter> with the parameters in
   <parameter>param_arr</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
       The function to be called.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>param_arr</parameter></term>
     <listitem>
      <para>
       The parameters to be passed to the function, as an indexed array.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the function result, or &false; on error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>call_user_func_array</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
function debug($var, $val)
{
    echo "***DEBUGGING\nVARIABLE: $var\nVALUE:";
    if (is_array($val) || is_object($val) || is_resource($val)) {
        print_r($val);
    } else {
        echo "\n$val\n";
    }
    echo "***\n";
}

$c = new StdClass();
$host = $_SERVER["PHP_SELF"];

call_user_func_array('debug', array("host", $host));
call_user_func_array('debug', array("c", $c));
call_user_func_array('debug', array("_POST", $_POST));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
]]>
    </screen>
   </example>
   <example>
    <title><function>call_user_func_array</function> using namespace name</title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Foobar;

class Foo {
    static public function test($name) {
        print "Hello {$name}!\n";
    }
}

// As of PHP 5.3.0
call_user_func_array(__NAMESPACE__ .'\Foo::test', array('Hannes'));

// As of PHP 5.3.0
call_user_func_array(array(__NAMESPACE__ .'\Foo', 'test'), array('Philip'));

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Hello Hannes!
Hello Philip!
]]>
    </screen>
   </example>
   <example>
    <title>Using lambda function</title>
    <programlisting role="php">
<![CDATA[
<?php

$func = function($arg1, $arg2) {
    return $arg1 * $arg2;
};

var_dump(call_user_func_array($func, array(2, 4))); /* As of PHP 5.3.0 */

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(8)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Referenced variables in <parameter>param_arr</parameter> are passed to the
    function by a reference, others are passed by a value. In other words, it
    does not depend on the function signature whether the parameter is passed
    by a value or by a reference.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func</function></member>
    <member>&seealso.callback;</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
