<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.15 $ -->
<refentry id="function.register-shutdown-function">
 <refnamediv>
  <refname>register_shutdown_function</refname>
  <refpurpose>Register a function for execution on shutdown</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>register_shutdown_function</methodname>
   <methodparam><type>callback</type><parameter>function</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>parameter</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Registers the function named by <parameter>function</parameter> to be
   executed when script processing is complete.
  </simpara>
  <para>
   Multiple calls to <function>register_shutdown_function</function> can be
   made, and each will be called in the same order as they were registered.
   If you call <function>exit</function> within one registered shutdown
   function, processing will stop completely and no other registered
   shutdown functions will be called.
  </para>
  <para>
   In PHP 4.0.6 and earlier under Apache,
   the registered shutdown functions are called after the request has been
   completed (including sending any output buffers), so it is not possible
   to send output to the browser using <function>echo</function> or
   <function>print</function>, or retrieve the contents of any output
   buffers using <function>ob_get_contents</function>.
   Since PHP 4.1, the shutdown functions are called as the part of the
   request so that it's possible to send the output from them. There is
   currently no way to process the data with output buffering functions in
   the shutdown function.
   Shutdown function is called after closing all opened output buffers thus,
   for example, its output will not be compressed if <link
   linkend="ini.zlib.output-compression">zlib.output_compression</link> is
   enabled.
  </para>
  <para>
   As of PHP 4, it is possible to pass parameters to the shutdown function by
   passing additional parameters to
   <function>register_shutdown_function</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parameter</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Typically undefined functions cause fatal errors in PHP, but when the
    <parameter>function</parameter> called with
    <function>register_shutdown_function</function> is undefined, an error
    of level <constant>E_WARNING</constant> is generated instead.  Also,
    for reasons internal to PHP, this error will refer to
    <literal>Unknown</literal> at line #0.
   </para>
  </note>
  <note>
   <para>
    Working directory of the script can change inside the shutdown function
    under some web servers, e.g. Apache.
   </para>
  </note>
  <note>
   <para>
    Shutdown function is called during the script shutdown so headers are
    always already sent.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="ini.auto-append-file">auto_append_file</link></member>
    <member><function>exit</function></member>
    <member>The section on <link
    linkend="features.connection-handling">connection handling</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
