<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
  <refentry id="function.mysqli-bind-param">
   <refnamediv>
    <refname>mysqli_bind_param</refname>
    <refpurpose>Binds variables to a prepared statement as parameters</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>mysqli_bind_param</methodname>
      <methodparam><type>object</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>array</type><parameter>types</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>var1</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>var2, ...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mysql_bind_param</function> is used to bind variables for the
     parameter markers in the SQL statement that was passed to
     <function>mysql_prepare</function>. 
     The array <parameter>types</parameter> specifies the types for the
     diffrent bind variables. Valid array values are MYSQLI_BIND_INT, MYSQLI_BIND_DOUBLE,
     MYSQLI_BIND_STRING and MYSQLI_SEND_DATA.
    </para>
    <note>
      <para>
       If data size of a variable exceeds max. allowed package size
       (max_allowed_package), you have to specify MYSQLI_SEND_DATA and use
       <function>mysqli_send_long_data</function> to send the data in packages.
      </para>
      <para>
       The number of variables and array values must match the number of
       parameters in the statement.
     </para>
    </note>
      <example>
       <title>Prepared statements</title>
       <para>Procedural style:</para>
       <programlisting role="php">
<![CDATA[
<?php
    /* connect to database */
    $link = mysqli_connect("localhost", "mysql_user", "mysql_password", "mydb") or
        die("Could not connect: " . mysqli_connect_error());

    /* create mytable */
    mysqli_query($link, "CREATE TABLE mytable (a int, b int, c varchar(30))");
    
    /* prepare statement and bind variables for insert statements */
    $stmt = mysqli_prepare($link, "INSERT INTO mytable VALUES (?, ?, ?)");
    mysqli_bind_param($stmt, array(MYSQLI_BIND_INT, MYSQLI_BIND_INT,
                      MYSQLI_BIND_STRING), $a, $b, $c);

    $a = 1;
    $b = 2;
    $c = "I prefer OpenSource software";

    /* execute prepared statement */
    mysqli_execute($stmt);

    /* close statement and connection */
    mysqli_close_stmt(stmt);
    mysqli_close(link);

?>
]]>
       </programlisting>
       <para>Object oriented style:</para>
       <programlisting role="php">
<![CDATA[
<?php
    /* connect to database */
    $mysql = mysqli_connect("localhost", "mysql_user", "mysql_password", "mydb") or
        die("Could not connect: " . mysqli_connect_error());

    /* create mytable */
    $mysql->query("CREATE TABLE mytable (a int, b int, c varchar(30))");
    
    /* prepare statement and bind parameters */
    $stmt = $mysql->prepare("INSERT INTO mytable VALUES (?, ?, ?)");
    $stmt->bind_param(array(MYSQLI_BIND_INT, MYSQLI_BIND_INT,
                      MYSQLI_BIND_STRING), $a, $b, $c);

    $a = 1;
    $b = 2;
    $c = "I prefer opensource software";

    /* execute prepared statement */
    $stmt->execute();

    /* close statement and connection */
    $stmt->close();
    $mysql->close();
?>
]]>
     </programlisting>
    </example>
    <para>
     See also: <function>mysqli_bind_result</function>,
     <function>mysqli_execute</function>,
     <function>mysqli_fetch</function>
<!-- <function>mysqli_fetch_column</function> -->
     <function>mysqli_prepare</function>
     <function>mysqli_send_long_data</function>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
