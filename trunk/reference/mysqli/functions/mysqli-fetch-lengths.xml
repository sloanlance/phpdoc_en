<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
  <refentry id="function.mysqli-fetch-lengths">
   <refnamediv>
    <refname>mysqli_fetch_lengths</refname>
    <refname>result->lengths</refname>
    <refpurpose>Returns the lengths of the columns of the current row in the result set</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <para>Procedural style:</para>
    <methodsynopsis>
     <type>mixed</type><methodname>mysqli_fetch_lengths</methodname>
     <methodparam><type>object</type><parameter>result</parameter></methodparam>
    </methodsynopsis>
    <para>Object oriented style (property):</para>
    <classsynopsis>
     <ooclass><classname>result</classname></ooclass>
     <fieldsynopsis><type>mixed</type><varname>lengths</varname></fieldsynopsis>
    </classsynopsis>
    <para>
     The <function>mysqli_fetch_lengths</function> function returns an array containing the
     lengths of every column of the current row within the result set represented by the
     <parameter>result</parameter> parameter. If successful, a numerically indexed array
     representing the lengths of each column is returned or &false; on failure.
    </para>
   </refsect1>
   <refsect1>
    <title>Return values</title>
    <para>
     An array of integers representing the size of each column (not including
     any terminating null characters). &false; if an error occurred. 
    </para>
    <para>
     <function>mysql_fetch_lengths</function> is valid only for the current row of the result set. 
     It returns &false; if you call it before calling mysql_fetch_row/array/object or after retrieving 
     all rows in the result. 
    </para>
   </refsect1>
   <refsect1>
    <title>Example</title>
    <para>
     <example>
      <title>Object oriented style</title>
      <programlisting role='php'>
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "test");

$mysqli->query( "DROP TABLE IF EXISTS friends"); 
$mysqli->query( "CREATE TABLE friends (id int, name varchar(20))"); 
 
$mysqli->query( "INSERT INTO friends VALUES (1,'Hartmut'), (2, 'Ulf')");

$result = $mysqli->query( "SELECT id, name FROM friends");

$row = $result->fetch_row();

/* Print field lengths */
for ($i=0; $i < count($result->lengths); $i++) {
    printf("Field %d has length %d\n", $i, $result->lengths[$i]);
}

$result->close();

$mysqli->close();
?>
]]>
      </programlisting>
     </example>
     <example>
      <title>Procedural style</title>
      <programlisting role='php'>
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "test");

mysqli_query($link, "DROP TABLE IF EXISTS friends"); 
mysqli_query($link, "CREATE TABLE friends (id int, name varchar(20))"); 
 
mysqli_query($link, "INSERT INTO friends VALUES (1,'Hartmut'), (2, 'Ulf')");

$result = mysqli_query($link, "SELECT id, name FROM friends");

$row = mysqli_fetch_row($result);

/* Get field lengths */
$lengths = mysqli_fetch_lengths($result);

for ($i=0; $i < count($lengths); $i++) {
    printf("Field %d has length %d\n", $i, $lengths[$i]);
}

mysqli_free_result($result);

mysqli_close($link);
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
