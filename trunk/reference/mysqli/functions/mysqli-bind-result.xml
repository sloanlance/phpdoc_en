<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
  <refentry id="function.mysqli-bind-result">
   <refnamediv>
    <refname>mysqli_bind_result</refname>
    <refname>stmt->bind_result</refname>
    <refpurpose>Binds variables to a prepared statement for result storage</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <para>Procedural style:</para>
     <methodsynopsis>
      <type>bool</type><methodname>mysqli_bind_result</methodname>
      <methodparam><type>object</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>var1</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>var2, ...</parameter></methodparam>
     </methodsynopsis>
     <para>Object oriented style (method):</para>
     <classsynopsis>
      <ooclass><classname>stmt</classname></ooclass>
      <methodsynopsis>
       <type>bool</type>
       <methodname>bind_result</methodname>
       <methodparam><type>mixed</type><parameter>var1</parameter></methodparam>
       <methodparam choice="opt"><type>mixed</type><parameter>var2, ...</parameter></methodparam>
      </methodsynopsis>
     </classsynopsis>
     <para>
      <function>mysqli_bind_result</function> is used to associate (bind) columns in the result 
      set to variables. When <function>mysqli_fetch</function> is called to fetch data, the MySQL
      client/server protocol places the data for the bound columns into the specified variables
      <parameter>var1, ...</parameter>.
     </para>
     <note>
      <para>
       Note that all columns must be bound prior to calling <function>mysqli_fetch</function>.
       Depending on column types bound variables can silently change to the corresponding PHP type.
      </para>
      <para>
       A column can be bound or rebound at any time, even after a result set has been partially retrieved.
       The new binding takes effect the next time <function>mysqli_fetch</function> is called. 
      </para>
     </note>
   </refsect1>
   <refsect1>
    <title>Return values</title>
    <para>
     &return.success;
    </para>
   </refsect1>
   <refsect1>
    <title>See also</title>
    <para>
     <function>mysqli_bind_param</function>,
     <function>mysqli_execute</function>,
     <function>mysqli_fetch</function>,
<!-- <function>mysqli_fetch_column</function> -->
     <function>mysqli_prepare</function>,
     <function>mysqli_stmt_errno</function>,
     <function>mysqli_stmt_error</function>
    </para>
   </refsect1>
   <refsect1>
    <title>Example</title>
    <example>
     <title>Object oriented style</title>
     <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

/* prepare statement */
if ($stmt = $mysqli->prepare("SELECT Code, Name FROM Country ORDER BY Name LIMIT 5")) {
    $stmt->execute();

    /* bind variables to prepared statement */
    $stmt->bind_result($col1, $col2);

    /* fetch values */
    while ($stmt->fetch()) {
        printf("%s %s\n", $col1, $col2);
    }

    /* close statement */
    $stmt->close();
}
/* close connection */
$mysqli->close();

?>
]]>
    </programlisting>
    </example>
    <example>
     <title>Procedural style</title>
     <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* check connection */
if (!$link) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

/* prepare statement */
if ($stmt = mysqli_prepare($link, "SELECT Code, Name FROM Country ORDER BY Name LIMIT 5")) {
    mysqli_execute($stmt);

    /* bind variables to prepared statement */
    mysqli_bind_result($stmt, $col1, $col2);

    /* fetch values */
    while (mysqli_fetch($stmt)) {
       printf("%s %s\n", $col1, $col2);
    }

    /* close statement */
    mysqli_stmt_close($stmt);
}

/* close connection */
mysqli_close($link);
?>
]]>
     </programlisting>
    </example>
    <para>
     The above examples would produce the following output:
    </para>
    <screen>
<![CDATA[
AFG Afghanistan
ALB Albania
DZA Algeria
ASM American Samoa
AND Andorra
]]>
    </screen>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
