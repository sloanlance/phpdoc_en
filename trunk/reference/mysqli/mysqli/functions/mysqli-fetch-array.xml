<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.14 Maintainer: baoengb Status: ready -->
  <refentry id="function.mysqli-fetch-array">
   <refnamediv>
    <refname>mysqli_fetch_array</refname>
    <refname>result->fetch_array</refname>
    <refpurpose>Obtiene una fila como una matriz asociativa, una matriz num&eacute;rica o ambos.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <para>Estilo por procedimientos:</para>
     <methodsynopsis>
      <type>mixto</type><methodname>mysqli_fetch_array</methodname>
      <methodparam><type>objeto</type><parameter>resultado</parameter></methodparam>
      <methodparam choice='opt'><type>int</type><parameter>tipo_de_resultado</parameter></methodparam>
     </methodsynopsis>
    <para>Estilo orientado a objetos (m&eacute;todo):</para>
     <classsynopsis>
      <ooclass><classname>resultado</classname></ooclass>
      <methodsynopsis>
       <type>mixto</type>
       <methodname>fetch_array</methodname>
       <methodparam choice='opt'><type>int</type><parameter>tipo_de_resultado</parameter></methodparam>
      </methodsynopsis>
     </classsynopsis>
    <para>
	  Regresa una matrix que corresponde a las filas obtenidas o &null; si no hay 
	  m&aacute;s filas para el resultado, representado por el par&aacute;metro 
	  <parameter>resultado</parameter>.  
    </para>
    <para>
     <function>mysqli_fetch_array</function> es una versi&oacute;n mejorada de la funci&oacute;n 
	  <function>mysqli_fetch_row</function>. Adem&aacute; de almacenar los datos en 
	  &iacute;ndices num&eacute;ricos de la matriz resultante, la funci&oacute;n 
	  <function>mysql_fetch_array</function> tambi&eacute;n puede almacenar los datos en 
	  &iacute;ndices asociativos, usando los nombre de los campos de el resultado como llaves. 
    </para>
    &database.field-case;
    <para>
	  Si dos o m&aacute;s columnas de el resultado tienen el mismo nombre, la &uacute;ltima 
	  columna tomara precedencia y sobre escribir&aacute; lo primero. Para acceder a 
	  varias columnas con el mismo nombre, la forma de &iacute;ndice num&eacute;rica 
	  debe ser usada.
    </para>
    <para>
	  El par&aacute;metro opcional <parameter>tipo_de_resultado</parameter> es una 
	  constante que indica qu&eacute; tipo de matriz debe ser producido para la fila 
	  de datos actual. Los posibles valires para este par&aacute;metro son las constantes 
	  MYSQLI_ASSOC, MYSQLI_NUM, o MYSQLI_BOTH. Por defecto la funci&oacute;n 
	  <function>mysqli_fetch_array</function> asumir&aacute; el valor de MYSQLI_BOTH. 
    </para>
    <para>
	  Al usar la constante MYSQLI_ASSOC, esta funci&oacute;n se comportar&aacute; 
	  identica a la funci&oacute;n <function>mysqli_fetch_assoc</function>, mientras 
	  que con MYSQLI_NUM se comportar&aacute; identica a la funci&oacute;n 
	  <function>mysql_fetch_row</function>. La opci&oacute;n final MYSQLI_BOTH 
	  crear&aacute; una matriz con los atributos de ambos.
    </para>
   </refsect1>
   <refsect1>
    <title>Valores regresados</title>
    <para>
	  Regresa una matriz que corresponde a las filas obtenidas o &null; si no hay 
	  m&aacute;s filas en el resultado.
    </para>
   </refsect1>
   <refsect1>
    <title>Vea tambi&eacute;n</title>
    <para>
     <function>mysqli_fetch_assoc</function>,
     <function>mysqli_fetch_row</function>,
     <function>mysqli_fetch_object</function>.
    </para>
   </refsect1>
   <refsect1>
    <title>Ejemplos</title>
    <example>
     <title>Estilo orientado a objetos</title>
     <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* check connection */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}
 
$query = "SELECT Name, CountryCode FROM City ORDER by ID LIMIT 3";
$result = $mysqli->query($query);

/* numeric array */
$row = $result->fetch_array(MYSQLI_NUM);
printf ("%s (%s)\n", $row[0], $row[1]);  

/* associative array */
$row = $result->fetch_array(MYSQLI_ASSOC);
printf ("%s (%s)\n", $row["Name"], $row["CountryCode"]);  

/* associative and numeric array */
$row = $result->fetch_array(MYSQLI_BOTH);
printf ("%s (%s)\n", $row[0], $row["CountryCode"]);  

/* free result set */
$result->close();

/* close connection */
$mysqli->close();
?>
]]>
    </programlisting>
    </example>
    <example>
     <title>Estilo por procedimientos</title>
     <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* check connection */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$query = "SELECT Name, CountryCode FROM City ORDER by ID LIMIT 3";
$result = mysqli_query($link, $query);

/* numeric array */
$row = mysqli_fetch_array($result, MYSQLI_NUM);
printf ("%s (%s)\n", $row[0], $row[1]);  

/* associative array */
$row = mysqli_fetch_array($result, MYSQLI_ASSOC);
printf ("%s (%s)\n", $row["Name"], $row["CountryCode"]);  

/* associative and numeric array */
$row = mysqli_fetch_array($result, MYSQLI_BOTH);
printf ("%s (%s)\n", $row[0], $row["CountryCode"]);  

/* free result set */
mysqli_free_result($result);

/* close connection */
mysqli_close($link);
?>
]]>
     </programlisting>
    </example>
    <para>
	  Los ejemplos anteriores produci&aacute;n la siguiente salida:
    </para>
    <screen>
<![CDATA[
Kabul (AFG)
Qandahar (AFG)
Herat (AFG)
]]>
    </screen>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
