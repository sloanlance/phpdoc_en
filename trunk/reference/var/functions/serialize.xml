<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- splitted from ./en/functions/var.xml, last change in rev 1.28 -->
  <refentry id="function.serialize">
   <refnamediv>
    <refname>serialize</refname>
    <refpurpose>
     Generates a storable representation of a value
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>serialize</methodname>
      <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>serialize</function> returns a string containing a
     byte-stream representation of <parameter>value</parameter> that
     can be stored anywhere.
    </simpara>
    <simpara>
     This is useful for storing or passing PHP values around without
     losing their type and structure.
    </simpara>
   <simpara>
    To make the serialized string into a PHP value again, use
    <function>unserialize</function>.  <function>serialize</function>
    handles all types, except the <type>resource</type>-type.
    You can even <function>serialize</function> arrays that contain
    references to itself. References inside the array/object you 
    are <function>serialize</function>ing will also be stored.
   </simpara>
   <simpara>
   When serializing objects, PHP will attempt to call the member function
   <function>__sleep</function> prior to serialization. This is to allow the
   object to do any last minute clean-up, etc. prior to being serialized.
   Likewise, when the object is restored using <function>unserialize</function>
   the <function>__wakeup</function> member function is called.
   </simpara>
   <!-- TODO
        in 4.0.4pl1 this didn't work properly, however, there
        been some fixes. I don't know whether this all
        works correctly now, and if so, whether it is since 405
        or 406
   <note>
    <simpara>
     This didn't work correctly until 4.0.?
    </simpara>
   </note>
   </simpara>
   -->
   <note>
    <para>
     In PHP 3, object properties will be serialized, but methods are
     lost.  That limitation was removed in PHP 4 as both properties
     and methods are now restored.  Please see the <link
     linkend="language.oop.serialization">Serializing Objects</link>
     section of <link linkend="language.oop">Classes and
     Objects</link> for more information.
    </para>
   </note>
    <para>
     <example>
      <title><function>serialize</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
// $session_data contains a multi-dimensional array with session
// information for the current user.  We use serialize() to store
// it in a database at the end of the request.

$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn,
      "UPDATE sessions SET data = ? WHERE id = ?");
$sqldata = array (serialize($session_data), $PHP_AUTH_USER);
if (!odbc_execute($stmt, &$sqldata)) {
    $stmt = odbc_prepare($conn,
     "INSERT INTO sessions (id, data) VALUES(?, ?)");
    if (!odbc_execute($stmt, &$sqldata)) {
        /* Something went wrong.. */
    }
}
?>
]]>
      </programlisting>
     </example>
    </para>
   <para>
    See Also: <function>unserialize</function>.
   </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
