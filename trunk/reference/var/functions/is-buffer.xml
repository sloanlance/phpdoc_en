<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<refentry xml:id="function.is-buffer" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>is_buffer</refname>
  <refpurpose>Finds whether a variable is a native unicode or binary string</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>is_buffer</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
  </methodsynopsis>
  <para>
   Finds whether the given variable is a native <type>unicode</type> or 
   <type>binary</type> string.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       The variable being evaluated.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns &true; if <parameter>var</parameter> is a native 
   <type>unicode</type> or <type>binary</type> string, 
   &false; otherwise.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>is_buffer</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
// Declare some variables with different types
$types = array(
			'unicode'	=> 'Unicode string', 
			'binary'	=> b'Binary string', 
			'resource'	=> fopen('php://stdin', 'r'), 
			'integer'	=> 42
			);

// Test which types thats a buffer
foreach($types as $type => $value)
{
	if(is_buffer($value))
	{
		echo $type . ' is a either a unicode or binary string';
	}
	else
	{
		echo $type . ' is not a buffer value';
	}

	echo PHP_EOL;
}
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
unicode is a either a unicode or binary string
binary is a either a unicode or binary string
resource is not a buffer value
integer is not a buffer value
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_binary</function></member>
    <member><function>is_string</function></member>
    <member><function>is_unicode</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
