<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
  <refentry xml:id="function.is-object" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>is_object</refname>
    <refpurpose>Finds whether a variable is an object</refpurpose>
   </refnamediv>

   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>is_object</methodname>
      <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
     </methodsynopsis>
    <para>
     Finds whether the given variable is an object.
    </para>
   </refsect1>

   <refsect1 role="parameters">
    &reftitle.parameters;
    <para>
     <variablelist>
      <varlistentry>
       <term><parameter>var</parameter></term>
       <listitem>
        <para>
         The variable being evaluated.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </refsect1>

   <refsect1 role="returnvalues">
    &reftitle.returnvalues;
    <para>
     Returns &true; if <parameter>var</parameter> is an <type>object</type>, 
     &false; otherwise.
    </para>
   </refsect1>

   <refsect1 role="examples">
    &reftitle.examples;
    <para>
     <example>
      <title><function>is_object</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
// Declare a simple function to return an 
// array from our object
function get_students($obj)
{
    if(!is_object($obj))
    {
        return(false);
    }

    return($obj->students);
}

// Declare a new class instance and fill up 
// some values
$obj = new stdClass;
$obj->students = Array('Kalle', 'Ross', 'Felipe');

var_dump(get_students(NULL));
var_dump(get_students($obj));
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>

   <refsect1 role="notes">
    &reftitle.notes;
    <note>
     <para>
      This function will return &false; if used on an unserialized object
      where the class definition is not present (even though
      <function>gettype</function> returns <type>object</type>).
     </para>
    </note>
   </refsect1>

   <refsect1 role="seealso">
    &reftitle.seealso;
    <para>
     <simplelist>
      <member><function>is_bool</function></member>
      <member><function>is_int</function></member>
      <member><function>is_float</function></member>
      <member><function>is_string</function></member>
      <member><function>is_array</function></member>
     </simplelist>
    </para>
   </refsect1>

  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
