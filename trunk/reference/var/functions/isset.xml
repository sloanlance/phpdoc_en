<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./en/functions/var.xml, last change in rev 1.2 -->
  <refentry id="function.isset">
   <refnamediv>
    <refname>isset</refname>
    <refpurpose>Determine whether a variable is set</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>isset</methodname>
      <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>var</parameter></methodparam>
      <methodparam choice="opt"><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <note>
     <para>
      <function>isset</function> is a language construct.
     </para>
    </note>
    <simpara>
     Returns &true; if <parameter>var</parameter> exists; &false; otherwise.
    </simpara>
    <para>
     If a variable has been unset with <function>unset</function>, it will no
     longer be <function>isset</function>. <function>isset</function> will
     return &false; if testing a variable that has been set to &null;. Also
     note that a &null; byte (<literal>"\0"</literal>) is not equivalent to
     the PHP &null; constant.
    </para>
    <note>
     <title>Warning</title>
     <para>
      <function>isset</function> only works with variables as passing anything
      else will result in a parse error.
     </para>
    </note>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$var = '';

// This will evaluate to &true; so the text will be printed.
if (isset($var)) {
    print "This var is set set so I will print.";
}

// In the next examples we'll use var_dump to output
// the return value of isset().

$a = "test";
$b = "anothertest";

var_dump( isset($a) );      // TRUE
var_dump( isset ($a, $b) ); // TRUE

unset ($a);

var_dump( isset ($a) );     // FALSE
var_dump( isset ($a, $b) ); // FALSE

$foo = NULL;
var_dump( isset ($foo) );   // FALSE

?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     This also work for elements in arrays:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$a = array ('test' => 1, 'hello' => NULL);

var_dump( isset ($a['test']) );            // TRUE
var_dump( isset ($a['foo']) );             // FALSE
var_dump( isset ($a['hello']) );           // FALSE

// The key 'hello' equals NULL so is considered unset
// If you want to check for NULL key values then try: 
var_dump( array_key_exists('hello', $a) ); // TRUE

?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     See also <function>empty</function>,
     <function>unset</function>, and 
     <function>array_key_exists</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
