<?xml version="1.0" encoding="utf-8"?>

<!-- $Revision$ -->
<phpdoc:classref xml:id="class.mongocursorexception" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The MongoCursorException class</title>
 <titleabbrev>MongoCursorException</titleabbrev>

 <partintro>

  <!-- {{{ MongoCursorException intro -->
  <section xml:id="mongocursorexception.intro">
   &reftitle.intro;
   <para>
    Caused by accessing a cursor incorrectly or a error receiving a reply.
   </para>

   <para>
    If there is an error receiving a reply, there will be a more 
    specific error message to help diagnose the problem.  As it is a bit 
    programmatically awkward to parse an exception message, there is also an
    error code associated with each cause of the exception.
   </para>

   <itemizedlist>
    <listitem>
     <para>
      <literal>cannot modify cursor after beginning iteration</literal>
     </para>
     <para>
      Code: 0
     </para>
     <para>
      You are calling a method that sets up the query after executing the query.
      Reset the cursor and try again.
     </para>
    </listitem>
    <listitem>
     <para>
      Various send errors
     </para>
     <para>
      Code: 1
     </para>
     <para>
      Could not send the query to the database.  Make sure the database is 
      still up and the network is okay.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>cursor not found</literal>
     </para>
     <para>
      Code: 2
     </para>
     <para>
      The driver was trying to fetch more results from the database, but the
      database did not have a record of the query.  This usually means that the
      cursor timed out on the server side: after a few minutes of inactivity, 
      the database will kill a cursor (see 
      <function>MongoCursor::immortal</function> for information on preventing
      this).
     </para>
    </listitem>
    <listitem>
     <para>
      Various database errors
     </para>
     <para>
      Code: 4
     </para>
     <para>
      The database errored out on the query.  The error message should be fairly 
      self-explanatory, but you can check the database log for details.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>couldn't get response header</literal>
     </para>
     <para>
      Code: 3
     </para>
     <para>
      The driver could not fetch a reply header from the database, so it gave 
      up.  Check if the database is still up and the network is connected and 
      try the query again.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>no db response</literal>
     </para>
     <para>
      Code: 5
     </para>
     <para>
      This may not even be an error, for example, the database command 
      "shutdown" returns no response.  However, if you were expecting a 
      response, this means the database didn't give one.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>no db response</literal>
     </para>
     <para>
      Code: 5
     </para>
     <para>
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>bad response length: %d, max: %d, did the db assert?</literal>
     </para>
     <para>
      Code: 6
     </para>
     <para>
      This means that the database said that its response was greater than 4Mb 
      or less than 0.  Generally, a number greater than 5Mb should be reported 
      to the developers as a potential database bug (max response length is 
      4Mb).  A response of less than 0 often means a database assertion occured.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>incomplete header/response</literal>
     </para>
     <para>
      Code: 7
     </para>
     <para>
      Highly unusual.  Occurs if the database response started out correctly, 
      but broke off in the middle.  Probably indicates a network problem.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>error getting database response: errstr</literal>
     </para>
     <para>
      <literal>WSA error getting database response: errstr</literal>
     </para>
     <para>
      "errstr" is an io error reported directly from the C socket 
      subsystem.  On Windows, the error message is prefixed with "WSA".
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>error getting database response: &lt;various&gt;</literal>
     </para>
     <para>
      Code: 8
     </para>
     <para>
      Something went wrong at the socket layer.  This will return the error 
      message from the C socket library.
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>couldn't find a response</literal>
     </para>
     <para>
      Code: 9
     </para>
     <para>
      If the response was cached and now cannot be located.
     </para>
    </listitem>
   </itemizedlist>
  </section>
  <!-- }}} -->

  <section xml:id="mongocursorexception.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoCursorException</classname></ooclass>

    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <modifier>extends</modifier>
      <classname>MongoException</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    
   </classsynopsis>
   <!-- }}} -->

  </section>

 </partintro>

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
