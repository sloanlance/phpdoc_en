<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./en/functions/xml.xml, last change in rev 1.2 -->
  <refentry id="function.xml-set-unparsed-entity-decl-handler">
   <refnamediv>
    <refname>xml_set_unparsed_entity_decl_handler</refname>
    <refpurpose>
     Set up unparsed entity declaration handler
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>xml_set_unparsed_entity_decl_handler</methodname>
     <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
     <methodparam><type>string</type><parameter>handler</parameter></methodparam>
    </methodsynopsis>
    <para>
     Sets the unparsed entity declaration handler function for the XML parser
     <parameter>parser</parameter>.  <parameter>handler</parameter> is a
     string containing the name of a function that must exist when
     <function>xml_parse</function> is called for
     <parameter>parser</parameter>.
    </para>
    <para>
     This handler will be called if the XML parser encounters an
     external entity declaration with an NDATA declaration, like the
     following:
     <programlisting role="xml">
<![CDATA[
<!ENTITY <parameter>name</parameter> {<parameter>publicId</parameter> | <parameter>systemId</parameter>}
        NDATA <parameter>notationName</parameter>
]]>
     </programlisting>
    </para>
    <para>
     See <ulink url="&url.rec-xml;#sec-external-ent">section 4.2.2 of
     the XML 1.0 spec</ulink> for the definition of notation declared
     external entities.
    </para> 
    <para>
     The function named by <parameter>handler</parameter> must accept six
     parameters:
     <methodsynopsis>
      <methodname><replaceable>handler</replaceable></methodname>
      <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
      <methodparam><type>string</type><parameter>entity_name</parameter></methodparam>
      <methodparam><type>string</type><parameter>base</parameter></methodparam>
      <methodparam><type>string</type><parameter>system_id</parameter></methodparam>
      <methodparam><type>string</type><parameter>public_id</parameter></methodparam>
      <methodparam><type>string</type><parameter>notation_name</parameter></methodparam>
     </methodsynopsis>
     <variablelist>
      <varlistentry>
       <term><parameter>parser</parameter></term>
       <listitem>
        <simpara>
         The first parameter, <replaceable>parser</replaceable>, is a
         reference to the XML parser calling the
         handler.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>entity_name</parameter></term>
       <listitem>
        <simpara>
         The name of the entity that is about to be defined.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>base</parameter></term>
       <listitem>
        <simpara>
         This is the base for resolving the system identifier
         (<parameter>systemId</parameter>) of the external entity.  Currently
         this parameter will always be set to an empty string.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>system_id</parameter></term>
       <listitem>
        <simpara>
         System identifier for the external entity.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>public_id</parameter></term>
       <listitem>
        <simpara> 
         Public identifier for the external entity.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>notation_name</parameter></term>
       <listitem>
        <simpara> 
         Name of the notation of this entity (see
         <function>xml_set_notation_decl_handler</function>).
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist></para>
    <para>
     If a handler function is set to an empty string, or &false;, the handler
     in question is disabled.
    </para>
    <para>
     &true; is returned if the handler is set up, &false; if
     <parameter>parser</parameter> is not a parser.
    </para>
    &note.func-callback;
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
