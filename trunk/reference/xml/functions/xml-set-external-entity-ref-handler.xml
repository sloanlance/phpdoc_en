<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./en/functions/xml.xml, last change in rev 1.2 -->
  <refentry id="function.xml-set-external-entity-ref-handler">
   <refnamediv>
    <refname>xml_set_external_entity_ref_handler</refname>
    <refpurpose>Set up external entity reference handler</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>xml_set_external_entity_ref_handler</methodname>
     <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
     <methodparam><type>callback</type><parameter>handler</parameter></methodparam>
    </methodsynopsis>
    <para>
     Sets the external entity reference handler function for the XML parser
     <parameter>parser</parameter>.  <parameter>handler</parameter> is
     a string containing the name of a function that must exist when
     <function>xml_parse</function> is called for
     <parameter>parser</parameter>.
    </para>
    <para>
     The function named by <parameter>handler</parameter> must accept
     five parameters, and should return an integer value.  If the
     value returned from the handler is &false; (which it will be if no
     value is returned), the XML parser will stop parsing and
     <function>xml_get_error_code</function> will return <systemitem
     class="constant">XML_ERROR_EXTERNAL_ENTITY_HANDLING</systemitem>.
     <methodsynopsis>
      <methodname><replaceable>handler</replaceable></methodname>
      <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
      <methodparam><type>string</type><parameter>open_entity_names</parameter></methodparam>
      <methodparam><type>string</type><parameter>base</parameter></methodparam>
      <methodparam><type>string</type><parameter>system_id</parameter></methodparam>
      <methodparam><type>string</type><parameter>public_id</parameter></methodparam>
     </methodsynopsis>
     <variablelist>
      <varlistentry>
       <term><parameter>parser</parameter></term>
       <listitem>
        <simpara>
         The first parameter, <replaceable>parser</replaceable>, is a
         reference to the XML parser calling the handler.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>open_entity_names</parameter></term>
       <listitem>
        <simpara>
         The second parameter, <parameter>open_entity_names</parameter>, is a
         space-separated list of the names of the entities that are open for
         the parse of this entity (including the name of the referenced
         entity).
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>base</parameter></term>
       <listitem>
        <simpara>
         This is the base for resolving the system identifier
         (<parameter>system_id</parameter>) of the external entity.  Currently
         this parameter will always be set to an empty string.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>system_id</parameter></term>
       <listitem>
        <simpara>
         The fourth parameter, <parameter>system_id</parameter>, is the
         system identifier as specified in the entity declaration.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>public_id</parameter></term>
       <listitem>
        <simpara>
         The fifth parameter, <parameter>public_id</parameter>, is the
         public identifier as specified in the entity declaration, or
         an empty string if none was specified; the whitespace in the
         public identifier will have been normalized as required by
         the XML spec.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     If a handler function is set to an empty string, or &false;, the handler
     in question is disabled.
    </para>
    <para>
     &true; is returned if the handler is set up, &false; if
     <parameter>parser</parameter> is not a parser.
    </para>
    &note.func-callback;
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
