<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
  <refentry id="function.stream-get-line">
   <refnamediv>
    <refname>stream_get_line</refname>
    <refpurpose>Gets line from stream resource up to a given delimiter</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>stream_get_line</methodname>
      <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
      <methodparam><type>string</type><parameter>ending</parameter></methodparam>
     </methodsynopsis>
    <para>
     Returns a string of up to <parameter>length</parameter> bytes read from the file
     pointed to by <parameter>handle</parameter>. Reading ends when
     <parameter>length</parameter> bytes have been read, when the string specified by
     <parameter>ending</parameter> is found (which is <emphasis>not</emphasis> included
     in the return value), or on EOF (whichever comes first). 
    </para>
    <para>
     If an error occurs, returns &false;.
    </para>
    <simpara>
     This function is nearly identical to <function>fgets</function>
     except in that it allows end of line delimiters other than the
     standard \n, \r, and \r\n, and does <emphasis>not</emphasis>
     return the delimiter itself.
    </simpara>
    <para> 
     See also <function>fread</function>,
     <function>fgets</function>, and
     <function>fgetc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
