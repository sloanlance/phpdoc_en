<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- splitted from ./en/functions/curl.xml, last change in rev 1.1 -->
  <refentry id="function.curl-setopt">
   <refnamediv>
    <refname>curl_setopt</refname>
    <refpurpose>Set an option for a CURL transfer</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>curl_setopt</methodname>
      <methodparam><type>resource</type><parameter>ch</parameter></methodparam>
      <methodparam><type>integer</type><parameter>option</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
     </methodsynopsis>
    <para>
     Set an option for a CURL session identified by the
     <parameter>ch</parameter> parameter. <parameter>option</parameter>
     specifies which option to set, and
     <parameter>value</parameter> specifies the value for the option given.
    </para>
    <para>
     <parameter>value</parameter> should be a bool for the
     following values of the <parameter>option</parameter> parameter:
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Option</entry>
         <entry>Set <parameter>value</parameter> to</entry>
         <entry>Changed</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>CURLOPT_BINARYTRANSFER</entry>
         <entry>
          &true; to return the raw output when
          <parameter>CURLOPT_RETURNTRANSFER</parameter> is used.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_CRLF</entry>
         <entry>
          &true; to convert Unix newlines to CRLF newlines
          on transfers.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_DNS_USE_GLOBAL_CACHE</entry>
         <entry>
          &true; to use a global DNS cache. This option is
          not thread-safe and is enabled by default.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FAILONERROR</entry>
         <entry>
          &true; to fail silently if the HTTP code returned
          is greater than 300. The default behavior is to return the page
          normally, ignoring the code.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FILETIME</entry>
         <entry>
          &true; to attempt to retrieve the modification
          date of the remote document. You can then retrieve this value using
          the <parameter>CURLINFO_FILETIME</parameter> option with
          <function>curl_getinfo</function>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FOLLOWLOCATION</entry>
         <entry>
          &true; to follow any
          <literal>"Location: "</literal> header that the server sends as
          part of the HTTP header (note this is recursive, PHP will follow as
          many <literal>"Location: "</literal> headers that it is sent,
          unless <parameter>CURLOPT_MAXREDIRS</parameter> is set).
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FORBID_REUSE</entry>
         <entry>
          &true; to force the connection to explicitly
          close when it has finished processing, and not be pooled for reuse.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FRESH_CONNECT</entry>
         <entry>
          &true; to force the use of a new connection
          instead of a cached one.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FTP_USE_EPRT</entry>
         <entry>
          &true; to use EPRT (and LPRT) when doing active
          FTP downloads. Use &false; to disable EPRT and LPRT and use PORT
          only.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FTP_USE_EPSV</entry>
         <entry>
          &true; to first try an EPSV command for FTP
          transfers before reverting back to PASV. Set to &false;
          to disable EPSV.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FTPAPPEND</entry>
         <entry>
          &true; to append to the remote file instead of
          overwriting it.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FTPASCII</entry>
         <entry>
          An alias of
          <parameter>CURLOPT_TRANSFERTEXT</parameter>. Use that instead.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FTPLISTONLY</entry>
         <entry>
          &true; to only list the names of an FTP
          directory.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_HEADER</entry>
         <entry>
          &true; to include the header in the output.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_HTTPGET</entry>
         <entry>
          &true; to reset the HTTP request method to GET.
          Since GET is the default, this is only necessary if the request
          method has been changed.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_HTTPPROXYTUNNEL</entry>
         <entry>
          &true; to tunnel through a given HTTP proxy.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_MUTE</entry>
         <entry>
          &true; to be completely silent with regards to
          the CURL functions.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_NETRC</entry>
         <entry>
          &true; to scan your <filename>~/.netrc</filename>
          file to find your username and password for the remote site that
          you're establishing a connection with.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_NOBODY</entry>
         <entry>
          &true; to exclude the body from the output.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_NOPROGRESS</entry>
         <entry>
          &true; to display a progress meter for CURL
          transfers.
          <note>
           <para>
            PHP automatically sets this option to &true;, this should only be
            changed for debugging purposes.
           </para>
          </note>
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_NOSIGNAL</entry>
         <entry>
          &true; to ignore any CURL function that causes a
          signal to be sent to the PHP process. This is turned on by default
          in multi-threaded SAPIs so timeout options can still be used.
         </entry>
         <entry>
          Added in CURL 7.10.
         </entry>
        </row>
        <row>
         <entry>CURLOPT_POST</entry>
         <entry>
          &true; to do a regular HTTP POST. This POST is the
          normal <literal>application/x-www-form-urlencoded</literal> kind,
          most commonly used by HTML forms.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_PUT</entry>
         <entry>
          &true; to HTTP PUT a file. The file to PUT must
          be set with <parameter>CURLOPT_INFILE</parameter> and
          <parameter>CURLOPT_INFILESIZE</parameter>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_RETURNTRANSFER</entry>
         <entry>
          &true; to return the transfer as a string of the
          return value of <function>curl_exec</function> instead of outputting
          it out directly.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSL_VERIFYPEER</entry>
         <entry>
          &false; to stop CURL from verifying the peer's
          certificate. Alternate certificates to verify against can be
          specified with the <parameter>CURLOPT_CAINFO</parameter> option
          or a certificate directory can be specified with the
          <parameter>CURLOPT_CAPATH</parameter> option.
          <parameter>CURLOPT_SSL_VERIFYHOST</parameter> may also need to be
          &true; or &false; if
          <parameter>CURLOPT_SSL_VERIFYPEER</parameter> is disabled (it
          defaults to 2).
         </entry>
         <entry>
          &true; by default as of CURL 7.10. Default bundle installed as of
          CURL 7.10.
         </entry>
        </row>
        <row>
         <entry>CURLOPT_TRANSFERTEXT</entry>
         <entry>
          &true; to use ASCII mode for FTP transfers.
          For LDAP, it retrieves data in plain text instead of HTML. On
          Windows systems, it will not set <literal>STDOUT</literal> to binary
          mode.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_UNRESTRICTED_AUTH</entry>
         <entry>
          &true; to keep sending the username and password
          when following locations (using
          <parameter>CURLOPT_FOLLOWLOCATION</parameter>), even when the
          hostname has changed.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_UPLOAD</entry>
         <entry>
          &true; to prepare for an upload.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_VERBOSE</entry>
         <entry>
          &true; to output verbose information. Writes
          output to <literal>STDERR</literal>, or the file specified using
          <parameter>CURLOPT_STDERR</parameter>.
         </entry>
         <entry>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     <parameter>value</parameter> should be an integer for the
     following values of the <parameter>option</parameter> parameter:
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Option</entry>
         <entry>Set <parameter>value</parameter> to</entry>
         <entry>Changed</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>CURLOPT_BUFFERSIZE</entry>
         <entry>
          The size of the buffer to use for each read. There is no guarantee
          this request will be fulfilled, however.
         </entry>
         <entry>
          Added in CURL 7.10.
         </entry>
        </row>
        <row>
         <entry>CURLOPT_CLOSEPOLICY</entry>
         <entry>
          Either
          <parameter>CURLCLOSEPOLICY_LEAST_RECENTLY_USED</parameter> or
          <parameter>CURLCLOSEPOLICY_OLDEST</parameter>.
          There are three other <literal>CURLCLOSEPOLICY_</literal>
          constants, but CURL does not support them yet.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_CONNECTTIMEOUT</entry>
         <entry>
          The number of seconds to wait whilst trying to connect. Use 0 to
          wait indefinitely.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_DNS_CACHE_TIMEOUT</entry>
         <entry>
          The number of seconds to keep DNS entries in memory. This
          option is set to 120 (2 minutes) by default.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_HTTP_VERSION</entry>
         <entry>
          <parameter>CURL_HTTP_VERSION_NONE</parameter> (default, lets CURL
          decide which version to use),
          <parameter>CURL_HTTP_VERSION_1_0</parameter> (forces HTTP/1.0),
          or <parameter>CURL_HTTP_VERSION_1_1</parameter> (forces HTTP/1.1).
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_HTTPAUTH</entry>
         <entry>
          <para>
           The HTTP authentication method(s) to use. The options are:
           <parameter>CURLAUTH_BASIC</parameter>,
           <parameter>CURLAUTH_DIGEST</parameter>,
           <parameter>CURLAUTH_GSSNEGOTIATE</parameter>,
           <parameter>CURLAUTH_NTLM</parameter>,
           <parameter>CURLAUTH_ANY</parameter>, and
           <parameter>CURLAUTH_ANYSAFE</parameter>.
          </para>
          <para>
           You can use the bitwise <literal>|</literal> (or) operator to combine
           more than one method. If you do this, CURL will poll the server to see
           what methods it supports and pick the best one.
          </para>
          <para>
           <parameter>CURLAUTH_ANY</parameter> is an alias for
           <literal>CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
          </para>
          <para>
           <parameter>CURLAUTH_ANYSAFE</parameter> is an alias for
           <literal>CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
          </para>
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_INFILESIZE</entry>
         <entry>
          The expected size, in bytes, of the file when uploading a file to a
          remote site.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_LOW_SPEED_LIMIT</entry>
         <entry>
          The transfer speed, in bytes per second, that the transfer should be
          below during <parameter>CURLOPT_LOW_SPEED_TIME</parameter> seconds
          for PHP to consider the transfer too slow and abort.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_LOW_SPEED_TIME</entry>
         <entry>
          The number of seconds the transfer should be below
          <parameter>CURLOPT_LOW_SPEED_LIMIT</parameter> for PHP to consider
          the transfer too slow and abort.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_MAXCONNECTS</entry>
         <entry>
          The maximum amount of persistent connections that are allowed.
          When the limit is reached,
          <parameter>CURLOPT_CLOSEPOLICY</parameter> is used to determine
          which connection to close.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_MAXREDIRS</entry>
         <entry>
          The maximum amount of HTTP redirections to follow. Use this option
          alongside <parameter>CURLOPT_FOLLOWLOCATION</parameter>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_PORT</entry>
         <entry>
          An alternative port number to connect to.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_PROXYAUTH</entry>
         <entry>
         The HTTP authentication method(s) to use for the proxy connection.
         Use the same bitmasks as described in
         <parameter>CURLOPT_HTTPAUTH</parameter>. For proxy authentication,
         only <parameter>CURLAUTH_BASIC</parameter> and
         <parameter>CURLAUTH_NTLM</parameter> are currently supported.
         </entry>
         <entry>
          Added in CURL 7.10.7 and PHP 5.1.0.
         </entry>
        </row>
        <row>
         <entry>CURLOPT_PROXYPORT</entry>
         <entry>
          The port number of the proxy to connect to. This port number can
          also be set in <parameter>CURLOPT_PROXY</parameter>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_PROXYTYPE</entry>
         <entry>
          Either <parameter>CURLPROXY_HTTP</parameter> (default) or
          <parameter>CURLPROXY_SOCKS5</parameter>.
         </entry>
         <entry>
          Added in CURL 7.10.
         </entry>
        </row>
        <row>
         <entry>CURLOPT_RESUME_FROM</entry>
         <entry>
          The offset, in bytes, to resume a transfer from.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSL_VERIFYHOST</entry>
         <entry>
          1 to check the existence of a common name in the
          SSL peer certificate. 2 to check the existence of
          a common name and also verify that it matches the hostname
          provided.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSLVERSION</entry>
         <entry>
          The SSL version (2 or 3) to use. By default PHP will try to determine
          this itself, although in some cases you must set this manually.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_TIMECONDITION</entry>
         <entry>
          How <parameter>CURLOPT_TIMEVALUE</parameter> is treated.
          Use <parameter>CURL_TIMECOND_IFMODSINCE</parameter> to return the
          page only if it has been modified since the time specified in
          <parameter>CURLOPT_TIMEVALUE</parameter>. If it hasn't been modified,
          a <literal>"304 Not Modified"</literal> header will be returned
          assuming <parameter>CURLOPT_HEADER</parameter> is &true;.
          Use <parameter>CURL_TIMECOND_ISUNMODSINCE</parameter> for the reverse
          effect. <parameter>CURL_TIMECOND_IFMODSINCE</parameter> is the
          default.
         </entry>
         <entry>
          Added in PHP 5.1.0.
         </entry>
        </row>
        <row>
         <entry>CURLOPT_TIMEOUT</entry>
         <entry>
          The maximum number of seconds to allow CURL functions to execute.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_TIMEVALUE</entry>
         <entry>
          The time in seconds since January 1st, 1970. The time will be used
          by <parameter>CURLOPT_TIMECONDITION</parameter>. By default,
          <parameter>CURL_TIMECOND_IFMODSINCE</parameter> is used.
         </entry>
         <entry>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     <parameter>value</parameter> should be a string for the
     following values of the <parameter>option</parameter> parameter:
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Option</entry>
         <entry>Set <parameter>value</parameter> to</entry>
         <entry>Changed</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>CURLOPT_CAINFO</entry>
         <entry>
          The name of a file holding one or more certificates to verify the
          peer with. This only makes sense when used in combination with
          <parameter>CURLOPT_SSL_VERIFYPEER</parameter>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_CAPATH</entry>
         <entry>
          A directory that holds multiple CA certificates. Use this option
          alongside <parameter>CURLOPT_SSL_VERIFYPEER</parameter>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_COOKIE</entry>
         <entry>
          The contents of the <literal>"Set-Cookie: "</literal> header to be
          used in the HTTP request.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_COOKIEFILE</entry>
         <entry>
          The name of the file containing the cookie data. The cookie file can
          be in Netscape format, or just plain HTTP-style headers dumped into
          a file.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_COOKIEJAR</entry>
         <entry>
          The name of a file to save all internal cookies to when the
          connection closes.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_CUSTOMREQUEST</entry>
         <entry>
          A custom request method to use instead of
          <literal>"GET"</literal> or <literal>"HEAD"</literal> when doing
          a HTTP request. This is useful for doing
          <literal>"DELETE"</literal> or other, more obscure HTTP requests.
          Valid values are things like <literal>"GET"</literal>,
          <literal>"POST"</literal>, <literal>"CONNECT"</literal> and so on;
          i.e. Do not enter a whole HTTP request line here. For instance,
          entering <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal>
          would be incorrect.
          <note>
           <para>
            Don't do this without making sure your server supports the custom
            request method first.
           </para>
          </note>
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_EGBSOCKET</entry>
         <entry>
          Like <parameter>CURLOPT_RANDOM_FILE</parameter>, except a filename
          to an Entropy Gathering Daemon socket.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_ENCODING</entry>
         <entry>
          The contents of the <literal>"Accept-Encoding: "</literal> header.
          This enables decoding of the response. Supported encodings are
          <literal>"identity"</literal>, <literal>"deflate"</literal>, and
          <literal>"gzip"</literal>. If an empty string, <literal>""</literal>,
          is set, a header containing all supported encoding types is sent.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_FTPPORT</entry>
         <entry>
          The value which will be used to get the IP address to use
          for the FTP "POST" instruction. The "POST" instruction tells
          the remote server to connect to our specified IP address.  The
          string may be a plain IP address, a hostname, a network
          interface name (under Unix), or just a plain '-' to use the
          systems default IP address.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_INTERFACE</entry>
         <entry>
          The name of the outgoing network interface to use. This can be an
          interface name, an IP address or a host name.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_KRB4LEVEL</entry>
         <entry>
          The KRB4 (Kerberos 4) security level. Any of the following values
          (in order from least to most powerful) are valid:
          <literal>"clear"</literal>,
          <literal>"safe"</literal>,
          <literal>"confidential"</literal>,
          <literal>"private".</literal>.
          If the string does not match one of these,
          <literal>"private"</literal> is used. Setting this option to &null;
          will disable KRB4 security. Currently KRB4 security only works
          with FTP transactions.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_POSTFIELDS</entry>
         <entry>
          The full data to post in a HTTP "POST" operation.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_PROXY</entry>
         <entry>
          The HTTP proxy to tunnel requests through.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_PROXYUSERPWD</entry>
          <entry>
           A username and password formatted as
           <literal>"[username]:[password]"</literal> to use for the
           connection to the proxy.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_RANDOM_FILE</entry>
         <entry>
          A filename to be used to seed the random number generator for SSL.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_RANGE</entry>
         <entry>
          Range(s) of data to retrieve in the format
          <literal>"X-Y"</literal> where X or Y are optional. HTTP transfers
          also support several intervals, separated with commas in the format
          <literal>"X-Y,N-M"</literal>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_REFERER</entry>
         <entry>
          The contents of the <literal>"Referer: "</literal> header to be used
          in a HTTP request.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSL_CIPHER_LIST</entry>
         <entry>
          A list of ciphers to use for SSL. For example,
          <literal>RC4-SHA</literal> and <literal>TLSv1</literal> are valid
          cipher lists.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSLCERT</entry>
         <entry>
          The name of a file containing a PEM formatted certificate.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSLCERTPASSWD</entry>
         <entry>
          The password required to use the
          <parameter>CURLOPT_SSLCERT</parameter> certificate.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSLCERTTYPE</entry>
         <entry>
          The format of the certificate. Supported formats are
          <literal>"PEM"</literal> (default), <literal>"DER"</literal>,
          and <literal>"ENG"</literal>.
         </entry>
         <entry>
          Added in CURL 7.9.3.
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSLENGINE</entry>
         <entry>
          The identifier for the crypto engine of the private SSL key
          specified in <parameter>CURLOPT_SSLKEY</parameter>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSLENGINE_DEFAULT</entry>
         <entry>
          The identifier for the crypto engine used for asymmetric crypto
          operations.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSLKEY</entry>
         <entry>
          The name of a file containing a private SSL key.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSLKEYPASSWD</entry>
         <entry>
          The secret password needed to use the private SSL key specified in
          <parameter>CURLOPT_SSLKEY</parameter>.
          <note>
           <para>
            Since this option contains a sensitive password, remember to keep
            the PHP script it is contained within safe.
           </para>
          </note>
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_SSLKEYTYPE</entry>
         <entry>
          The key type of the private SSL key specified in
          <parameter>CURLOPT_SSLKEY</parameter>. Supported key types are
          <literal>"PEM"</literal> (default), <literal>"DER"</literal>,
          and <literal>"ENG"</literal>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_URL</entry>
         <entry>
          The URL to fetch. You can also set this when initializing a
          session with <function>curl_init</function>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_USERAGENT</entry>
         <entry>
          The contents of the <literal>"User-Agent: "</literal> header to be
          used in a HTTP request.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_USERPWD</entry>
         <entry>
          A username and password formatted as
          <literal>"[username]:[password]"</literal> to use for the
          connection.
         </entry>
         <entry>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     <parameter>value</parameter> should be an array for the
     following values of the <parameter>option</parameter> parameter:
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Option</entry>
         <entry>Set <parameter>value</parameter> to</entry>
         <entry>Changed</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>CURLOPT_HTTP200ALIASES</entry>
         <entry>
          An array of HTTP 200 responses that will be treated as valid
          responses and not as errors.
         </entry>
         <entry>
          Added in CURL 7.10.3.
         </entry>
        </row>
        <row>
         <entry>CURLOPT_HTTPHEADER</entry>
         <entry>
          An array of HTTP header fields to set.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_POSTQUOTE</entry>
         <entry>
          An array of FTP commands to execute on the server after the FTP
          request has been performed.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_QUOTE</entry>
         <entry>
          An array of FTP commands to execute on the server prior to the FTP
          request.
         </entry>
         <entry>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     <parameter>value</parameter> should be a stream resource (using
     <function>fopen</function>, for example) for the following values of the
     <parameter>option</parameter> parameter:
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Option</entry>
         <entry>Set <parameter>value</parameter> to</entry>
         <entry>Changed</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>CURLOPT_FILE</entry>
         <entry>
          The file that the transfer should be written to. The default
          is <literal>STDOUT</literal> (the browser window).
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_INFILE</entry>
         <entry>
          The file that the transfer should be read from when uploading.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_STDERR</entry>
         <entry>
          An alternative location to output errors to instead of
          <literal>STDERR</literal>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_WRITEHEADER</entry>
         <entry>
          The file that the header part of the transfer is written to.
         </entry>
         <entry>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     <parameter>value</parameter> should be a string that is the name of a valid
     callback function for the the following values of the
     <parameter>option</parameter> parameter:
     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Option</entry>
         <entry>Set <parameter>value</parameter> to</entry>
         <entry>Changed</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>CURLOPT_HEADERFUNCTION</entry>
         <entry>
          The name of a callback function where the callback function takes
          two parameters. The first is the CURL resource, the second is a
          string with the header data to be written. Using this callback
          function, it becomes your responsibility to write the header data.
          Return the number of bytes written.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_PASSWDFUNCTION</entry>
         <entry>
          The name of a callback function where the callback function takes
          three parameters. The first is the CURL resource, the second is a
          string containing a password prompt, and the third is the maximum
          password length. Return the string containing the password.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_READFUNCTION</entry>
         <entry>
          The name of a callback function where the callback function takes
          two parameters. The first is the CURL resource, and the second is a
          string with the data to be read. Using this callback function, it
          becomes your responsibility to read the data. Return the number of
          bytes read. Return 0 to signal <literal>EOF</literal>.
         </entry>
         <entry>
         </entry>
        </row>
        <row>
         <entry>CURLOPT_WRITEFUNCTION</entry>
         <entry>
          The name of a callback function where the callback function takes
          two parameters. The first is the CURL resource, and the second is a
          string with the data to be written. Using this callback function, it
          becomes your responsibility to write the data. Must return the exact
          number of bytes written or this will fail.
         </entry>
         <entry>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     <example>
      <title>
       Initializing a new CURL session and fetching a webpage
      </title>
      <programlisting role="php">
<![CDATA[
<?php
// create a new CURL resource
$ch = curl_init();

// set URL and other appropriate options
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, false);

// grab URL and pass it to the browser
curl_exec($ch);

// close CURL resource, and free up system resources
curl_close($ch);
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
