<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<refentry xml:id='function.mssql-bind' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mssql_bind</refname>
  <refpurpose>Adds a parameter to a stored procedure or a remote stored procedure</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>mssql_bind</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam><type>string</type><parameter>param_name</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">var</parameter></methodparam>
   <methodparam><type>int</type><parameter>type</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>is_output</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>is_null</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>maxlen</parameter></methodparam>
  </methodsynopsis>
  <para>
   Binds a parameter to a stored procedure or a remote stored procedure.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stmt</parameter></term>
     <listitem>
      <para>
       Statement resource, obtained with <function>mssql_init</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>param_name</parameter></term>
     <listitem>
      <para>
       The parameter name, as a string.
      </para>
      <note>
       <para>
        You have to include the <literal>@</literal> character, like in the
        T-SQL syntax. See the explanation included in
        <function>mssql_execute</function>. 
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       The PHP variable you'll bind the MSSQL parameter to. You can pass it
       by value, or by reference, to retrieve OUTPUT and RETVAL values after
       the procedure execution. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       One of: <constant>SQLTEXT</constant>, 
       <constant>SQLVARCHAR</constant>, <constant>SQLCHAR</constant>,
       <constant>SQLINT1</constant>, <constant>SQLINT2</constant>,
       <constant>SQLINT4</constant>, <constant>SQLBIT</constant>,
       <constant>SQLFLT4</constant>, <constant>SQLFLT8</constant>,
       <constant>SQLFLTN</constant>. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_output</parameter></term>
     <listitem>
      <para>
       Wether the value is an OUTPUT parameter or not. If it's an OUTPUT
       parameter and you don't mention it, it will be treated as a normal
       input parameter and no error will be thrown. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_null</parameter></term>
     <listitem>
      <para>
       Wether the parameter is &null; or not. Passing the &null; value as
       <parameter>var</parameter> will not do the job.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>maxlen</parameter></term>
     <listitem>
      <para>
       Used with char/varchar values. You have to indicate the length of the
       data so if the parameter is a varchar(50), the type must be 
       <constant>SQLVARCHAR</constant> and this value <literal>50</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mssql_bind</function> Example</title>
    <programlisting role="php">
<![CDATA[
<?php

$cn = mssql_connect($DBSERVER, $DBUSER, $DBPASS);
mssql_select_db($DB, $cn);

$sp = mssql_init("WDumpAdd"); // stored proc name

mssql_bind($sp, "@productname", stripslashes($newproduct), SQLVARCHAR, false, false, 150);
mssql_bind($sp, "@quantity", stripslashes($newquantity), SQLVARCHAR, false, false, 50);

mssql_execute($sp);
mssql_close($cn);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mssql_execute</function></member>
    <member><function>mssql_free_statement</function></member>
    <member><function>mssql_init</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
