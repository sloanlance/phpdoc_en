<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.5 $ -->
<!-- Generated by xml_proto.php v2.1. Found in /scripts directory of phpdoc. -->
<section id="pdo.constants">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry>
   <term>
    <constant>PDO_PARAM_NULL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Represents the SQL NULL data type.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_PARAM_INT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Represents the SQL INTEGER data type.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_PARAM_STR</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Represents the SQL CHAR, VARCHAR, or other string data type.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_PARAM_LOB</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Represents the SQL large object data type.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_PARAM_STMT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_LAZY</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Specifies that the fetch method shall return each row as an object with
     variable names that correspond to the column names returned in the result
     set. PDO_FETCH_LAZY creates the object variable names as they are accessed.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_ASSOC</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Specifies that the fetch method shall return each row as an array indexed
     by column name as returned in the corresponding result set.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_NUM</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Specifies that the fetch method shall return each row as an array indexed
     by column number as returned in the corresponding result set, starting at
     column 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_BOTH</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Specifies that the fetch method shall return each row as an array indexed
     by both column name and number as returned in the corresponding result set,
     starting at column 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_OBJ</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Specifies that the fetch method shall return each row as an object with
     property names that correspond to the column names returned in the result
     set.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_BOUND</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Specifies that the fetch method shall return TRUE and assign the values of
     the columns in the result set to the PHP variables to which they were
     bound with the <function>PDOStatement::bindParam</function> or
     <function>PDOStatement::bindColumn</function> methods.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_COLUMN</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Specifies that the fetch method shall return only a single requested
     column from the next row in the result set.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_CLASS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Specifies that the fetch method shall return a new instance of the
     requested class, mapping the columns to named properties in the class.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_INTO</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Specifies that the fetch method shall update an existing instance of the
     requested class, mapping the columns to named properties in the class.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_AUTOCOMMIT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_PREFETCH</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_TIMEOUT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_ERRMODE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_SERVER_VERSION</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_CLIENT_VERSION</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_SERVER_INFO</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_CONNECTION_STATUS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_CASE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Force column names to a specific case specified by the PDO_CASE_*
     constants.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_CURSOR_NAME</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_CURSOR</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_ORACLE_NULLS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_PERSISTENT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERRMODE_SILENT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERRMODE_WARNING</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERRMODE_EXCEPTION</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_CASE_NATURAL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Leave column names as returned by the database driver.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_CASE_LOWER</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara> 
     Force column names to lower case.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_CASE_UPPER</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Force column names to upper case.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_ORI_NEXT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Fetch the next row in the result set. Valid only for scrollable cursors.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_ORI_PRIOR</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Fetch the previous row in the result set. Valid only for scrollable
     cursors.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_ORI_FIRST</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Fetch the first row in the result set. Valid only for scrollable cursors.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_ORI_LAST</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Fetch the last row in the result set. Valid only for scrollable cursors.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_ORI_ABS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Fetch the requested row by row number from the result set. Valid only
     for scrollable cursors.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_FETCH_ORI_REL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Fetch the requested row by relative position from the current position
     of the cursor in the result set. Valid only for scrollable cursors.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_CURSOR_FWDONLY</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Create a PDOStatement object with a forward-only cursor. This may improve 
     the performance of your application but restricts your PDOStatement object
     to fetching one row at a time from the result set in a forward direction.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_CURSOR_SCROLL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Create a PDOStatement object with a scrollable cursor. Pass the
     PDO_FETCH_ORI_* constants to control the rows fetched from the result set.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_CANT_MAP</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_SYNTAX</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_CONSTRAINT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_NOT_FOUND</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_ALREADY_EXISTS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_NOT_IMPLEMENTED</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_MISMATCH</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_TRUNCATED</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_DISCONNECTED</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_NO_PERM</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ERR_NONE</constant>
     (<type>string</type>)
   </term>
   <listitem>
    <simpara> 
     Corresponds to SQLSTATE '00000', meaning that the SQL statement was
     successfully issued with no errors or warnings.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
