<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.7 $ -->
<refentry id="function.PDOStatement-fetchColumn">
 <refnamediv>
  <refname>PDOStatement->fetchColumn()</refname>
  <refpurpose>
   Returns a single column from the next row of a result set
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>PDOStatement</classname></ooclass>
   <methodsynopsis>
    <type>string</type><methodname>fetchColumn</methodname>
    <methodparam choice="opt"><type>int</type><parameter>column_number</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>

  <para>
   Returns a single column from the next row of a result set or &false; if
   there are no more rows.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>column_number</parameter></term>
     <listitem>
      <para>
       0-indexed number of the column you wish to retrieve from the row. If
       no value is supplied, <xref linkend="function.PDOStatement-fetchColumn" />
       fetches the first column.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <xref linkend="function.PDOStatement-fetchColumn" /> returns a single column
   in the next row of a result set.
  </para>
  <warning>
   <para>
    There is no way to return another column from the same row if you
    use <xref linkend="function.PDOStatement-fetchColumn" /> to retrieve data.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Return first column of the next row</title>
    <programlisting role="php">
<![CDATA[
<?php
$sth = $dbh->prepare("SELECT name, colour FROM fruit");
$sth->execute();

/* Fetch the first column from the next row in the result set */
print("Fetch the first column from the next row in the result set:\n");
$result = $sth->fetchColumn();
print("name = $result\n");

print("Fetch the second column from the next row in the result set:\n");
$result = $sth->fetchColumn(1);
print("colour = $result\n");
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Fetch the first column from the next row in the result set:
name = lemon
Fetch the second column from the next row in the result set:
colour = red
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.PDO-query" /></member>
    <member><xref linkend="function.PDOStatement-fetch" /></member>
    <member><xref linkend="function.PDOStatement-fetchAll" /></member>
    <member><xref linkend="function.PDO-prepare" /></member>
    <member><xref linkend="function.PDOStatement-setFetchMode" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
