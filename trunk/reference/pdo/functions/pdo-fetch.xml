<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision -->
<refentry id='function.pdo.fetch'>
 <refnamediv>
  <refname>fetch</refname>
  <refpurpose>Fetches a row from a result set.</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>array</type> <methodname>fetch</methodname>
     <methodparam choice='opt'><type>integer</type>
      <parameter>PDO_FETCH_STYLE</parameter></methodparam>
  </methodsynopsis>
  &warn.experimental.func;
  <para>
   Fetches a row from a result set associated with a Statement object.
  </para>
  <para>
   <parameter>PDO_FETCH_STYLE</parameter> can be one of the following values:
   <itemizedlist>
    <listitem><para>PDO_FETCH_NUM: returns an array indexed by column number
      as returned in your result set, starting at column 0</para></listitem>
    <listitem><para>PDO_FETCH_ASSOC: returns an array indexed by column name
      as returned in your result set
    </para></listitem>
    <listitem><para>
      PDO_FETCH_BOTH (default): returns an array indexed by
      both column name and column number as returned in your result set
    </para></listitem>
    <listitem><para>
      PDO_FETCH_OBJ: returns an anonymous object with property names that
      correspond to the column names returned in your result set
    </para></listitem>
    <listitem><para>
      PDO_FETCH_LAZY: combines PDO_FETCH_BOTH and PDO_FETCH_OBJ, creating
      the object variable names as they are accessed
    </para></listitem>
    <listitem><para>
      PDO_FETCH_BOUND: returns TRUE and assigns the values of the columns in
      your result set to the PHP variables to which they were bound with the
      <function>bindParam</function> method
    </para></listitem>
   </itemizedlist>
  </para>
 </refsect1>
</refentry>

