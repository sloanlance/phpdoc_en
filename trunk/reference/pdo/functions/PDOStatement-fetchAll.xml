<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.6 $ -->
<!-- Generated by xml_proto.php v2.1. Found in /scripts directory of phpdoc. -->
  <refentry id="function.PDOStatement-fetchAll">
   <refnamediv>
    <refname>PDOStatement::fetchAll</refname>
    <refpurpose>
     Returns an array containing all of the result set rows
    </refpurpose>
   </refnamediv>
   <refsect1 role="description">
    &reftitle.description;
    <methodsynopsis>
     <type>array</type><methodname>PDOStatement::fetchAll</methodname>
     <methodparam choice="opt"><type>int</type><parameter>fetch_style</parameter></methodparam>
    </methodsynopsis>

    &warn.experimental.func;
   </refsect1>

   <refsect1 role="parameters">
    &reftitle.parameters;
    <para>
     <variablelist>
      <varlistentry>
       <term><parameter>fetch_style</parameter></term>
       <listitem>
        <para>
         Controls the contents of the returned array as documented in
         <function>PDOStatement::fetch</function>. Defaults to
         <literal>PDO_FETCH_BOTH</literal>.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </refsect1>

   <refsect1 role="returnvalues">
    &reftitle.returnvalues;
    <para>
     <function>PDOStatement::fetchAll</function> returns an array containing
     all of the remaining rows in the result set. The array represents each
     row as either an array of column values or an object with properties
     corresponding to each column name.
    </para>
    <para>
     Using this method to fetch large result sets will result in a heavy
     demand on system and possibly network resources. Rather than retrieving
     all of the data and manipulating it in PHP, consider using the database
     server to manipulate the result sets. For example, use the WHERE and
     SORT BY clauses in SQL to restrict results before retrieving and
     processing them with PHP.
    </para>
   </refsect1>

   <refsect1 role="examples">
    &reftitle.examples;
    <para>
     <example><title>Fetch all remaining rows in a result set</title>
      <programlisting role="php">
<![CDATA[
<?php
$sth = $dbh->prepare("SELECT name, colour FROM fruit");
$sth->execute();

/* Fetch all of the remaining rows in the result set */
print("Fetch all of the remaining rows in the result set:\n");
$result = $sth->fetchAll();
print_r($result);
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
Fetch all of the remaining rows in the result set:
Array
(
    [0] => Array
        (
            [NAME] => pear
            [0] => pear
            [COLOUR] => green
            [1] => green
        )

    [1] => Array
        (
            [NAME] => watermelon
            [0] => watermelon
            [COLOUR] => pink
            [1] => pink
        )

)
]]>
      </screen>
     </example>
    </para>
   </refsect1>

   <refsect1 role="seealso">
    &reftitle.seealso;
    <para>
     <simplelist>
      <member><function>PDO::query</function></member>
      <member><function>PDOStatement::fetch</function></member>
      <member><function>PDOStatement::fetchColumn</function></member>
      <member><function>PDOStatement::prepare</function></member>
      <member><function>PDOStatement::setFetchMode</function></member>
     </simplelist>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
