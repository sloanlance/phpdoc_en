<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<refentry xml:id="function.oci-parse" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_parse</refname>
  <refpurpose>Prepares an Oracle statement for execution</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>oci_parse</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>sql_text</parameter></methodparam>
  </methodsynopsis>
  <para>
   Prepares the <parameter>sql_text</parameter>using
   <parameter>connection</parameter> and returns the statement identifier,
   which can be used with <function>oci_bind_by_name</function>, 
   <function>oci_execute</function> and other functions.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       An Oracle connection identifier, returned by 
       <function>oci_connect</function>, <function>oci_pconnect</function>, or <function>oci_new_connect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sql_text</parameter></term>
     <listitem>
      <para>
       The SQL or PL/SQL statement.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a statement handle on success, or &false; on error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>oci_parse</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

$connection = oci_connect("hr", "welcome", "localhost/XE");

$statement = oci_parse($connection, "SELECT * FROM employees");
oci_execute($statement);

echo "<table border='1'>\n";
while ($row = oci_fetch_array($statement, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>".($item!==null?htmlentities($item, ENT_QUOTES):"&nbsp;")."</td>\n";
    }
    echo "</tr>\n";
}
echo "</table>\n";

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    This function <emphasis>does not</emphasis> validate 
    <parameter>sql_text</parameter>. The only way to find out if
    <parameter>sql_text</parameter> is a valid SQL or PL/SQL statement
    is to execute it.
   </para>
  </note>
  <note>
   <para>
    In PHP versions before 5.0.0 you must
    use <function>ociparse</function> instead.  &oci.name.compat.note;
   </para>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
