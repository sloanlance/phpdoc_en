<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
  <refentry id="function.oci-connect">
   <refnamediv>
    <refname>oci_connect</refname>
    <refpurpose>Establishes a connection to the Oracle server</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>oci_connect</methodname>
      <methodparam><type>string</type><parameter>username</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>db</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>session_mode</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>oci_connect</function> returns a connection identifier
     needed for most other OCI calls.  The optional third parameter
     can either contain the name of the local Oracle instance or the
     name of the entry in <filename>tnsnames.ora</filename> to which 
     you want to connect.
     If the optional third parameter is not specified, PHP uses the
     environment variables <constant>ORACLE_SID</constant> (Oracle 
     instance) or <constant>TWO_TASK</constant>
     (<filename>tnsnames.ora</filename>) to determine which database 
     to connect to.
    </para>
    <para>
     Parameter <parameter>session_mode</parameter> is available since version
     1.1 and accepts the following values: <constant>OCI_DEFAULT</constant>,
     <constant>OCI_SYSOPER</constant> and <constant>OCI_SYSDBA</constant>.
     If either <constant>OCI_SYSOPER</constant> or
     <constant>OCI_SYSDBA</constant> were specified,
     <function>oci_connect</function> will try to establish privileged
     connection using external credentials. Privileged connections are
     disabled by default. To enable them you need to set <link
      linkend="ini.oci8.privileged_connect">oci8.privileged_connect</link> 
     to On.
    </para>
    <note>
     <simpara>
      If you're using PHP with Oracle Instant Client, you can use easy connect
      naming method described here:
      <ulink url="&url.oracle.oic.connect;">&url.oracle.oic.connect;</ulink>.
      Basically this means you can specify "//db_host[:port]/database_name" 
      as database name. But if you want to use the old way of naming you
      <emphasis>must</emphasis> set either <constant>ORACLE_HOME</constant> or
      <constant>TNS_ADMIN</constant>.
     </simpara>
    </note>
    <note>
     <simpara>
      The second and subsequent calls to <function>oci_connect</function> 
      with the same parameters will return the connection handle returned 
      from the first call. This means that queries issued against one 
      handle are also applied to the other handles, because they are the 
      <emphasis>same</emphasis> handle. This behaviour is demonstrated in 
      Example 1 below. If you require two handles to be transactionally 
      isolated from each other, you should use
      <function>oci_new_connect</function> instead.
     </simpara>
    </note>
    &oci.charset;
    <para>
     <example>
      <title><function>oci_connect</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
echo "<pre>";
$db = "";

$c1 = oci_connect("scott", "tiger", $db);
$c2 = oci_connect("scott", "tiger", $db);

function create_table($conn) 
{
  $stmt = oci_parse($conn, "create table scott.hallo (test varchar2(64))");
  oci_execute($stmt);
  echo $conn . " created table\n\n";
}

function drop_table($conn) 
{
  $stmt = oci_parse($conn, "drop table scott.hallo");
  oci_execute($stmt);
  echo $conn . " dropped table\n\n";
}

function insert_data($conn) 
{
  $stmt = oci_parse($conn, "insert into scott.hallo 
            values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . " inserted hallo\n\n";
}

function delete_data($conn) 
{
  $stmt = oci_parse($conn, "delete from scott.hallo");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . " deleted hallo\n\n";
}

function commit($conn) 
{
  oci_commit($conn);
  echo $conn . " committed\n\n";
}

function rollback($conn) 
{
  oci_rollback($conn);
  echo $conn . " rollback\n\n";
}

function select_data($conn) 
{
  $stmt = oci_parse($conn, "select * from scott.hallo");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn."----selecting\n\n";
  while (oci_fetch($stmt)) {
    echo $conn . " [" . oci_result($stmt, "TEST") . "]\n\n";
  }
  echo $conn . "----done\n\n";
}

create_table($c1);
insert_data($c1);   // Insert a row using c1
insert_data($c2);   // Insert a row using c2

select_data($c1);   // Results of both inserts are returned
select_data($c2);   

rollback($c1);      // Rollback using c1

select_data($c1);   // Both inserts have been rolled back
select_data($c2);   

insert_data($c2);   // Insert a row using c2
commit($c2);        // Commit using c2

select_data($c1);   // Result of c2 insert is returned

delete_data($c1);   // Delete all rows in table using c1
select_data($c1);   // No rows returned
select_data($c2);   // No rows returned
commit($c1);        // Commit using c1

select_data($c1);   // No rows returned
select_data($c2);   // No rows returned

drop_table($c1);
echo "</pre>";
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <function>oci_connect</function> returns &false; if an error occured.
    </para>
    <note>
     <para>
      In PHP versions before 5.0.0 you must use <function>ocilogon</function> instead. 
      This name still can be used, it was left as the alias of
      <function>oci_connect</function> for downwards compatability. 
      This, however, is deprecated and not recommended.
     </para>
    </note>    
    <simpara>
     See also <function>oci_pconnect</function>,
     <function>oci_new_connect</function> and 
     <function>oci_close</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

