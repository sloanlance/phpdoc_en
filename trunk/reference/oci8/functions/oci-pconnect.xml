<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<refentry id="function.oci-pconnect">
 <refnamediv>
  <refname>oci_pconnect</refname>
  <refpurpose>Connect to an Oracle database using a persistent connection</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>oci_pconnect</methodname>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>db</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>session_mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Creates a persistent connection to an Oracle server and logs on. 
  </para>
  <para>
   Persistent connections are cached and re-used between requests, resulting
   in reduced overhead on each page load; a typical PHP application will have
   a single persistent connection open against an  Oracle server per Apache
   child process (or PHP FastCGI/CGI process). See the <link
   linkend="features.persistent-connections">Persistent Database
   Connections</link> section for more information.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       The Oracle user name.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       The password for <parameter>username</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>db</parameter></term>
     <listitem>
      <para>
       This optional parameter can either contain the name of the local
       Oracle instance or the name of the entry in
       <filename>tnsnames.ora</filename>.
      </para>
      <para>
       If the not specified, PHP uses environment variables
       <literal>ORACLE_SID</literal> and <literal>TWO_TASK</literal> to
       determine the name of local Oracle instance and location of 
       <filename>tnsnames.ora</filename> accordingly.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charset</parameter></term>
     <listitem>
      &oci.charset;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>session_mode</parameter></term>
     <listitem>
      <para>
       This parameter is available since version 1.1 and accepts the
       following values: <constant>OCI_DEFAULT</constant>,
       <constant>OCI_SYSOPER</constant> and <constant>OCI_SYSDBA</constant>.
       If either <constant>OCI_SYSOPER</constant> or
       <constant>OCI_SYSDBA</constant> were specified, this function will try
       to establish privileged connection using external credentials. 
       Privileged connections are disabled by default. To enable them you
       need to set <link
        linkend="ini.oci8.privileged_connect">oci8.privileged_connect</link>
       to <literal>On</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a connection identifier or &false; on error.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Starting with version 1.1 of the oci8 extension, the lifetime and
    maximum amount of persistent Oracle connections can be tuned by setting
    the following configuration values: <link
     linkend="ini.oci8.persistent_timeout">oci8.persistent_timeout</link>,
    <link linkend="ini.oci8.ping_interval">oci8.ping_interval</link> and
    <link linkend="ini.oci8.max_persistent">oci8.max_persistent</link>.
   </simpara>
  </note>
  <note>
   <simpara>
    If you're using PHP with Oracle Instant Client, you can use easy connect
    naming method described here:
    <ulink url="&url.oracle.oic.connect;">&url.oracle.oic.connect;</ulink>.
    Basically this means you can specify "//db_host[:port]/database_name"
    as database name. But if you want to use the old way of naming you
    <emphasis>must</emphasis> set either <constant>ORACLE_HOME</constant> or
    <constant>TNS_ADMIN</constant>.
   </simpara>
  </note>
  <note>
   <para>
    In PHP versions before 5.0.0 you must use <function>ociplogon</function> instead.
    This name still can be used, it was left as alias of
    <function>oci_pconnect</function> for downwards compatability.
    This, however, is deprecated and not recommended.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>oci_connect</function></member>
    <member><function>oci_new_connect</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
