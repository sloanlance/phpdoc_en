<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./en/functions/session.xml, last change in rev 1.2 -->
  <refentry id="function.session-register">
   <refnamediv>
    <refname>session_register</refname>
    <refpurpose>
     Register one or more variables with the current session
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>session_register</methodname>
      <methodparam><type>mixed</type><parameter>name</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>session_register</function> accepts a variable number of
     arguments, any of which can be either a string holding the name of a
     variable or an array consisting of variable names or other arrays. For
     each name, <function>session_register</function> registers the global
     variable with that name in the current session.
    </para>
    <caution>
     <para>
      This registers a <emphasis>global</emphasis> variable. If you want to
      register a session variable inside a function, you need to make sure to
      make it global using <function>global</function> or use the session
      arrays as noted below.
     </para>
    </caution>
    <caution>
     <para>
      If you are using
      <varname>$_SESSION</varname> (or <varname>$HTTP_SESSION_VARS</varname>),
      do not use <function>session_register</function>,
      <function>session_is_registered</function> and
      <function>session_unregister</function>.
     </para>
    </caution>
    <para>
     This function returns &true; when all of the variables are successfully
     registered with the session.
    </para>
    <para>
     If <function>session_start</function> was not called before this function
     is called, an implicit call to <function>session_start</function> with no
     parameters will be made.
    </para>
    <para>
     You can also create a session variable by simply setting the
     appropriate member of the <varname>$_SESSION</varname>
     or <varname>$HTTP_SESSION_VARS</varname> (PHP &lt; 4.1.0) array.
     <informalexample>
      <programlisting role="php">
<![CDATA[
$barney = "A big purple dinosaur.";
session_register("barney");

$_SESSION["zim"] = "An invader from another planet.";

# The old way was to use $HTTP_SESSION_VARS
$HTTP_SESSION_VARS["spongebob"] = "He's got square pants.";
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      It is not currently possible to register resource variables in a
      session.  For example, you can not create a connection to a
      database and store the connection id as a session variable and
      expect the connection to still be valid the next time the
      session is restored.  PHP functions that return a resource are
      identified by having a return type of
      <literal>resource</literal> in their function definitions.  A
      list of functions that return resources are available in the
      <link linkend="resource">resource types</link> appendix.
     </para>
     <para>
      If <varname>$_SESSION</varname> (or
      <varname>$HTTP_SESSION_VARS</varname> for PHP 4.0.6 or less) is
      used, assign variable to
      <varname>$_SESSION</varname>. i.e. $_SESSION['var'] = 'ABC';
     </para>
    </note>
    <para>
     See also <function>session_is_registered</function> and
     <function>session_unregister</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
