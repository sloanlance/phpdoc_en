<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/http.xml, last change in rev 1.2 -->
  <refentry id="function.setcookie">
   <refnamediv>
    <refname>setcookie</refname>
    <refpurpose>Send a cookie</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>setcookie</methodname>
      <methodparam><type>string</type><parameter>name</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>value</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>expire</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>path</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>domain</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>secure</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>setcookie</function> defines a cookie to be sent along
     with the rest of the header information.  Cookies must be sent
     <emphasis>before</emphasis> any other headers are sent (this is a
     restriction of cookies, not PHP). This requires you to place
     calls to this function before any <literal>&lt;html></literal> or
     <literal>&lt;head></literal> tags.
    </para>
    <para>
     All the arguments except the <parameter>name</parameter> argument
     are optional.  If only the name argument is present, the cookie
     by that name will be deleted from the remote client.  You may
     also replace any argument with an empty string
     (<emphasis>&quot;&quot;</emphasis>) in order to skip that
     argument.  The <parameter>expire</parameter> and
     <parameter>secure</parameter> arguments are integers and cannot
     be skipped with an empty string.  Use a zero
     (<emphasis>0</emphasis>) instead.  The
     <parameter>expire</parameter> argument is a regular Unix time
     integer as returned by the <function>time</function> or
     <function>mktime</function> functions.  The
     <parameter>secure</parameter> indicates that the cookie should
     only be transmitted over a secure HTTPS connection.
    </para>
    <para>
     Once the cookies have been set they can be accessed on the next page load
     with the <varname>$_COOKIE</varname> array (which used to be called
     <varname>$HTTP_COOKIE_VARS</varname> in PHP versions prior to 4.1.0).
    </para>
    <para>
     Common Pitfalls:
     <itemizedlist>
      <listitem>
       <simpara>
        Cookies will not become visible until the next loading of a page that 
        the cookie should be visible for.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Cookies must be deleted with the same parameters as they were set with.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <simpara>
     In PHP 3, multiple calls to <function>setcookie</function> in the same
     script will be performed in reverse order. If you are trying to
     delete one cookie before inserting another you should put the
     insert before the delete. In PHP 4, multiple calls to
     <function>setcookie</function> are performed in the order called.
    </simpara>
    <para>
     Some examples follow how to send cookies:
     <example>
      <title><function>setcookie</function> send examples</title>
      <programlisting role="php">
<![CDATA[
setcookie ("TestCookie", $value);
setcookie ("TestCookie", $value,time()+3600);  /* expire in 1 hour */
setcookie ("TestCookie", $value,time()+3600, "/~rasmus/", ".utoronto.ca", 1);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     When deleting a cookie you should assure that the expiration date
     is in the past, to trigger the removal mechanism in your browser.
     Examples follow how to delete cookies sent in previous example:
     <example>
      <title><function>setcookie</function> delete examples</title>
      <programlisting role="php">
<![CDATA[
// set the expiration date to one hour ago
setcookie ("TestCookie", "", time() - 3600);
setcookie ("TestCookie", "", time() - 3600, "/~rasmus/", ".utoronto.ca", 1);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Note that the value portion of the cookie will automatically be
     urlencoded when you send the cookie, and when it is received, it
     is automatically decoded and assigned to a variable by the same
     name as the cookie name.  To see the contents of our test
     cookie in a script, simply use one of the following examples:
     <informalexample>
      <programlisting role="php">
<![CDATA[
echo $TestCookie;
echo $_COOKIE["TestCookie"];
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     You may also set array cookies by using array notation in the
     cookie name. This has the effect of setting as many cookies as
     you have array elements, but when the cookie is received by your
     script, the values are all placed in an array with the cookie's
     name:
     <informalexample>
      <programlisting role="php">
<![CDATA[
setcookie ("cookie[three]", "cookiethree");
setcookie ("cookie[two]", "cookietwo");
setcookie ("cookie[one]", "cookieone");
if (isset ($cookie)) {
    while (list ($name, $value) = each ($cookie)) {
        echo "$name == $value<br>\n";
    }
}
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     For more information on cookies, see Netscape's cookie
     specification at <ulink
     url="&spec.cookies;">&spec.cookies;</ulink>.
    </para>
    <simpara>
     Microsoft Internet Explorer 4 with Service Pack 1 applied does
     not correctly deal with cookies that have their path parameter
     set.
    </simpara>
    <simpara>
     Netscape Communicator 4.05 and Microsoft Internet Explorer 3.x
     appear to handle cookies incorrectly when the path and time
     are not set.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
