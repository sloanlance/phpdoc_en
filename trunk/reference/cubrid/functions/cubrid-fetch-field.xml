<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="function.cubrid-fetch-field" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_fetch_field</refname>
  <refpurpose>Returns an object with certain properties</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>cubrid_fetch_field</methodname>
   <methodparam><type>resource</type><parameter>req_identifier</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>field_offset = 0</parameter></methodparam>
  </methodsynopsis>
  <para>
    This function returns an object with certain properties of the specific column. The properties of the object are:
  </para>
  <para>
    <variablelist>
    <varlistentry>
  <term><parameter>name</parameter></term>
  <listitem><para>column name</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>table</parameter></term>
  <listitem><para>name of the table that the column belongs to</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>def</parameter></term>
  <listitem><para>default value of the column</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>max_length</parameter></term>
  <listitem><para>maximum length of the column</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>not_null</parameter></term>
  <listitem><para>1 if the column cannot be NULL</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>unique_key</parameter></term>
  <listitem><para>1 if the column is an unique key</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>multiple_key</parameter></term>
  <listitem><para>1 if the column is a non-unique key</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>numeri</parameter></term>
  <listitem><para>1 if the column is numeric</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>type</parameter></term>
  <listitem><para>the type of the column</para></listitem>
   </varlistentry>
  </variablelist>
  
  </para>
 </refsect1>

 <refsect1 role="parameters">
 &reftitle.parameters;
 <para>
  <variablelist>
    <varlistentry>
  <term><parameter>req_identifier</parameter></term>
  <listitem><para>This is the request identifier.</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>field_offset</parameter></term>
  <listitem><para>The numerical field offset. If the field offset is not specified, the next field (that was not yet retrieved by this function) is retrieved. The <parameter>field_offset</parameter> starts at 0.</para></listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    Object with certain properties of the specific column, when process is successful.
  </para>
   <para>
    &false; on failure.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>cubrid_fetch_field</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
    $link = cubrid_connect("localhost", 30000, "demodb2", "dba", "");
    if (!$link)
    {
        die('Could not connect.');
    }
    $query = 'SELECT name, address, salary FROM employees';
    $result = cubrid_execute($link, $query);
    if ($result) 
    {
        echo "Fetching column 0 fields: ";
        $meta = cubrid_fetch_field($result, 0);
        if (!$meta) 
        {
            echo "No information available<br />\n";
        }
        echo "<pre>
        max_length:        $meta->max_length
        multiple_key:        $meta->multiple_key
        name:            $meta->name
        not_null:        $meta->not_null
        numeric:        $meta->numeric
        table:            $meta->table
        type:            $meta->type
        default:        $meta->def
        unique_key:        $meta->unique_key
        </pre>";
        cubrid_close_request($result); 
    }
?>
]]>
   </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Result:
Fetching column 0 fields: 
        max_length:        13
        multiple_key:    1
        name:            name
        not_null:        1
        numeric:        0
        table:        employees
        type:            STRING
        default:        [noname]
        unique_key:        0
]]>
    </screen>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
