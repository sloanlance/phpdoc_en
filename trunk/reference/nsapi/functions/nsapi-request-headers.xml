<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- splitted from ./en/functions/nsapi.xml, last change in rev 1.2 -->
  <refentry id="function.nsapi-request-headers">
   <refnamediv>
    <refname>nsapi_request_headers</refname>
    <refpurpose>Fetch all HTTP request headers</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>nsapi_request_headers</methodname>
      <void/>
     </methodsynopsis>
    <para>
     <function>nsapi_request_headers</function> returns an associative
     array of all the HTTP headers in the current request.  This is only
     supported when PHP runs as a <productname>NSAPI</productname>
     module.
    </para>
    <para>
     <example>
      <title><function>nsapi_request_headers</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
$headers = nsapi_request_headers();

foreach ($headers as $header => $value) {
    echo "$header: $value <br />\n";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Prior to PHP 4.3.3, <function>getallheaders</function> was only available for the Apache servers.  After PHP 4.3.3,
      <function>getallheaders</function> is an alias for
      <function>nsapi_request_headers</function> if you use the NSAPI module.
     </para>
    </note>
    <note>
     <para>
      You can also get at the value of the common CGI variables by
      reading them from the <literal>$_SERVER</literal> superglobal, which works whether or not
      you are using PHP as a <productname>NSAPI</productname> module.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
