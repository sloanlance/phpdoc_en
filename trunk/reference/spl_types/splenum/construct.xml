<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.1 $ -->
<refentry xml:id="splenum.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SplEnum::__construct</refname>
  <refpurpose>Constructs an enumeger object type</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <methodname>SplEnum::__construct</methodname>
   <void />
  </constructorsynopsis>
  <para>
   This constructor is used to set the value and the strictness of the "Enum"
   Object.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>input</parameter></term>
     <listitem>
      <para>
       The <parameter>input</parameter> parameter accepts an <type>enumeger</type>
       It will throw an UnexpectedValueException if you pass anything else.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>strict</parameter></term>
     <listitem>
      <para>
       This is a <type>boolean</type> to indicate if you want the object to
       be strict or not. If it's value can be changed or not.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>SplEnum::__construct</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

class EnumOne extends SplEnum
{
    const __default = 1;
}

class EnumTwo extends SplEnum
{
    const __default = 2;
}

class EnumThree extends SplEnum
{
    const __default = 3;
}

$enumOne   = new EnumOne();
$enumTwo   = new EnumTwo();
$enumThree = new EnumThree();


echo 'Enum one  : ' . $enumOne   . PHP_EOL;
echo 'Enum two  : ' . $enumTwo   . PHP_EOL;
echo 'Enum three: ' . $enumThree . PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Enum one  : 1
Enum two  : 2
Enum three: 3
]]>
    </screen>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
