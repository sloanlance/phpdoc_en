<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<!-- splitted from ./en/functions/errorfunc.xml, last change in rev 1.1 -->
  <refentry id="function.error-log">
   <refnamediv>
    <refname>error_log</refname>
    <refpurpose>Send an error message somewhere</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>int</type><methodname>error_log</methodname>
      <methodparam><type>string</type><parameter>message</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>message_type</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>destination</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>extra_headers</parameter></methodparam>
     </methodsynopsis>
    <para>
     Sends an error message to the web server's error log, a
     <acronym>TCP</acronym> port or to a file.  The first parameter,
     <parameter>message</parameter>, is the error message that should be
     logged.  The second parameter, <parameter>message_type</parameter> says
     where the message should go:
     <table>
      <title><function>error_log</function> log types</title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>0</entry>
         <entry>
          <parameter>message</parameter> is sent to PHP's system logger, using
          the Operating System's system logging mechanism or a file, depending
          on what the <link linkend="ini.error-log">error_log</link>
          configuration directive is set to.  This is the default option.
         </entry>
        </row>
        <row>
         <entry>1</entry>
         <entry>
          <parameter>message</parameter> is sent by email to the address in
          the <parameter>destination</parameter> parameter.  This is the only
          message type where the fourth parameter,
          <parameter>extra_headers</parameter> is used.  This message type
          uses the same internal function as <function>mail</function> does.
         </entry>
        </row>
        <row>
         <entry>2</entry>
         <entry>
          <parameter>message</parameter> is sent through the PHP debugging
          connection.  This option is only available if <link
          linkend="configure.enable-debugger">remote debugging has
          been enabled</link>.  In this case, the
          <parameter>destination</parameter> parameter specifies the host name
          or IP address and optionally, port number, of the socket receiving
          the debug information.
         </entry>
        </row>
        <row>
         <entry>3</entry>
         <entry>
          <parameter>message</parameter> is appended to the file
          <parameter>destination</parameter>.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <note>
     <simpara>
      When explicitly specifying the <parameter>message_type</parameter> as
      <literal>3</literal>, a newline is not automatically added to the end of
      the <parameter>message</parameter> string.
     </simpara>
    </note>
    <warning>
     <para>
      Remote debugging via TCP/IP is a PHP 3 feature that is
      <emphasis>not</emphasis> available in PHP 4.
     </para>
    </warning>
    <para>
     <example role="php">
      <title><function>error_log</function> examples</title>
      <programlisting role="php">
<![CDATA[
<?php
// Send notification through the server log if we can not
// connect to the database.
if (!Ora_Logon($username, $password)) {
    error_log("Oracle database not available!", 0);
}

// Notify administrator by email if we run out of FOO
if (!($foo = allocate_new_foo())) {
    error_log("Big trouble, we're all out of FOOs!", 1,
               "operator@example.com");
}

// other ways of calling error_log():
error_log("You messed up!", 2, "127.0.0.1:7000");
error_log("You messed up!", 2, "loghost");
error_log("You messed up!", 3, "/var/tmp/my-errors.log");
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
