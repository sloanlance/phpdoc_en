<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.strspn">
   <refnamediv>
    <refname>strspn</refname>
    <refpurpose>
     Find length of initial segment matching mask
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>strspn</methodname>
      <methodparam><type>string</type><parameter>str1</parameter></methodparam>
      <methodparam><type>string</type><parameter>str2</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>start</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Returns the length of the initial segment of
     <parameter>str1</parameter> which consists entirely of characters
     in <parameter>str2</parameter>.
    </simpara>
    <para>
     The line of code:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
$var = strspn("42 is the answer, what is the question ...", "1234567890");
?>
]]>
      </programlisting>
     </informalexample>
     will assign 2 to <varname>$var</varname>, because the string "42" will
     be the longest segment containing characters from "1234567890".
    </para>
    <para>
     Additionally it accepts two optional integer
     parameters that can be used to define the starting position
     and the length of the string to examine.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
echo strspn("foo", "o", 1, 2); // 2
?>
]]>
      </programlisting>
     </informalexample>
    </para>

    &note.bin-safe;

    <simpara>
     See also <function>strcspn</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
