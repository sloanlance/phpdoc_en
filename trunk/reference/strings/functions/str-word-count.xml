<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
  <refentry id="function.str-word-count">
   <refnamediv>
    <refname>str_word_count</refname>
    <refpurpose>
     Return information about words used in a string
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>mixed</type><methodname>str_word_count</methodname>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>format</parameter></methodparam>
     </methodsynopsis>
    <para>
     Counts the number of words inside <parameter>string</parameter>. 
     If the optional <parameter>format</parameter> is not specified, then 
     the return value will be an integer representing the number of words 
     found. In the event the <parameter>format</parameter> is specified, the return
     value will be an array, content of which is dependent on the 
     <parameter>format</parameter>. The possible value for the 
     <parameter>format</parameter> and the resultant outputs are listed below.
     <itemizedlist>
      <listitem>
       <simpara>
        1 - returns an array containing all the words found inside the
        <parameter>string</parameter>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        2 - returns an associative array, where the key is the numeric 
        position of the word inside the <parameter>string</parameter> and 
        the value is the actual word itself.
       </simpara>
      </listitem> 
     </itemizedlist>
    </para>
    <para>
     For the purpose of this function, 'word' is defined as a locale dependent
     string containing alphabetic characters, which also may contain, but not start
     with &quot;'&quot; and &quot;-&quot; characters.
    </para>
    <para>
     <example>
      <title>Example uses for <function>str_word_count</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$str = "Hello friend, you're
        looking          good today!";

$a   = str_word_count($str, 1);
$b   = str_word_count($str, 2);
$c   = str_word_count($str);

print_r($a);
print_r($b);
print $c;

/* Output may look like:

Array
(
    [0] => Hello
    [1] => friend
    [2] => you're
    [3] => looking
    [4] => good
    [5] => today
)

Array
(
    [0] => Hello
    [6] => friend
    [14] => you're
    [29] => looking
    [46] => good
    [51] => today
)

6

*/
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     See also <function>explode</function>,
     <function>preg_split</function>,
     <function>split</function>,
     <function>count_chars</function>, and
     <function>substr_count</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
