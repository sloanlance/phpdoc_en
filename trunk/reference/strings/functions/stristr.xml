<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.8 -->
<refentry id="function.stristr">
 <refnamediv>
  <refname>stristr</refname>
  <refpurpose>Case-insensitive <function>strstr</function></refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>string</type><methodname>stristr</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>string</type><parameter>needle</parameter></methodparam>
  </methodsynopsis>
  <para>
   Returns all of <parameter>haystack</parameter> from the first
   occurrence of <parameter>needle</parameter> to the end.
   <parameter>needle</parameter> and <parameter>haystack</parameter>
   are examined in a case-insensitive manner.
  </para>
  <para>
   If <parameter>needle</parameter> is not found, returns &false;.
  </para>
  <para>
   If <parameter>needle</parameter> is not a string, it is converted
   to an integer and applied as the ordinal value of a character.
  </para>
  <para>
   <example>
    <title><function>stristr</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
  $email = 'USER@EXAMPLE.com';
  echo stristr($email, 'e');
// outputs ER@EXAMPLE.com
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Testing if a string is found or not</title>
    <programlisting role="php">
<![CDATA[
<?php
  $string = 'Hello World!';
  if(stristr($string, 'earth') === FALSE) {
    echo '"earth" not found in string';
  }
// outputs: "earth" not found in string
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Using a non "string" needle</title>
    <programlisting role="php">
<![CDATA[
<?php
  $string = 'APPLE';
  echo stristr($string, 97); // 97 = lowercase a
// outputs: APPLE
?>
]]>
    </programlisting>
   </example>
  </para>

  &note.bin-safe;

  <para>
   See also
   <function>strstr</function>,
   <function>strrchr</function>,
   <function>substr</function>, and
   <function>preg_match</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
