<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.68 -->
  <refentry id="function.localeconv">
   <refnamediv>
    <refname>localeconv</refname>
    <refpurpose>Get numeric formatting information</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>localeconv</methodname>
      <void/>
     </methodsynopsis>
    <para>
     Returns an associative array containing localized numeric and
     monetary formatting information.
    </para>
    <para>
     <function>localeconv</function> returns data based upon the current locale
     as set by <function>setlocale</function>.  The associative array that is
     returned contains the following fields:
     <informaltable >
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Array element</entry>
         <entry>Description</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>decimal_point</entry>
         <entry>Decimal point character</entry>
        </row>
        <row>
         <entry>thousands_sep</entry>
         <entry>Thousands separator</entry>
        </row>
        <row>
         <entry>grouping</entry>
         <entry>Array containing numeric groupings</entry>
        </row>
        <row>
         <entry>int_curr_symbol</entry>
         <entry>International currency symbol (i.e. USD)</entry>
        </row>
        <row>
         <entry>currency_symbol</entry>
         <entry>Local currency symbol (i.e. $)</entry>
        </row>
        <row>
         <entry>mon_decimal_point</entry>
         <entry>Monetary decimal point character</entry>
        </row>
        <row>
         <entry>mon_thousands_sep</entry>
         <entry>Monetary thousands separator</entry>
        </row>
        <row>
         <entry>mon_grouping</entry>
         <entry>Array containing monetary groupings</entry>
        </row>
        <row>
         <entry>positive_sign</entry>
         <entry>Sign for positive values</entry>
        </row>
        <row>
         <entry>negative_sign</entry>
         <entry>Sign for negative values</entry>
        </row>
        <row>
         <entry>int_frac_digits</entry>
         <entry>International fractional digits</entry>
        </row>
        <row>
         <entry>frac_digits</entry>
         <entry>Local fractional digits</entry>
        </row>
        <row>
         <entry>p_cs_precedes</entry>
         <entry>
          &true; if currency_symbol precedes a positive value, &false;
          if it succeeds one
         </entry>
        </row>
        <row>
         <entry>p_sep_by_space</entry>
         <entry>
          &true; if a space separates currency_symbol from a positive
          value, &false; otherwise
         </entry>
        </row>
        <row>
         <entry>n_cs_precedes</entry>
         <entry>
          &true; if currency_symbol precedes a negative value, &false;
          if it succeeds one
         </entry>
        </row>
        <row>
         <entry>n_sep_by_space</entry>
         <entry>
          &true; if a space separates currency_symbol from a negative
          value, &false; otherwise
         </entry>
        </row>
        <row valign="top">
         <entry>p_sign_posn</entry>
         <entry>
	   <simplelist columns="2" type="horiz">
	    <member>0</member>
	    <member>
	     Parentheses surround the quantity and currency_symbol</member>
	    <member>1</member>
	    <member>
	     The sign string precedes the quantity and currency_symbol
	    </member>
	    <member>2</member>
	    <member>
	     The sign string succeeds the quantity and currency_symbol
	    </member>
	    <member>3</member>
	    <member>
	     The sign string immediately precedes the currency_symbol
	    </member>
	    <member>4</member>
	    <member>
	     The sign string immediately succeeds the currency_symbol
	    </member>
	   </simplelist>
	 </entry>
	</row>
	<row valign="top">
	 <entry>n_sign_posn</entry>
	 <entry>
	   <simplelist columns="2" type="horiz">
	    <member>0</member>
	    <member>
	     Parentheses surround the quantity and currency_symbol
	    </member>
	    <member>1</member>
	    <member>
	     The sign string precedes the quantity and currency_symbol
	    </member>
	    <member>2</member>
	    <member>
	     The sign string succeeds the quantity and currency_symbol
	    </member>
	    <member>3</member>
	    <member>
	     The sign string immediately precedes the currency_symbol
	    </member>
	    <member>4</member>
	    <member>The sign string immediately succeeds the currency_symbol
	    </member>
	   </simplelist>
	 </entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     The grouping fields contain arrays that define the way numbers
     should be grouped.  For example, the grouping field for the en_US
     locale, would contain a 2 item array with the values 3 and 3.
     The higher the index in the array, the farther left the grouping
     is.  If an array element is equal to CHAR_MAX, no further
     grouping is done.  If an array element is equal to 0, the
     previous element should be used.
    </para>
    <example>
     <title><function>localeconv</function> example</title>
     <programlisting role="php">
<![CDATA[
<?php
setlocale(LC_ALL, "en_US");

$locale_info = localeconv();

echo "<PRE>\n";
echo "--------------------------------------------\n";
echo "  Monetary information for current locale:  \n";
echo "--------------------------------------------\n\n";

echo "int_curr_symbol:   {$locale_info["int_curr_symbol"]}\n";
echo "currency_symbol:   {$locale_info["currency_symbol"]}\n";
echo "mon_decimal_point: {$locale_info["mon_decimal_point"]}\n";
echo "mon_thousands_sep: {$locale_info["mon_thousands_sep"]}\n";
echo "positive_sign:     {$locale_info["positive_sign"]}\n";
echo "negative_sign:     {$locale_info["negative_sign"]}\n";
echo "int_frac_digits:   {$locale_info["int_frac_digits"]}\n";
echo "frac_digits:       {$locale_info["frac_digits"]}\n";
echo "p_cs_precedes:     {$locale_info["p_cs_precedes"]}\n";
echo "p_sep_by_space:    {$locale_info["p_sep_by_space"]}\n";
echo "n_cs_precedes:     {$locale_info["n_cs_precedes"]}\n";
echo "n_sep_by_space:    {$locale_info["n_sep_by_space"]}\n";
echo "p_sign_posn:       {$locale_info["p_sign_posn"]}\n";
echo "n_sign_posn:       {$locale_info["n_sign_posn"]}\n";
echo "</PRE>\n";
?>
]]>
     </programlisting>
    </example>
    <para>
     The constant CHAR_MAX is also defined for the use mentioned above.
    </para>
    <para>
     See also <function>setlocale</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
