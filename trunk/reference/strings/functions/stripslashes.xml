<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.stripslashes">
   <refnamediv>
    <refname>stripslashes</refname>
    <refpurpose>
     Un-quote string quoted with <function>addslashes</function>
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>stripslashes</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
     </methodsynopsis>
    <para>
     Returns a string with backslashes stripped off.
     (<literal>\'</literal> becomes <literal>'</literal> and so on.)
     Double backslashes (<literal>\\</literal>) are made into a single
     backslash (<literal>\</literal>). 
    </para>
    <note>
     <para>
      If <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link> is
      on, no backslashes are stripped off but two apostrophes are replaced by
      one instead.
     </para>
    </note>
    <para>
     An example use of <function>stripslashes</function> is when the PHP
     directive <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>
     is <literal>on</literal> (it's on by default), and you aren't inserting
     this data into a place (such as a database) that requires escaping.
     For example, if you're simply outputting data straight from an HTML
     form.
    </para>
    <para>
     <example>
      <title>A <function>stripslashes</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
$str = "Is your name O\'reilly?";

// Outputs: Is your name O'reilly?
echo stripslashes($str);
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      <function>stripslashes</function> is not recursive. If you want to apply
      this function to a mutli-dimensional array, you need to use a recursive function.
     </para>
    </note>
    <para>
     <example>
      <title>Using <function>stripslashes</function> on an array</title>
      <programlisting role="php">
<![CDATA[
<?php
function stripslashes_deep($value)
{
    $value = is_array($value) ?
                array_map('stripslashes_deep', $value) :
                stripslashes($value);

    return $value;
}

// Example
$array = array("f\\'oo", "b\\'ar", array("fo\\'o", "b\\'ar"));
$array = stripslashes_deep($array);

// Output
print_r($array);
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
Array
(
    [0] => f'oo
    [1] => b'ar
    [2] => Array
        (
            [0] => fo'o
            [1] => b'ar
        )

)
]]>
      </screen>
     </example>
    </para>
    <para>
     For more information about "magic quotes", see <function>get_magic_quotes_gpc</function>.
    </para>
    <simpara>
     See also <function>addslashes</function> and
     <function>get_magic_quotes_gpc</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
