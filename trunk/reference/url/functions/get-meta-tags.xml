<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.get-meta-tags">
   <refnamediv>
    <refname>get_meta_tags</refname>
    <refpurpose>
     Extracts all meta tag content attributes from a file and returns
     an array
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>get_meta_tags</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
     </methodsynopsis>
    <para>
     Opens <parameter>filename</parameter> and parses it line by line
     for &lt;meta&gt; tags in the file.  This can be a local file or
     an <acronym>URL</acronym>.  The parsing stops at 
     <literal>&lt;/head&gt;</literal>.
    </para>
    <para>
     Setting <parameter>use_include_path</parameter> to 1 will result
     in PHP trying to open the file along the standard include path
     as per the <link linkend="ini.include-path">include_path</link>
     directive.  This is used for local files, not URLs.
    </para>
    <para>
     <example>
      <title>What <function>get_meta_tags</function> parses</title>
      <programlisting role="html">
<![CDATA[
<meta name="author" content="name">
<meta name="keywords" content="php documentation">
<meta name="DESCRIPTION" content="a php manual">
<meta name="geo.position" content="49.33;-86.59">
</head> <!-- parsing stops here -->
]]>
      </programlisting>
     </example>
     (pay attention to line endings - PHP uses a native function to
     parse the input, so a Mac file won't work on Unix).
    </para>
    <para> 
     The value of the name property becomes the key, the value of the
     content property becomes the value of the returned array, so you
     can easily use standard array functions to traverse it or access
     single values. Special characters in the value of the name
     property are substituted with '_', the rest is converted to lower
     case.  If two meta tags have the same name, only the last one
     is returned.
    </para>
    <para>
     <example>
      <title>What <function>get_meta_tags</function> returns</title>
      <programlisting role="php">
<![CDATA[
<?php
// Assuming the above tags are at www.example.com
$tags = get_meta_tags('http://www.example.com/');

// Notice how the keys are all lowercase now, and
// how . was replaced by _ in the key.
echo $tags['author'];       // name
echo $tags['keywords'];     // php documentation
echo $tags['description'];  // a php manual
echo $tags['geo_position']; // 49.33;-86.59
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      As of PHP 4.0.5, <function>get_meta_tags</function> supports
      unquoted HTML attributes.
     </para>
    </note>
    <para>
     See also <function>htmlentities</function> and
     <function>urlencode</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

