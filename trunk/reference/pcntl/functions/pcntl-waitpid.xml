<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/pcntl.xml, last change in rev 1.1 -->
 <refentry id="function.pcntl-waitpid">
  <refnamediv>
   <refname>pcntl_waitpid</refname>
   <refpurpose>Waits on or returns the status of a forked child</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>pcntl_waitpid</methodname>
     <methodparam><type>int</type><parameter>pid</parameter></methodparam>
     <methodparam><type>int</type><parameter>status</parameter></methodparam>
     <methodparam><type>int</type><parameter>options</parameter></methodparam>
    </methodsynopsis>
   <para>
    The <function>pcntl_waitpid</function> function suspends execution
    of the current process until a child as specified by the
    <parameter>pid</parameter> argument has exited, or until a signal
    is delivered whose action is to terminate the current process or
    to call a signal handling function.  If a child as requested by
    <parameter>pid</parameter> has already exited by the time of the
    call (a so-called "zombie" process), the function returns
    immediately.  Any system resources used by the child are
    freed. Please see your system's waitpid(2) man page for specific
    details as to how waitpid works on your system.
   </para>
   <para>
    <function>pcntl_waitpid</function> returns the process ID of the
    child which exited, -1 on error or zero if WNOHANG was used and no
    child was available
   </para>
   <para>
    The value of <parameter>pid</parameter> can be one of the following:
    <table>
     <title>possible values for <parameter>pid</parameter></title>
     <tgroup cols="2">
      <tbody>
       <row>
	<entry><literal>&lt; -1</literal></entry>
	<entry>
	 wait for any child process whose process group ID is equal to
	 the absolute value of <parameter>pid</parameter>.
	</entry>
       </row>
       <row>
	<entry><literal>-1</literal></entry>
	<entry>
	 wait for any child process; this is the same behaviour that
	 the wait function exhibits.
	</entry>
       </row>
       <row>
        <entry><literal>0</literal></entry>
        <entry>
	 wait for any child process whose process group ID is equal to
	 that of the calling process.
        </entry>
       </row>
       <row>
        <entry><literal>&gt; 0</literal></entry>
        <entry>
	 wait for the child whose process ID is equal to the value of
	 <parameter>pid</parameter>.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    <function>pcntl_waitpid</function> will store status information
    in the <parameter>status</parameter> parameter which can be
    evaluated using the following functions:
    <function>pcntl_wifexited</function>,
    <function>pcntl_wifstopped</function>,
    <function>pcntl_wifsignaled</function>,
    <function>pcntl_wexitstatus</function>,
    <function>pcntl_wtermsig</function> and
    <function>pcntl_wstopsig</function>.
   </para>
   <para>
    The value of <parameter>options</parameter> is the value of zero
    or more of the following two global constants
    <literal>OR</literal>'ed together:
    <table>
     <title>possible values for <parameter>options</parameter></title>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry><literal>WNOHANG</literal></entry>
        <entry>
	 return immediately if no child has exited.
	</entry>
       </row>
       <row>
        <entry><literal>WUNTRACED</literal></entry>
        <entry>
	 return for children which are stopped, and whose status has
	 not been reported.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    See also <function>pcntl_fork</function>,
    <function>pcntl_signal</function>,
    <function>pcntl_wifexited</function>,
    <function>pcntl_wifstopped</function>,
    <function>pcntl_wifsignaled</function>,
    <function>pcntl_wexitstatus</function>,
    <function>pcntl_wtermsig</function> and
    <function>pcntl_wstopsig</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
