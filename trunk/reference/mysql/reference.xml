<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
 <reference id="ref.mysql">
  <title>MySQL Functions</title>
  <titleabbrev>MySQL</titleabbrev>

  <partintro>
   <section id="mysql.intro">
    &reftitle.intro;
    <para>
     These functions allow you to access MySQL database servers.
     More information about MySQL can be found at <ulink
     url="&url.mysql;">&url.mysql;</ulink>.
    </para>
    <para>
     Documentation for MySQL can be found at <ulink
     url="&url.mysql.docs;">&url.mysql.docs;</ulink>.
    </para>
   </section>

   <section id="mysql.requirements">
    &reftitle.required;
    <para>
     In order to have these functions available, you must compile PHP with
     MySQL support.
    </para>
   </section>
    
   <section id="mysql.installation">
    &reftitle.install;
    <para>
     By using the <option role="configure">--with-mysql</option> configuration
     option you enable PHP to access MySQL databases. If you use this option
     without specifying the path to MySQL, PHP will use the built-in MySQL
     client libraries. With PHP4 MySQL support is always enabled; if you don't
     specify the configure option, the bundled libraries are used. Users who
     run other applications that use MySQL (for example, running PHP 3 and PHP
     4 as concurrent apache modules, or auth-mysql) should always specify the
     path to MySQL: <option
     role="configure">--with-mysql=/path/to/mysql</option>.  This will force
     PHP to use the client libraries installed by MySQL, avoiding any
     conflicts.
    </para>
    <warning>
     <para>
      Crashes and startup problems of <literal>PHP</literal> may be encountered
      when loading this extension in conjunction with the recode extension.
      See the <link linkend="ref.recode">recode</link> extension for more
      information.
     </para>
    </warning>
   </section>

    &reference.mysql.ini;

   <section id="mysql.resources">
   &reftitle.resources;
    <para>
     There are two resource types used in the MySQL module. The first one
     is the link identifier for a database connection, the second a resource
     which holds the result of a query.
    </para>
   </section>

   &reference.mysql.constants;

    
   <section id="mysql.examples">
   &reftitle.examples;
    <para>
     This simple example shows how to connect, execute a query, print
     resulting rows and disconnect from a MySQL database.
     <example>
      <title>MySQL extension overview example</title>
      <programlisting role="php">
<![CDATA[
<?php
    /* Connecting, selecting database */
    $link = mysql_connect("mysql_host", "mysql_user", "mysql_password")
        or die("Could not connect");
    print "Connected successfully";
    mysql_select_db("my_database") or die("Could not select database");

    /* Performing SQL query */
    $query = "SELECT * FROM my_table";
    $result = mysql_query($query) or die("Query failed");

    /* Printing results in HTML */
    print "<table>\n";
    while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {
        print "\t<tr>\n";
        foreach ($line as $col_value) {
            print "\t\t<td>$col_value</td>\n";
        }
        print "\t</tr>\n";
    }
    print "</table>\n";

    /* Free resultset */
    mysql_free_result($result);

    /* Closing connection */
    mysql_close($link);
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>

&reference.mysql.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

