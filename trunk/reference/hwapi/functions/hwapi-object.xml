<?xml version='1.0' encoding='iso-8859-1' ?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/hwapi.xml, last change in rev 1.1 -->
  <refentry id="function.hwapi-object">
   <refnamediv>
    <refname>hw_api->object</refname>
    <refpurpose>Lit les informations d'attribut</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>hw_api->object</methodname>
     <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>hw_api->object</function> lit les informations d'attributs
     d'un objet de n'importe quelle version. Elle ne retournera pas le
     contenu du document. Le param&egrave;tre <parameter>parameter</parameter>
     est un tableau qui contient l'&eacute;l&eacute;ment obligatoire 
     'objectIdentifier' et les &eacute;l&eacute;ments optionnels
     'attributeSelector' et 'version'.
    </para>
    <para>
     L'objet retourn&eacute; est une instance de la classe
     <classname>HW_API_Object</classname> en cas de succ&egrave;s ou
     <classname>HW_API_Error</classname> en cas d'erreur.
    </para>
    <para>
     Cet exemple simple lit un objet et v&eacute;rifie les erreurs.
     <example>
      <title>Lit un objet Hyperwave et le v&eacute;rifie</title>
      <programlisting role="php">
<![CDATA[
<?php
function handle_error($error) {
  $reason = $error->reason(0);
  echo "Type: <B>";
  switch($reason->type()) {
    case 0:
      echo "Erreur";
      break;
    case 1:
      echo "Alerte";
      break;
    case 2:
      echo "Message";
      break;
  }
  echo "</B><BR>\n";
  echo "Description : ".$reason->description("en")."<BR>\n";
}

function list_attr($obj) {
  echo "<TABLE>\n";
  $count = $obj->count();
  for($i=0; $i<$count; $i++) {
    $attr = $obj->attribute($i);
    printf("  <TR><TD ALIGN=right bgcolor=#c0c0c0><B>%s</B></TD><TD bgcolor=#F0F0F0>%s</TD>\n",
             $attr->key(), $attr->value());
  }
  echo "</TABLE>\n";
}

$hwapi = hwapi_hgcsp($g_config[HOSTNAME]);
$parms = array("objectIdentifier"=>"rootcollection, "attributeSelector"=>array("Title", "Name", "DocumentType"));
$root = $hwapi->object($parms);
if(get_class($root) == "HW_API_Error") {
  handle_error($root);
  exit;
}
list_attr($root);
?>
]]>
      </programlisting>
     </example>
    </para> 
    <para>
     Voir aussi
     <function>hwapi_content</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
