<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<reference id="ref.pcre">
  <title>Regular Expression Functions (Perl-Compatible)</title>
  <titleabbrev>PCRE</titleabbrev>   

  <partintro>
   <para id="pcre.intro">
    The syntax for patterns used in these functions closely resembles
    Perl. The expression should be enclosed in the delimiters, a
    forward slash (/), for example.  Any character can be used for
    delimiter as long as it's not alphanumeric or backslash (\). If
    the delimiter character has to be used in the expression itself,
    it needs to be escaped by backslash. Since PHP 4.0.4, you can also use
    Perl-style (), {}, [], and &lt;&gt; matching delimiters.
   </para>
   <para>
    The ending delimiter may be followed by various modifiers that
    affect the matching. 
    See <link linkend="pcre.pattern.modifiers">Pattern Modifiers</link>.
   </para>
   <para>
    PHP also supports regular expressions using a POSIX-extended syntax
    using the <link linkend="ref.regex">POSIX-extended regex functions.</link>.
   </para>
   
   <section id="pcre.requirements">
    <title>Requirements</title>
    <para>
     Regular expression support is provided by the PCRE library
     package, which is open source software, written by Philip Hazel,
     and copyright by the University of Cambridge, England. It is
     available at <ulink url="&url.pcre;">&url.pcre;</ulink>.
    </para>
   </section>
    
   <section id="pcre.installation">
    <title>Installation</title>
    <para>
     Beginning with PHP 4.2.0 this function are enabled by default.
     For older versions you have to configure and compile PHP 
     with <option role="configure">--with-pcre-regex[=DIR]</option> in order
     to use these functions. You can disable the pcre functions with <option
     role="configure">--without-pcre-regex</option>.
    </para>
   </section>

   <section id="pcre.configuration">
    <title>Runtime Configuration</title>
     &no.config;
   </section>

   <section id="pcre.resources">
    <title>Resource types</title>
     &no.resource;
   </section>

   <section id="pcre.constants">
    <title>Predefined constants</title>
    <para>
     <constant>PREG_PATTERN_ORDER</constant>
     <constant>PREG_SET_ORDER</constant>
     <constant>PREG_SPLIT_NO_EMPTY</constant>
     <constant>PREG_SPLIT_DELIM_CAPTURE</constant>
    </para>
   </section>

   <section id="pcre.examples">
    <title>Examples</title>
    <para>
     <example>
      <title>Examples of valid patterns</title>
      <itemizedlist>
       <listitem><simpara>/&lt;\/\w+&gt;/</simpara></listitem>
       <listitem><simpara>|(\d{3})-\d+|Sm</simpara></listitem>
       <listitem><simpara>/^(?i)php[34]/</simpara></listitem>
       <listitem><simpara>{^\s+(\s+)?$}</simpara></listitem>
      </itemizedlist>
     </example>
    </para>
    <para>
     <example>
      <title>Examples of invalid patterns</title>
      <itemizedlist>
       <listitem>
        <simpara>
         /href='(.*)' - missing ending delimiter
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         /\w+\s*\w+/J - unknown modifier 'J'
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         1-\d3-\d3-\d4| - missing starting delimiter
        </simpara>
       </listitem>
      </itemizedlist>
     </example>
    </para>
   </section>

  </partintro>









&reference.pcre.functions;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

