<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./en/functions/yaz.xml, last change in rev 1.8 -->
  <refentry id="function.yaz-ccl-conf">
   <refnamediv>
    <refname>yaz_ccl_conf</refname>
    <refpurpose>Configure CCL parser</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>yaz_ccl_conf</methodname>
      <methodparam><type>resource</type><parameter>id</parameter></methodparam>
      <methodparam><type>array</type><parameter>config</parameter></methodparam>
     </methodsynopsis>
    <para>
     This function configures the CCL query parser for a target
     with definitions of access points (CCL qualifiers) and their
     mapping to RPN. To map a specific CCL query to RPN afterwards
     call the <function>yaz_ccl_parse</function> function.
     Each index of the array <parameter>config</parameter> is the
     name of a CCL field and the corresponding value holds a string
     that specifies a mapping to RPN.
     The mapping is a sequence of attribute-type, attribute-value
     pairs. Attribute-type and attribute-value is separated by an equal
     sign (<literal>=</literal>). Each pair is separated by white space.
    </para>
    <para>
    <example>
    <title>CCL configuration</title>
    <simpara>
     In the example below, the CCL parser is configured to support
     three CCL fields: <literal>ti</literal>, <literal>au</literal> and
     <literal>isbn</literal>. Each field is mapped to their BIB-1
     equivalent. It is assumed that variable <literal>$id</literal> is the
     connection ID.
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
$fields["ti"] = "1=4";
$fields["au"] = "1=1";
$fields["isbn"] = "1=7";
yaz_ccl_conf($id, $fields);
?>
]]>
    </programlisting>
    </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
