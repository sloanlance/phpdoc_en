<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/yaz.xml, last change in rev 1.1 -->
  <refentry id="function.yaz-sort">
   <refnamediv>
    <refname>yaz_sort</refname>
    <refpurpose>Sets sorting criteria</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>yaz_sort</methodname>
      <methodparam><type>resource</type><parameter>id</parameter></methodparam>
      <methodparam><type>string</type><parameter>criteria</parameter></methodparam>
     </methodsynopsis>
    <para>
     This function sets sorting criteria and enables Z39.50 Sort.
     Call this function <emphasis>before</emphasis>
     <function>yaz_search</function>.
     Using this function alone doesn't have any effect.
     When in conjunction with <function>yaz_search</function>,
     a Z39.50 Sort will be sent after
     a search response has been received and before any records are
     retrieved with Z39.50 Present. The <parameter>criteria</parameter>
     takes the form
    </para>
    <para>
      <replaceable>field1 flags1 field2 flags2</replaceable> ...
    </para>
    <para>
     where field1 specifies primary attributes for sort, field2 seconds,
     etc.. The field specifies either numerical attribute combinations consisting
     of type=value pairs separated by comma (e.g. <literal>1=4,2=1</literal>)
     ; or the field may specify a plain string criteria
     (e.g. <literal>title</literal>. The flags is a sequnce of the
     following characters which may not be separated by any white space.
    </para>
    <variablelist>
      <title>Sort Flags</title>
      <varlistentry><term><literal>a</literal></term><listitem>
       <simpara>Sort ascending</simpara></listitem>
      </varlistentry>
      <varlistentry><term><literal>d</literal></term><listitem>
       <simpara>Sort descending</simpara></listitem>
      </varlistentry>
      <varlistentry><term><literal>i</literal></term><listitem>
       <simpara>Case insensitive sorting</simpara></listitem>
      </varlistentry>
      <varlistentry><term><literal>s</literal></term><listitem>
       <simpara>Case sensitive sorting</simpara></listitem>
      </varlistentry>
    </variablelist>
    <example>
    <title>Sort Criterias</title>
    <para>
       To sort on Bib1 attribute title, case insensitive,
       and ascending you'd use the following sort criteria:
     <screen>
       1=4 ia
     </screen>
    </para>
    <para>
       If the secondary sorting criteria should be author, case sensitive
       and ascending you'd use:
     <screen>
       1=4 ia 1=1003 sa
     </screen>
    </para>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
