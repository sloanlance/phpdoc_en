<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/yaz.xml, last change in rev 1.1 -->
  <refentry id="function.yaz-ccl-parse">
   <refnamediv>
    <refname>yaz_ccl_parse</refname>
    <refpurpose>Invoke CCL Parser</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>yaz_ccl_parse</methodname>
      <methodparam><type>resource</type><parameter>id</parameter></methodparam>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
      <methodparam><type>array &amp;</type><parameter>result</parameter></methodparam>
     </methodsynopsis>
    <para>
     This function invokes a CCL parser. It converts a given
     CCL FIND query to an RPN query which may be passed to the
     <function>yaz_search</function> function to perform a search.
     To define a set of valid CCL fields call
     <function>yaz_ccl_conf</function> prior to this function.
     If the supplied <parameter>query</parameter> was successfully
     converted to RPN, this function returns &true;, and the index
     <literal>rpn</literal> of the supplied array
     <parameter>result</parameter> holds a valid RPN query.
     If the query could not be converted (because of invalid syntax,
     unknown field, etc.) this function returns &false; and three
     indexes are set in the resulting array to indicate the cause
     of failure: <literal>errorcode</literal>CCL error code (integer),
     <literal>errorstring</literal>CCL error string, and 
     <literal>errorpos</literal>approximate position in query of failure
     (integer is character position).
    </para>
    <example>
     <title>CCL Parsing</title>
     <para>We'll try to search using CCL. In the example below,
      <literal>$ccl</literal> is a CCL query. 
     </para>
     <programlisting>
<![CDATA[
yaz_ccl_conf($id,$fields);  // see example for yaz_ccl_conf
if (!yaz_ccl_parse($id, $ccl, &$cclresult) {
    echo 'Error: ' . $cclresult["errorstring"];
} else {
    $rpn = $cclresult["rpn"];
    yaz_search($id,"rpn",$rpn);
}
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
