<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->

<refentry xml:id="gmagickpixel.getcolor" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GmagickPixel::getcolor</refname>
  <refpurpose>Returns the color</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>GmagickPixel::getcolor</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>as_array</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>normalize_array</parameter></methodparam>
  </methodsynopsis>
  <para>
   Returns the color described by the ImagickPixel object, as an array. If the color has an opacity channel set, this is provided as a fourth value in the list. 
  </para>

   

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>as_array</parameter></term>
     <listitem>
      <para>
       True to indicate return of array instead of string
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>normalize_array</parameter></term>
     <listitem>
      <para>
       Normalize the color values 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   An array of channel values, each normalized if TRUE is given as param. Throws GmagickPixelException on error. 
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
