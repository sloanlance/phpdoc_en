<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->

<refentry xml:id="memcached.setmulti" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Memcached::setMulti</refname>
  <refpurpose>Store multiple sets of data</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Memcached::setMulti</methodname>
   <methodparam><type>array</type><parameter>entries</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>expiration</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Memcached::setMulti</function> is similar to
   <methodname>Memcached::set</methodname>, but instead of a single key/value
   pair, it works on multiple sets specified in
   <parameter>entries</parameter>. The <parameter>expiration</parameter>
   time applies to all the entries at once.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>entries</parameter></term>
     <listitem>
      <para>
       An array of key/value pairs to store on the server.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>expiration</parameter></term>
     <listitem>
      <para>
       The expiration time of the entries, as a Unix timestamp.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
   Use <methodname>Memcached::getResultCode</methodname> if necessary.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>Memcached::setMulti</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$m = new Memcached();
$m->addServer('localhost', 11211);

$entries = array(
    'key1' => 'value1',
    'key2' => 'value2',
    'key3' => 'value3'
);
$m->set($entries, time() + 300);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Memcached::setMultiByKey</methodname></member>
    <member><methodname>Memcached::set</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
