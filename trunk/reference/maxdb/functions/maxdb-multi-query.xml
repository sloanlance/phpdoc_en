<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
  <refentry id="function.maxdb-multi-query">
   <refnamediv>
    <refname>maxdb_multi_query</refname>
    <refname>maxdb->multi_query</refname>
    <refpurpose>Performs a query on the database</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <para>Procedural style:</para>
    <methodsynopsis>
     <type>bool</type><methodname>maxdb_multi_query</methodname>
     <methodparam><type>resource</type><parameter>link</parameter></methodparam>
     <methodparam><type>string</type><parameter>query</parameter></methodparam>
    </methodsynopsis>
    <para>Object oriented style (method):</para>
    <classsynopsis>
     <ooclass><classname>maxdb</classname></ooclass>
     <methodsynopsis>
      <type>bool</type>
      <methodname>multi_query</methodname>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
    </classsynopsis>
    <para>
     The <function>maxdb_multi_query</function> works like the function
     <function>maxdb_query</function>. Multiple queries are not yet supported.
    </para>
   </refsect1>
   <refsect1>
    <title>Return values</title>
    <para>
     &return.success; 
    </para>
   </refsect1>
   <refsect1>
    <title>See also</title>
    <para>
     <function>maxdb_use_result</function>,
     <function>maxdb_store_result</function>,
     <function>maxdb_next_result</function>,
     <function>maxdb_more_results</function>
    </para>
   </refsect1>
   <refsect1>
    <title>Example</title>
    <example>
     <title>Object oriented style</title>
     <programlisting role="php">
<![CDATA[
<?php
$maxdb = new maxdb("localhost", "MONA", "RED", "DEMODB");

/* check connection */
if (maxdb_connect_errno()) {
   printf("Connect failed: %s\n", maxdb_connect_error());
   exit();
}

$query  = "SELECT * FROM dual";
$query .= "SELECT name FROM hotel.city ORDER BY zip";

/* execute multi query */
if ($maxdb->multi_query($query)) {
   do {
       /* store first result set */
       if ($result = $maxdb->store_result()) {
           while ($row = $result->fetch_row()) {
               printf("%s\n", $row[0]);
           }
           $result->close();
       }
       /* print divider */
       if ($maxdb->more_results()) {
           printf("-----------------\n");
       }
   } while ($maxdb->next_result());
}

/* close connection */
$maxdb->close();
?>
]]>
    </programlisting>
    </example>
    <example>
     <title>Procedural style</title>
     <programlisting role="php">
<![CDATA[
<?php
$link = maxdb_connect("localhost", "MONA", "RED", "DEMODB"

/* check connection */
if (maxdb_connect_errno()) {
   printf("Connect failed: %s\n", maxdb_connect_error());
   exit();
}

$query = "SELECT * FROM dual";
$query .= "SELECT name FROM hotel.city ORDER BY zip";

/* execute multi query */
if (maxdb_multi_query($link, $query)) {
   do {
       /* store first result set */
       if ($result = maxdb_store_result($link)) {
           while ($row = maxdb_fetch_row($result)) {
               printf("%s\n", $row[0]);
           }
           maxdb_free_result($result);
       }
       /* print divider */
       if (maxdb_more_results($link)) {
           printf("-----------------\n");
       }
   } while (maxdb_next_result($link));
}

/* close connection */
maxdb_close($link);
?>
]]>
     </programlisting>
    </example>
    <para>
     The above examples would produce the following output:
    </para>
    <screen>
<![CDATA[
Warning: maxdb_multi_query(): -3008 POS(31) Invalid keyword or missing delimiter <...>
]]>
    </screen>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
