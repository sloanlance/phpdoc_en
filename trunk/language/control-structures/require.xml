<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->

<sect1 xml:id="function.require" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><function>require</function></title>

 <simpara>
  The <function>require</function> statement includes and evaluates
  the specific file.
 </simpara>
 <simpara>
  <function>require</function> includes and evaluates a specific file.
  Detailed information on how this inclusion works is described in the
  documentation for <function>include</function>.
 </simpara>
 <simpara>
  <function>require</function> and <function>include</function>
  are identical in every way except how they handle failure. They both
  produce a <link linkend="errorfunc.constants.errorlevels.e-warning">Warning</link>, but
  <function>require</function> results in a <link linkend="errorfunc.constants.errorlevels.e-error">
  Fatal Error</link>.  In other words, don't hesitate to use
  <function>require</function> if you want a missing file to halt processing
  of the page.  <function>include</function> does not behave this way, the
  script will continue regardless.  Be sure to have an appropriate
  <link linkend="ini.include-path">include_path</link> setting as well.
 </simpara>
 <para>
  <example>
   <title>Basic <function>require</function> examples</title>
   <programlisting role="php">
<![CDATA[
<?php

require 'prepend.php';

require $somefile;

require ('somefile.txt');

?>
]]>
   </programlisting>
 </example>
 </para>
 <simpara>
  See the <function>include</function> documentation for more examples.
 </simpara>
 <para>
  <note>
   <simpara>
    Prior to PHP 4.0.2, the following applies: <function>require</function>
    will always attempt to read the target file, even if the line it's on
    never executes.  The conditional statement won't affect
    <function>require</function>. However, if the line on which the
    <function>require</function> occurs is not executed, neither will any of
    the code in the target file be executed.  Similarly, looping structures
    do not affect the behaviour of <function>require</function>. Although
    the code contained in the target file is still subject to the loop, the
    <function>require</function> itself happens only once.
   </simpara>
  </note>
 </para>

 &note.language-construct;

 &warn.no-win32-fopen-wrapper;

 <simpara>
  See also <function>include</function>, <function>require_once</function>,
  <function>include_once</function>, <function>get_included_files</function>,
  <function>eval</function>, <function>file</function>, <function>readfile</function>,
  <function>virtual</function> and <link linkend="ini.include-path">include_path</link>.
 </simpara>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
