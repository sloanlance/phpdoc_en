<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
 <sect1 id="language.oop5.interfaces">
  <title>Object Interfaces</title>
  <para>
   Object interfaces allow you to create code which specifies which methods 
   and variables a class must implement, without having to define how these 
   methods are handled.
  </para>
  <para>
   Interfaces are defined using the interface keyword, in the same way as a
   standard class, but without any of the methods having their contents
   defined. Classes which implement an interface should do so using the
   implements keyword, and must have definitions for all the methods listed
   in the interface. Classes may implement more than one interface if desired
   by listing each interface split by a comma.
  </para>
  <para>
   Stating that a class implements an interface, and then not implementing all
   the methods in the interface will result in a fatal error telling you which
   methods have not been implemented.
  </para>
  <example>
   <title>Interface example</title>
    <programlisting role="php">
<![CDATA[
<?php
interface ITemplate
{
  public function setVariable($name, $var);
  public function getHtml($template);
}

class Template implements ITemplate
{
  private $vars = array();
  
  public function setVariable($name, $var)
  {
    $this->vars[$name] = $var;
  }
  
  public function getHtml($template)
  {
    foreach($this->vars as $name => $value) {
      $template = str_replace('{'.$name.'}', $value, $template);
    }
    
    return $template;
  }
}
?> 
]]>
   </programlisting>
  </example>

 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
