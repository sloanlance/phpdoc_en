<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
 <sect1 id="language.oop5.visibility">
  <title>Visibility</title>
  <para>
   The visibility of a property or method can be defined by prefixing the
   declaration with the keywords: public, protected or private. Public
   declared items can be accessed everywhere. Protected limits access to
   inherited classes (and to the class that defines the item). Private limits
   visibility only to the class that defines the item.
  </para>
  <sect2 id="language.oop5.visiblity-members">
   <title>Members Visibility</title>
   <para>
   Class members must be defined with public, private, or protected.
   </para>
   <para>
    <example>
     <title>Member declaration</title>
     <programlisting role="php">
<![CDATA[
<?php
/**
 * Define MyClass
 */
class MyClass
{
    public $public = 'Public';
    protected $protected = 'Protected';
    private $private = 'Private';

    function printHello()
    {
        echo $this->public;
        echo $this->protected;
        echo $this->private;
    }
}

$obj = new MyClass();
echo $obj->public; // Works
echo $obj->protected; // Fatal Error
echo $obj->private; // Fatal Error
$obj->printHello(); // Shows Public, Protected and Private


/**
 * Define MyClass2
 */
class MyClass2 extends MyClass
{
    // We can redeclare the public and protected method, but not private
    protected $protected = 'Protected2';

    function printHello()
    {
        echo $this->public;
        echo $this->protected;
        echo $this->private;
    }
}

$obj2 = new MyClass2();
echo $obj->public; // Works
echo $obj2->private; // Undefined
echo $obj2->protected; // Fatal Error
$obj2->printHello(); // Shows Public, Protected2, not Private

?> 
]]>
     </programlisting>
    </example>
   </para>
   <note>
    <simpara>
     The use PHP 4 use of declaring a variable with the keyword 'var' is
     no longer valid for PHP 5 objects. For compatibility a variable declared
     in php will be assumed with public visibility, and a
     <constant>E_STRICT</constant> warning will be issued.
    </simpara>
   </note>
  </sect2>
  <sect2 id="language.oop5.visiblity-methods">
   <title>Method Visibility</title>
   <para>
    Class methods must be defined with public, private, or protected. Methods
    without any declaration are defined as public.
   </para>
   <para>
    <example>
     <title>Method Declaration</title>
     <programlisting role="php">
<![CDATA[
<?php
/**
 * Define MyClass
 */
class MyClass
{
    // Contructors must be public
    public __construct() { }

    // Declare a public method
    public MyPublic() { }

    // Declare a protected method
    protected MyProtected() { }

    // Declare a private method
    private MyPrivate() { }

    // This is public
    Foo()
    {
        $this->public();
        $this->protected();
        $this->private();
    }
}

$myclass = new MyClass;
$myclass->MyPublic(); // Works
$myclass->MyProtected(); // Fatal Error
$myclass->MyPrivate(); // Fatal Error
$myclass->Foo(); // Public, Protected and Private work


/**
 * Define MyClass2
 */
class MyClass2 extends MyClass
{
    // This is public
    Foo2()
    {
        $this->public();
        $this->protected();
        $this->private();
    }
}

$myclass2 = new MyClass2;
$myclass2->MyPublic(); // Works
$myclass2->Foo2(); // Public and Protected work, not Private
?>
]]>
     </programlisting>
    </example>
   </para>
  </sect2>
 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
