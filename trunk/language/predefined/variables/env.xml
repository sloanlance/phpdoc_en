<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->

<refentry xml:id="reserved.variables.environment" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>$_ENV</refname>
  <refname>$HTTP_ENV_VARS</refname>
  <refpurpose>Environment variables</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>
   An associative <type>array</type> of variables passed to the current script
   via the environment method. 
  </para>

  <simpara>
   These variables are imported into PHP's global namespace from the
   environment under which the PHP parser is running. Many are
   provided by the shell under which PHP is running and different
   systems are likely running different kinds of shells, a
   definitive list is impossible. Please see your shell's
   documentation for a list of defined environment variables.
  </simpara>

  <simpara>
   Other environment variables include the CGI variables, placed
   there regardless of whether PHP is running as a server module or
   CGI processor.
  </simpara>

  <simpara>
   <varname>$HTTP_ENV_VARS</varname> contains the same initial
   information, but is not a superglobal. (Note that
   <varname>$HTTP_ENV_VARS</varname> and <varname>$_ENV</varname>
   are different variables and that PHP handles them as such)
  </simpara>

  <simpara>
   If the <link
   linkend="ini.register-globals">register_globals</link> directive
   is set, then these variables will also be made available in the
   global scope of the script; i.e., separate from the
   <varname>$_ENV</varname> and <varname>$HTTP_ENV_VARS</varname> 
   arrays.  For related information, see the security chapter titled 
   <link linkend="security.globals">Using Register Globals</link>.
   These individual globals are not superglobals.
  </simpara>

 </refsect1>
 

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Introduced <varname>$_ENV</varname>.
        Note that the deprecated <varname>$HTTP_ENV_VARS</varname>
        did exist previously.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="variable.env.basic">
    <title><varname>$_ENV</varname> example</title>
    <programlisting role="php">
<![CDATA[
<?php
echo 'My username is ' .$_ENV["user"] . '!';
?>
]]>
    </programlisting>
    <simpara>
     Assuming "bjori" executes this script
    </simpara>
    &example.outputs.similar;
    <screen>
<![CDATA[
My username is bjori!
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  &note.is-superglobal;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>getenv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

