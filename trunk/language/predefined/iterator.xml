<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.1 Maintainer: haluk Status: ready -->
<phpdoc:classref xml:id="class.iterator" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Iterator Arayüzü</title>
 <titleabbrev>Iterator</titleabbrev>

 <partintro>

<!-- {{{ Iterator intro -->
  <section xml:id="iterator.intro">
   &reftitle.intro;
   <para>
    Kendilerini dahili olarak yineleyebilen nesneler ve
    harici yineleyiciler için arayüz.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="iterator.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Iterator</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Iterator</classname>
     </ooclass>

     <oointerface>
      <interfacename>Traversable</interfacename>
     </oointerface>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">Yöntemler</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.iterator')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="iterator.examples">
   <example xml:id="iterator.example.basic"><!-- {{{ -->
    <title>Temel Kullanımı</title>
    <para>
     Bu örnekte, bir yineleyici üzerinde <function>foreach</function> yaparken
     hangi yöntemlerin çağrıldığı gösterilmiştir.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
class Yineleyicim implements Iterator {
    private $position = 0;
    private $array = array(
        "ilkeleman",
        "ikincieleman",
        "soneleman",
    );

    public function __construct() {
        $this->position = 0;
    }

    function rewind() {
        var_dump(__METHOD__);
        $this->position = 0;
    }

    function current() {
        var_dump(__METHOD__);
        return $this->array[$this->position];
    }

    function key() {
        var_dump(__METHOD__);
        return $this->position;
    }

    function next() {
        var_dump(__METHOD__);
        ++$this->position;
    }

    function valid() {
        var_dump(__METHOD__);
        return isset($this->array[$this->position]);
    }
}

$it = new Yineleyicim;

foreach($it as $key => $value) {
    var_dump($key, $value);
    echo "\n";
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
string(19) "Yineleyicim::rewind"
string(18) "Yineleyicim::valid"
string(20) "Yineleyicim::current"
string(16) "Yineleyicim::key"
int(0)
string(9) "ilkeleman"

string(17) "Yineleyicim::next"
string(18) "Yineleyicim::valid"
string(20) "Yineleyicim::current"
string(16) "Yineleyicim::key"
int(1)
string(12) "ikincieleman"

string(17) "Yineleyicim::next"
string(18) "Yineleyicim::valid"
string(20) "Yineleyicim::current"
string(16) "Yineleyicim::key"
int(2)
string(9) "soneleman"

string(17) "Yineleyicim::next"
string(18) "Yineleyicim::valid"
]]>
    </screen>
   </example><!-- }}} -->
  </section>


 </partintro>

 &language.predefined.iterator.current;
 &language.predefined.iterator.key;
 &language.predefined.iterator.next;
 &language.predefined.iterator.rewind;
 &language.predefined.iterator.valid;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

