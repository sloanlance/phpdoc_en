<?xml version="1.0" encoding="big5"?>
<!-- $Revision: 1.60 $ -->
 <chapter id="language.variables">
  <title>¦UÃþÅÜ¼Æ</title>
  
  <sect1 id="language.variables.basics">
   <title>°ò¥»ª¾ÃÑ</title>

   <simpara>
    ©Ò¦³ PHP ªºÅÜ¼Æ³£¬O¥H "$" ¬°¶}ºÝ¡A«á¥[ÅÜ¼Æ¦W©Ò²Õ¦¨ªº¡CÅÜ¼Æ¦WºÙ¬O¦³¤j¤p¼g¤§¤Àªº¡C
   </simpara>

   <para>
    PHP ªºÅÜ¼Æ¦WºÙ©M¨ä¥L¼ÐÅÒ¦³µÛ¬Û¦Pªº³W«h¡C¤@­Ó¦³®ÄªºÅÜ¼Æ¬O¥Ñ­^¤å¦r¥À©Î©³½u¶}©l¡A¸òµÛ¬O¥ô·Nªøµuªº¦r¥À¡B¼Æ¦r©Î©³½u¡C«ö¥¿³W¹Bºâ¦¡¡A¥¦¥i¥Hªí¹F¬°¡G'[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*'
   </para>
   
   <note>
    <simpara>
    ¦r¥À¬° a-z¡AA-Z¡A¦Ó ASCII ¦r²Å«h±q 127 ¦Ü 255¡q0x7f-0xff¡r¡C 
    </simpara>
   </note>

   <para>
    <informalexample>
     <programlisting role="php"> 
<![CDATA[
<?php
$var = "Bob";
$Var = "Joe";
echo "$var, $Var";      // outputs "Bob, Joe"

$4site = 'not yet';     // invalid; starts with a number
$_4site = 'not yet';    // valid; starts with an underscore
$täyte = 'mansikka';    // valid; 'ä' is ASCII 228.
?>
]]>
     </programlisting>
    </informalexample>
   </para>

   <para>
    PHP 3 ¤¤¡AÅÜ¼ÆÁ`¬O¥Ñ­È«ü¬£¡C¤]´N¬O»¡¡A·í±z±N¤@­Ó¹Bºâ¦¡ªº­È«ü¬£µ¹¤@­ÓÅÜ¼Æ®É¡A¾ã­Ó­ì©l¹Bºâ¦¡ªº­È±N·|½Æ»s¨ì¥ØªºÅÜ¼Æ¡C¨Ò¦p¡A·í±N¤@­ÓÅÜ¼Æªº­È«ü¬£µ¹¥t¤@­ÓÅÜ¼Æ¤§«á¡A§ó§ï·í¤¤ªº¥ô¦ó¤@­ÓÅÜ¼Æªº­È¨Ã¤£·|¼vÅT¨ì¥t¤@­ÓÅÜ¼Æªº­È¡C·Q­nª¾¹D§ó¦h³oÃþªº«ü¬£¡A½Ð°Ñ¾\<link linkend="language.expressions">¹Bºâ¦¡</link>³o¤@³¹¡C
   </para>
   <para>
    PHP 4 «h´£¨Ñ¤F¥t¤@ºØ«ü¬£ÅÜ¼Æ­Èªº¤èªk¡G<link linkend="language.references">¶Ç§}«ü¬£</link>¡A§Y·sÅÜ¼Æ¥u¬O°Ñ·Ó­ì¨ÓÅÜ¼Æ¤¤ªº­È¡A©Î»¡·sªºÅÜ¼Æ¦¨¬°­ì¨ÓÅÜ¼Æªº§O¦W¡C¦¹®É¡A§ó§ï¨â­ÓÅÜ¼Æ¤¤¥ô¦ó¤@­Óªº­È³£·|¦P®É§ó§ï¥t¤@­Óªº­È¡C¥Ñ©ó¨S¦³°õ¦æ¹ê»Úªº½Æ»s¤u§@¡A«ü¬£ªº¾Þ§@¤]¦]¦¹§ó¥[§Ö±¶¡C¤£¹L¡A¥u¦³¦bºò±Kªº°j°é©Î«ü¬£¤j¶qªº<link linkend="language.types.array">°}¦C</link>©Î<link linkend="language.types.object">ª«¥ó</link>®É¤~·|¹îÄ±³t«×ªº´£¤É¡C
   </para>
   <para>
    ¨Ï¥Î¶Ç§}«ü¬£¡A¥u¶·¦b³Q°Ñ·Óªº­ìÅÜ¼Æ«e¥[¤W¤@­Ó (&amp;) ªº²Å¸¹¡C¨Ò¦p¡A¤U¦Cµ{¦¡½X¦b¨Ï¥Î¶Ç§}«ü¬£«á¿é¥X 'My name is Bob' ¨â¦¸¡C
    
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$foo = 'Bob';              // Assign the value 'Bob' to $foo
$bar = &$foo;              // Reference $foo via $bar.
$bar = "My name is $bar";  // Alter $bar...
echo $bar;
echo $foo;                 // $foo is altered too.
?>
]]>
     </programlisting>
    </informalexample>
   </para>

   <para>
    »Ý­nª`·Nªº¬O¥u¦³¯u¥¿©R¦WªºÅÜ¼Æ¤~¥i¥H¥Î¨Ó¶i¦æ¶Ç§}«ü¬£¡C
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$foo = 25;
$bar = &$foo;      // This is a valid assignment.
$bar = &(24 * 7);  // Invalid; references an unnamed expression.

function test()
{
   return 25;
}

$bar = &test();    // Invalid.
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect1>

  <sect1 id="language.variables.predefined">
   <title>¹w³]ªºÅÜ¼Æ</title>
   
   <simpara>
    PHP ¬°¥¦°õ¦æªºµ{¦¡´£¨Ñ¤F¤j¶qªº¹w³]ÅÜ¼Æ¡CµM¦Ó¡A¥Ñ¤_¦³³\¦hÅÜ¼Æ¦]¨Ì¿à¨ä©Ò°õ¦æªº¦øªA¾¹ºØÃþ¡Bª©¥»¡B¦w¸Ëµ¥±¡ªp¦Ó©w¡A¦]¦¹Ãø¥H¦³§¹¾ãªº³Q°O¸ü¤U¨Ó¡C§ó¦³¤@¨ÇÅÜ¼Æ¦b<link linkend="features.commandline">«ü¥O¦æ</link>ªº¼Ò¦¡¹B¦æ®É¬O¤£¯à¨Ï¥Îªº¡C¦³Ãö³o¨ÇÅÜ¼Æªº¦Cªí¡A½Ð°Ñ¦Ò<link linkend="reserved.variables">«O¯dªº¥ý«e©w¸qÅÜ¼Æ</link>¤@¸`¡C
   </simpara>

   <warning>
    <simpara>
    PHP 4.2.0 ¥H«áªºª©¥»¡A<link linkend="ini.register-globals">register_globals</link> «ü¥Oªº¹w³]­È¬O <emphasis>off</emphasis>¡C³o¬O¤@­Ó­«¤jªº§ïÅÜ¡C±N register_globals ªº­È¹w³]¬° <emphasis>off</emphasis> ·|¼vÅT¨ì¹w³]ÅÜ¼Æ¦b¥þ°ì½d³ò¤ºªº¦³®Ä©Ê¡C¨Ò¦p¡A­n±o¨ì <varname>DOCUMENT_ROOT</varname> ªº­È¡AÀ³¨Ï¥Î <varname>$_SERVER['DOCUMENT_ROOT']</varname> ¦Ó¤£¬O <varname>$DOCUMENT_ROOT</varname>¡B¨Ï¥Î <varname>$_GET['id']</varname> ¥H¨ú±o URL <literal>http://www.example.com/test.php?id=3</literal> ¤¤ id ªº­È¡A¦Ó¤£¬O¥Î <varname>$id</varname>¡B©Î¨Ï¥Î <varname>$_ENV['HOME']</varname> ¨Ó¨ú¥N <varname>$HOME</varname>¡C
    </simpara>
    <simpara>
    §ó¦h»P¦¹§ó§ï¬ÛÃöªº¸ê®Æ¥i¦b <link linkend="ini.register-globals">register_globals</link> ªº³]¸m¤@¸`¡B<link linkend="security.registerglobals">¨Ï¥Î Register Globals</link> ¤¤ªº¦w¥þ³¹¡A©Î¦b <ulink url="&url.php.release4.1.0;">4.1.0</ulink> ¤Î <ulink url="&url.php.release4.2.0;">4.2.0</ulink> ªºµo¦æ³q§i¤¤¨ú±o¡C
    </simpara>
    <simpara>
    §Ú­Ì«ØÄ³±z¨Ï¥Î PHP ´£¨Ñªº«O¯d¹w³]ÅÜ¼Æ¡A¦p <link linkend="language.variables.superglobals">superglobal ³¯¦C</link>¡C
    </simpara>
   </warning>

   <simpara>
    ¦Û 4.1.0 ª©¥»°_¡APHP ÃB¥~´£¨Ñ¤F¤@®M¹w³]°}¦C¡A·í¤¤¥]§t¤F¨Ó¦Û¦øªA¾¹¡q¦p¾A¥Î¡r¡BÀô¹Ò¡B¤Î¨Ï¥ÎªÌ¿é¤JªºÅÜ¼Æ¡C³o¨Ç·s³¯¦C¤ñ¸û¯S§O¡A¦]¦¹¥¦­Ì·|¦Û°Ê¦a³]¬°¥þ°ì¡A§Y¥i¥H¦b©Ò¦³½d³ò¤º¨Ï¥Î¡C¥¿¦]¦p¦¹¡A¥¦­Ì¤]³QºÙ¬° 'autoglobals' ©Î 'superglobals'¡C¡qPHP ©|¥¼¦³¨Ï¥ÎªÌ¦Û¦æ©w¸q superglobals ªº¥\¯à¡C¡r§Ú­Ì±N¦b¤U­±¦C¥X superglobals¡A¦ý­nª¾¹D¥¦­Ìªº¤º®e©M PHP ¹w³]ÅÜ¼Æªº²`¤J°Q½×¡A½Ð°Ñ¦Ò<link linkend="reserved.variables">«O¯dªº¥ý«e©w¸qÅÜ¼Æ</link>¤@¸`¡C¦¹¥~¡A±z¤]·|¯d·NÂÂ¦³ªº¹w³]ÅÜ¼Æ (<varname>$HTTP_*_VARS</varname>) ¤´µM¦s¦b¡C
    
    &avail.register-long-arrays;
   </simpara>
   
   <note>
    <title>¥iÅÜÅÜ¼Æ</title>
    <para>
    Superglobals ¤£¯à·í§@<link linkend="language.variables.variable">¥iÅÜÅÜ¼Æ</link>¨Ó¨Ï¥Î¡C
    </para>
   </note>

   <para>
    ¦pªG¬Y¨Ç <link linkend="ini.variables-order">variables_order</link> ¤¤ªºÅÜ¼Æ¨S¦³³Q³]©w¡A¥¦­Ì¬Û¹ïªº PHP ¹w³]³¯¦C¤]±N·|¬OªÅªº¡C
   </para>

   <variablelist id="language.variables.superglobals">
    <title>PHP ªº Superglobals</title>
    <varlistentry>
     <term><link linkend="reserved.variables.globals">$GLOBALS</link></term>
     <listitem>
      <simpara>
      ¥]§t¤@­Ó«ü¦Vµ{¦¡¥þ°ì½d³ò¤º¥i¥ÎÅÜ¼Æªº¯Á¤Þ¡C¦¹³¯¦Cªº¯Á¤ÞÁä¬°¥þ°ìÅÜ¼Æªº¦WºÙ¡C<varname>$GLOBALS</varname> ¦Û PHP 3 ¶}©l´N¤w¦s¦b¡C
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link linkend="reserved.variables.server">$_SERVER</link></term>
     <listitem>
      <simpara>
      ¥Ñºô­¶¦øªA¾¹³]©wªºÅÜ¼Æ©Î¥Ø«eªºµ{¦¡©Ò°õ¦æªºÀô¹Ò²£¥ÍªºÅÜ¼Æ¡C¨ä©Ê½èÃþ¦üÂÂ¦³ªº <varname>$HTTP_SERVER_VARS</varname> ³¯¦C¡AÁöµM¥Ø«eÁÙ¥i¥H¨Ï¥Î¡A¦ý¤£³Q«ØÄ³¡C
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link linkend="reserved.variables.get">$_GET</link></term>
     <listitem>
      <simpara>
      ³q¹L HTTP GET ´£¨Ñµ¹µ{¦¡ªºÅÜ¼Æ¡C¨ä©Ê½èÃþ¦üÂÂ¦³ªº <varname>$HTTP_GET_VARS</varname> ³¯¦C¡AÁöµM¥Ø«eÁÙ¥i¥H¨Ï¥Î¡A¦ý¤£³Q«ØÄ³¡C
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link linkend="reserved.variables.post">$_POST</link></term>
     <listitem>
      <simpara>
      ³q¹L HTTP POST ´£¨Ñµ¹µ{¦¡ªºÅÜ¼Æ¡C¨ä©Ê½èÃþ¦üÂÂ¦³ªº <varname>$HTTP_POST_VARS</varname>³¯¦C¡AÁöµM¥Ø«eÁÙ¥i¥H¨Ï¥Î¡A¦ý¤£³Q«ØÄ³¡C
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link linkend="reserved.variables.cookies">$_COOKIE</link></term>
     <listitem>
      <simpara>
      ³q¹L HTTP cookies ´£¨Ñµ¹µ{¦¡ªºÅÜ¼Æ¡C¨ä©Ê½èÃþ¦üÂÂ¦³ªº <varname>$HTTP_COOKIE_VARS</varname>³¯¦C¡AÁöµM¥Ø«eÁÙ¥i¥H¨Ï¥Î¡A¦ý¤£³Q«ØÄ³¡C
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link linkend="reserved.variables.files">$_FILES</link></term>
     <listitem>
      <simpara>
      ³q¹L HTTP POST ÀÉ®×¤W¶Ç´£¨Ñµ¹µ{¦¡ªºÅÜ¼Æ¡C¨ä©Ê½èÃþ¦üÂÂ¦³ªº <varname>$HTTP_POST_FILES</varname>³¯¦C¡AÁöµM¥Ø«eÁÙ¥i¥H¨Ï¥Î¡A¦ý¤£³Q«ØÄ³¡C¸Ô±¡½Ð°Ñ¾\ <link linkend="features.file-upload.post-method">POST ¤W¶Ç¤è¦¡</link>¡C
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link linkend="reserved.variables.environment">$_ENV</link></term>
     <listitem>
      <simpara>
      °õ¦æÀô¹Ò´£¨Ñµ¹µ{¦¡ªºÅÜ¼Æ¡C¨ä©Ê½èÃþ¦üÂÂ¦³ªº <varname>$HTTP_ENV_VARS</varname>³¯¦C¡AÁöµM¥Ø«eÁÙ¥i¥H¨Ï¥Î¡A¦ý¤£³Q«ØÄ³¡C
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link linkend="reserved.variables.request">$_REQUEST</link></term>
     <listitem>
      <simpara>
       ³q¹L¥ô¦ó¨Ï¥ÎªÌ¿é¤J³~®|¦Ó´£¨Ñµ¹µ{¦¡ªºÅÜ¼Æ¡A¤]¥¿¦]¦p¦¹¤£­È±o«H¥ô¡C¦¹³¯¦C¤¤ÅÜ¼Æªº¦s¦b»P§_¤Î¦¸§Ç¬O¨M©w©ó <link linkend="ini.variables-order">variables_order</link> ªº³]©w¡CPHP 4.1.0 ¤§«eªºª©¥»¨Ã¨S¦³Ãþ¦ü¦¹³¯¦CªºÅÜ¼Æ¡C½Ð¦P®É°Ñ¾\ <function>import_request_variables</function>¡C
      </simpara>
      <note>
       <simpara>
        ¦b<link linkend="features.commandline">«ü¥O¦æ</link>¼Ò¦¡¤U°õ¦æ®É¡A¥¦¨Ã<emphasis>¤£</emphasis>¥]§t <varname>argv</varname> ©M <varname>argc</varname> ¶µ¥Ø¡C¦¹¨â¶µ¥Ø¥u¦b <varname>$_SERVER</varname> ³¯¦C¤¤¥X²{¡C
       </simpara>
      </note> 
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link linkend="reserved.variables.session">$_SESSION</link></term>
     <listitem>
      <simpara>
       ¥Ø«e©Mµ{¦¡ª`¥U¤Fªº session ÅÜ¼Æ¡C¨ä©Ê½èÃþ¦üÂÂ¦³ªº <varname>$HTTP_SESSION_VARS</varname>³¯¦C¡AÁöµM¥Ø«eÁÙ¥i¥H¨Ï¥Î¡A¦ý¤£³Q«ØÄ³¡C¸Ô±¡½Ð°Ñ¾\ <link linkend="ref.session">Session ³B²z¨ç¼Æ</link>¤@¸`¡C
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>

  </sect1>


  <sect1 id="language.variables.scope">
   <title>ÅÜ¼Æ½d³ò</title>

   <simpara>
    ÅÜ¼Æªº½d³ò¥u¬O¦b¨ä©Ò©w¸qªºªÅ¶¡¤º¦s¦b¡C¦b¤j³¡¥÷ªº±¡ªp¤U¡APHP ªºÅÜ¼Æ¥u¦³¤@­Ó³æ¤@ªº½d³ò¡C³o³æ¤@ªº½d³ò¤]¥]§t¤F¥H include ©M require ¤è¦¡¤Þ¤JªºÀÉ®×¡C¨Ò¦p¡G
   </simpara>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a = 1;
include "b.inc";
?>
]]>
    </programlisting>
   </informalexample>
   <simpara>
    ¨Ò¤l¤¤¡AÅÜ¼Æ <varname>$a</varname> ¤]¦s¦b¤_³Q¥]§t¤Jªºµ{¦¡ <filename>b.inc</filename> ¤¤¡C¦ý¬O¦b¨Ï¥ÎªÌ¦Û­qªº¨ç¼Æ¤¤¡A¤@­Ó°Ï°ì©Êªº¨ç¼Æ½d³ò±N³Q¤Þ¥Î¡C¥ô¦ó¦b¨ç¼Æ¤º¨Ï¥ÎªºÅÜ¼Æ¦b¹w³]ªº±¡ªp¤U¥u§½­­©ó¸Ó¨ç¼Æªº½d³ò¤º¡C¨Ò¦p¡G
   </simpara>
    
   <informalexample>
    <programlisting role="php"> 
<![CDATA[
<?php
$a = 1; /* global scope */ 

function Test()
{ 
    echo $a; /* reference to local scope variable */ 
} 

Test();
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    ³o­Óµ{¦¡¤£·|¿é¥X¥ô¦óªF¦è¡A¦]¬° echo ­z¥y¨Ï¥Î¤F¥»°Ï°ìª©¥»ªº <varname>$a</varname> ÅÜ¼Æ¡A¦Ó¸Ó¥»°Ï°ìÅÜ¼Æ¨Ã¥¼´¿³Q¤À°t¤@­Ó­È¡C§A·|µo²{³o©M C »y¨¥ªº°µªk¤£¦P¡A¦]¬° C ªº¥þ°ìÅÜ¼Æ¬O¦Û°Êªº´£¨Ñµ¹¦U¨ç¼Æ¡A°£«D¦b¥»°ì©w¸q¤¤«ü©úºM¾P¡C¦¹°µªk¥i¯à·|¤Þ­P¤@¨Ç°ÝÃD¡A¦p¨Ï¥ÎªÌ¤£·V¦a§ó§ï¤F¥þ°ìÅÜ¼Æªº­È¡C¦b PHP ¤¤¡A¥þ°ìÅÜ¼Æ¦b¥»°ì¨Ï¥Î«e¥²¶·¥ý«Å§G¬°¥þ°ì¡C¨Ò¤l¡G
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a = 1;
$b = 2;

function Sum()
{
    global $a, $b;

    $b = $a + $b;
} 

Sum();
echo $b;
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    ¤W­z¨Ò¤l±N·|¿é¥X &quot;3&quot;¡C¦b¨ç¼Æ¤º«Å§G <varname>$a</varname> ¤Î <varname>$b</varname> ¬°¥þ°ì«á¡A©Ò¦³¯A¤Î¸Ó¨â­ÓÅÜ¼Æªº¨Ï¥Î±N¦Û°Ê«ü¦V¥þ°ìªºª©¥»¡CPHP ¨S¦³­­©w¤@­Ó¨ç¼Æ¥i¥H¨Ï¥Îªº¥þ°ìÅÜ¼Æªº¼Æ¶q¡C
   </simpara>

   <simpara>
    ²Ä¤GºØ¦s¨ú¥þ°ì½d³ò¤¤ªºÅÜ¼Æ¤èªk¬O¨Ï¥Î¤@­Ó¥Ñ PHP ¯S§O©w¸qªº³¯¦C¡G<varname>$GLOBALS</varname>¡C«e­±ªº¨Ò¤l¥i¥H­«¼g¬°¡G
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a = 1;
$b = 2;

function Sum()
{
    $GLOBALS["b"] = $GLOBALS["a"] + $GLOBALS["b"];
} 

Sum();
echo $b;
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    <varname>$GLOBALS</varname> ¬O¤@­ÓÃöÁp³¯¦C (associative array)¡A¥þ°ìÅÜ¼Æªº¦W§Y¬°¯Á¤ÞÁä¡A¦Ó¸ÓÅÜ¼Æªº¤º®e§Y¬°³¯¦Cªº­È¡C¦³§_¯d·N¨ì <varname>$GLOBALS</varname> ¦b¥ô¦ó¤@­Ó½d³ò³£¥X²{¡H¨º¬O¦]¬° $GLOBALS ¬O¤@­Ó<link linkend="language.variables.superglobals">superglobal</link>¡C³o¬O¤@­Ó¥Ü½d superglobals ±j¤j¥\¯àªº¨Ò¤l¡G
   </simpara>
   <para>
   
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function test_global()
{
    // Most predefined variables aren't "super" and require 
    // 'global' to be available to the functions local scope.
    global $HTTP_POST_VARS;
    
    print $HTTP_POST_VARS['name'];
    
    // Superglobals are available in any scope and do 
    // not require 'global'.  Superglobals are available 
    // as of PHP 4.1.0
    print $_POST['name'];
}
?>
]]>
     </programlisting>
    </informalexample>
   </para>
   
   <simpara>
    ÅÜ¼Æ½d³òªº¥t¤@­Ó­«­n¥\¯à¬°<emphasis>ÀRºA</emphasis>ÅÜ¼Æ¡CÀRºAÅÜ¼Æ¥u¦b¥»°ì¨ç¼Æ½d³ò¤º¦s¦b¡A¦ý¬O·íµ{¦¡°õ¦æÂ÷¶}¦¹½d³ò®É¡A¥¦¨Ã¤£·|³à¥¢¥¦ªº­È¡C¬Ý¬Ý¤U­±ªº¨Ò¤l¡G
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function Test ()
{
    $a = 0;
    echo $a;
    $a++;
}
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    ¦¹¨ç¼Æ¨S¦³¤°»ò¥Î³B¡A¦]¨C¤@¦¸°õ¦æ¥¦®É¡A¥¦±N <varname>$a</varname> ³]¬° <literal>0</literal> µM«á¦C¦L¥X &quot;0&quot;¡C<varname>$a</varname>++ ¼W¥[¤F <varname>$a</varname> ªº­È¡A¦ý¨Ã¨S¦³¹ê»Ú¥Î³~¦]¬°¤@¥¹Â÷¶}¤F¸Ó¨ç¼Æ¡AÅÜ¼Æ <varname>$a</varname> ¤]ÀH¤§®ø¥¢¡C­n³]­p¤@­Ó¦³¥Îªº¡B¤£·|¥á¥¢·í«e­p¼Æªº­p¼Æ¨ç¼Æ¡A§Ú­Ì¥i¥H±N <varname>$a</varname>«Å§G¬°ÀRºA¡G
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function Test()
{
    static $a = 0;
    echo $a;
    $a++;
}
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    ²{¦b¡A¨C·í¨ç¼Æ Test() ³Q©I¥s®É¡A¥¦·|¦C¦L¥X <varname>$a</varname> ªº­È¡AµM«á¥[¤W¤@¡C
   </simpara>

   <simpara>
    ÀRºAÅÜ¼Æ¤]´£¨Ñ¤@ºØ³B²z»¼°j¨ç¼Æªº¤èªk¡C»¼°j¨ç¼Æ¬O¤@ºØ©I¥s¦Û¤vªº¨ç¼Æ¡C½s¼g»¼°j¨ç¼Æ®É¥²¶·¯d·N¡A¦]¬°­Y½s¼g¿ù»~¡A¥¦¦³¥i¯à·|µL©w­­¦a»¼°j¡C±z¥²¶·½T©w¨¬°÷ªº¤è¦¡¨Ó²×¤î»¼°j¡C¤U¦CÂ²³æªº¨ç¼Æ±N»¼°j¦a¼Æ¨ì 10¡A§Q¥ÎÀRºAÅÜ¼Æ <varname>$count</varname> ¨ÓÂ_©w¤°»ò®É­Ô°±¤î¡G 
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function Test()
{
    static $count = 0;

    $count++;
    echo $count;
    if ($count < 10) {
        Test ();
    }
    $count--;
}
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    ÅX°Ê <literal>PHP 4</literal> ªº Zend Engine 1 ¬O¥H°Ñ·Óªº¤è¦¡¨Ó¹ê²{ <literal>static</literal> ©M <literal>global</literal> ªº¡C¨Ò¦p¡A¤@­Ó¯u¥¿ªº¥þ°ìÅÜ¼Æ¨Ï¥Î <literal>global</literal> ¤è¦¡¤Þ¶i¤@­Ó¨ç¼Æ½d³ò®É¹ê»Ú¤W´N¬O«Ø¥ß¤F¤@­Ó¥þ°ìÅÜ¼Æªº°Ñ·Ó¡C³o±N¾É­P¤@¨Ç·N·Q¤£¨ìªº¦æ¬°¡A¥¿¦p¤U¦C¨Ò¤l©Ò­z¡G
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function test_global_ref() {
    global $obj;
    $obj = &new stdclass;
}

function test_global_noref() {
    global $obj;
    $obj = new stdclass;
}

test_global_ref();
var_dump($obj);
test_global_noref();
var_dump($obj);
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    °õ¦æ³o­Ó¨Ò¤l±N·|¾É­P¤U¦Cªº¿é¥X¡G
   </simpara>

   <screen>
NULL
object(stdClass)(0) {
}
   </screen>

   <simpara>
    <literal>static</literal> ³¯­z¦¡¤]·|¾É­P¦P¼Ëªº¿é¥X¡C°Ñ·Ó¨Ã¨S¦³³QÀRºA¦aÀx¦s¡G
   </simpara>
   
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function &get_instance_ref() {
    static $obj;

    echo "Static object: ";
    var_dump($obj);
    if (!isset($obj)) {
        // Assign a reference to the static variable
        $obj = &new stdclass;
    }
    $obj->property++;
    return $obj;
}

function &get_instance_noref() {
    static $obj;

    echo "Static object: ";
    var_dump($obj);
    if (!isset($obj)) {
        // Assign the object to the static variable
        $obj = new stdclass;
    }
    $obj->property++;
    return $obj;
}

$obj1 = get_instance_ref();
$still_obj1 = get_instance_ref();
echo "\n";
$obj2 = get_instance_noref();
$still_obj2 = get_instance_noref();
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
   °õ¦æ¦¹¨Ò¤l±N¾É­P¤U¦Cªº¿é¥X¡G
   </simpara>

   <screen>
Static object: NULL
Static object: NULL

Static object: NULL
Static object: object(stdClass)(1) {
  ["property"]=>
  int(1)
}
   </screen>

   <simpara>
    ¤W­z¨Ò¤l¥Ü½d¤F¦b«ü¬£¤@­Ó°Ñ·Óµ¹¤©¤@­ÓÀRºAÅÜ¼Æ«á¡A·í±z²Ä¤G¦¸©I¥s <literal>&amp;get_instance_ref()</literal> ¨ç¼Æ®É¡A¥¦¬O<emphasis>¤£·|</emphasis>°O¦í¤§«eªº­Èªº¡C
   </simpara>


  </sect1>

  <sect1 id="language.variables.variable">
   <title>¥iÅÜÅÜ¼Æ</title>

   <simpara>
    ¦³®É­Ô¡A¥i¥H¨Ï¥Î¥iÅÜÅÜ¼Æ·|¥O¨ì¤u§@§ó¥[¤è«K¡C¤]´N¬O´N¡A¤@­ÓÅÜ¼Æªº¦W¥i¥H³Q°ÊºAªº³]©w©M¨Ï¥Î¡C¤@­Ó´¶³qªºÅÜ¼Æ¬O¥H¤U¦Cªº¤èªk³]©w¡G
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a = "hello";
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    ¤@­Ó¥iÅÜÅÜ¼Æ¬O¥H¥t¤@­ÓÅÜ¼Æªº­È§@¬°¥¦ªºÅÜ¼Æ¦W¡C¦b¤W­z¨Ò¤l¤¤¡A¥u­n¥[¨â­Ó $ ¦b <emphasis>hello</emphasis> ªº«e­±´N¥i§â¥¦·í§@¬O¤@­ÓÅÜ¼Æªº¦W¨Ó¨Ï¥Î¤F¡C§Y¡G
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$$a = "world";
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    ³o®É¡A¦³¨â­ÓÅÜ¼Æ³Q©w¸qµM«áÀx¦s¦b PHP ªº²Å¸¹ªí¤¤¡G§t¦³ "hello" ªº <varname>$a</varname> ¤Î§t¦³ "world" ªº <varname>$hello</varname>¡C©Ò¥H¡A¦¹±Ô­z¡G
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
echo "$a ${$a}";
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    »P¤U¦C³o¥y¦³µÛ¦P¼Ëªº¿é¥X¡G
   </simpara>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
echo "$a $hello";
?>
]]>
    </programlisting>
   </informalexample>

   <simpara>
    §Y¡A¥¦­Ì³£¿é¥X¡G<computeroutput>hello world</computeroutput>¡C
   </simpara>

   <simpara>
    ¬°¤F­n¦b³¯¦C¤¤¨Ï¥Î¥iÅÜÅÜ¼Æ¡A±z¥²¶·­º¥ý¸Ñ¨M¤@­Ó¼Ò½kªº°ÝÃD¡C¤ñ¤è»¡¡A¦pªG±z¨Ï¥Î <varname>$$a[1]</varname>¡A¨º­åªR¾¹¥²¶·ª¾¹D±z¬O·Q·í <varname>$a[1]</varname> ¬OÅÜ¼Æ¨Ó¨Ï¥Î¡AÁÙ¬O·í <varname>$$a</varname> ¬OÅÜ¼Æ¡AµM«á«ü¦V¨º­ÓÅÜ¼Æªº²Ä [1] ­Ó¯Á¤Þ¡C¸Ñ¨M¤W­z¼Ò½k°ÝÃDªº»yªk¬O¡G²Ä¤@­Ó±¡ªp¨Ï¥Î <varname>${$a[1]}</varname>¡B²Ä¤G­Ó±¡ªp¨Ï¥Î <varname>${$a}[1]</varname>¡C
   </simpara>
   
   <warning>
    <simpara>
     ¥²¶·¯d·Nªº¬O¡A¥iÅÜÅÜ¼Æ¬O¤£¯à¨Ï¥Î©ó PHP ªº <link linkend="language.variables.superglobals">Superglobal ³¯¦C</link>¡C³oªí¥Ü±z¤£¯à¨Ï¥Î <varname>${$_GET}</varname> ³o¼Ëªº±Ô­z¡C¦pªG±z¯uªº·Q¨Ï¥Î superglobals ©MÂÂªº <varname>HTTP_*_VARS</varname>¡A±z¥i¥H¹Á¸Õ¥H<link linkend="language.references">°Ñ·Ó</link>ªº¤è¦¡¨Ï¥Î¡C
    </simpara>
   </warning>
  
  </sect1>

  <sect1 id="language.variables.external">
   <title>¨Ó¦Û PHP ¥H¥~ªºÅÜ¼Æ</title>
   
   <sect2 id="language.variables.external.form">
    <title>HTML ªí³æ (GET ©MPOST)</title>

    <simpara>
     ·í¤@¥÷ªí³æ¶Ç°eµ¹ PHP µ{¦¡®É¡Aªí³æ¤ºªº¸ê°T±N¦Û°Ê´£¨Ñµ¹¸Óµ{¦¡¡C§Ú­Ì¦³«Ü¦h¤èªk¦s¨ú³o¨Ç¸ê°T¡A½d¨Ò¡G
    </simpara>

    <para>
     <example>
      <title>¤@­ÓÂ²³æªº HTML ªí³æ</title>
      <programlisting role="html">
<![CDATA[
<form action="foo.php" method="post">
    Name:  <input type="text" name="username"><br>
    Email: <input type="text" name="email"><br>
    <input type="submit" name="submit" value="Submit me!">
</form>
]]>
      </programlisting>
     </example>
    </para>

    <para>
     ®Ú¾Ú±zªº¦w¸Ë¤è¦¡©M­Ó¤H°¾¦n¡APHP ´£¨Ñ¦hºØ¤è¦¡¦s¨ú HTML ªí³æ¤¤ªº¸ê®Æ¡C¤@¨Ç¨Ò¤l¦p¡G
    </para>
    
    <para>
     <example>
      <title>¦s¨ú¤@­Ó¥H POST ¤è¦¡¶Ç°eªºÂ²³æ HTML ªí³æ</title>
      <programlisting role="html">
<![CDATA[
<?php 
// Available since PHP 4.1.0

   print $_POST['username'];
   print $_REQUEST['username'];

   import_request_variables('p', 'p_');
   print $p_username;

// Available since PHP 3. As of PHP 5.0.0, these long predefined
// variables can be disabled with the register_long_arrays directive.

   print $HTTP_POST_VARS['username'];

// Available if the PHP directive register_globals = on.  As of 
// PHP 4.2.0 the default value of register_globals = off.
// Using/relying on this method is not preferred.

   print $username;
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     ¨Ï¥Î GET ¤è¦¡¶Ç°eªºªí³æ¥ÎªkÃþ¦ü¡A¥u¤£¹L¨Ï¥Î¦X¾Aªº¥ý«e©w¸qªº¨ç¼Æ¡CGET ¤]¥i¨Ï¥Î¦b¬d¸ß¦r¦ê (QUERY_STRING) ¡qURL ¤¤°Ý¸¹ '?' «á­±ªº¸ê°T¡r¡C¨Ò¦p¡A<literal>http://www.example.com/test.php?id=3</literal> §t¦³¥H <varname>$_GET['id']</varname> ¤è¦¡¦s¨úªº GET ¸ê®Æ¡C½Ð°Ñ¦Ò <link linkend="reserved.variables.request">$_REQUEST</link> ©M <function>import_request_variables()</function>¡C
    </para>

    <note>
     <para>
      <link linkend="language.variables.superglobals">Superglobal ³¯¦C</link>¦p <varname>$_POST</varname> ¤Î <varname>$_GET</varname> ¦b PHP ª©¥» 4.1.0 ¥H¤W¤~¶}©l´£¨Ñ¡C
     </para>
    </note>

    <para>
     ¤W­±´£¨ì¡A¦b PHP 4.2.0 ¤§«eªºª©¥»¤¤¡A<link linkend="ini.register-globals">register_globals</link> ªº¹w³]­È¬O <emphasis>on</emphasis>¡C¦Ó¦b PHP 3 ¤¤¡A¥¦¥Ã»·¬O on ªº¡C§Ú­Ì«ØÄ³©Ò¦³¨Ï¥ÎªÌ¤£­n¨Ì¿à¦¹«ü¥O¡A¨Ã¦b½s¼g®É±N¥¦·í§@¬O <emphasis>off</emphasis> ¨Ó³]­p±zªºµ{¦¡¡C
    </para>

    <note>
     <para>
      <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> ²ÕºA«ü¥O·|¼vÅT¨ì Get¡APost ©M Cookie ªº­È¡C¦pªG¶}±Ò¦¹«ü¥O¡A(It's "PHP!") ªº­È±NÅÜ¦¨ (It\'s \"PHP!\")¡C¦¹¸õ¥X¤u§@¦b±N¦r¦ê´¡¤J¸ê®Æ®w«e¬O¥²¶·­n°µªº¡C½Ð°Ñ¦Ò <function>addslashes</function>¡A<function>stripslashes</function> ©M <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>¡C
     </para>
    </note>
    
    <simpara>
     PHP ¤]À´±o³B²z³¯¦C¦¡ªºªí³æÅÜ¼Æ¡q½Ð°ÑÆ[¬ÛÃöªº <link linkend="faq.html">FAQ</link>¡r¡C±z¥i¥H±N¬ÛÃöªºÅÜ¼ÆÂkÃþ¡A©Î¥Î¦¹¥\¯à¨Ó¨ú¦^¦h¤¸¿ï¾Ü¿é¤Jªí³æªº­È¡C¦b¤U¦C½d¨Ò¤¤¡A§Ú­Ì±Nªí³æ±i¶K¨ì¥¦¦Û¤v¡A¨Ã¦b¶Ç°e«á§â¸ê®ÆÅã¥Ü¥X¨Ó¡G

    </simpara>

    <para>
     <example>
      <title>§ó½ÆÂøªºªí³æÅÜ¼Æ</title>
      <programlisting role="php">
<![CDATA[
<?php
if ($HTTP_POST_VARS['action'] == 'submitted') {
    print '<pre>';

    print_r($HTTP_POST_VARS);
    print '<a href="'. $HTTP_SERVER_VARS['PHP_SELF'] .'">Please try again</a>';

    print '</pre>';
} else {
?>
<form action="<?php echo $HTTP_SERVER_VARS['PHP_SELF']; ?>" method="post">
    Name:  <input type="text" name="personal[name]"><br>
    Email: <input type="text" name="personal[email]"><br>
    Beer: <br>
    <select multiple name="beer[]">
        <option value="warthog">Warthog</option>
        <option value="guinness">Guinness</option>
        <option value="stuttgarter">Stuttgarter Schwabenbräu</option>
    </select><br>
    <input type="hidden" name="action" value="submitted">
    <input type="submit" name="submit" value="submit me!">
</form>
<?php
}
?>
]]>
      </programlisting>
     </example>
    </para>

    <para>
     PHP 3 ªº³¯¦Cªí³æÅÜ¼Æ¥u¥i¥H¨Ï¥Î¤@ºû³¯¦C¡A¦Ó PHP 4 «h¨S¦³¦¹­­¨î¡C
    </para>

    <sect3 id="language.variables.external.form.submit">
     <title>IMAGE SUBMIT ÅÜ¼Æ¦WºÙ</title>

     <simpara>
      ¦b¶Ç°eªí³æ®É¡A§Ú­Ì¥i¥H¨Ï¥Î¤U¦C¼ÐÅÒ±N¼Ð·Çªº´£¥æÁä¥H¹Ï¹³¨Ó¨ú¥N¡G
     </simpara>

     <informalexample>
      <programlisting role="html">
<![CDATA[
<input type="image" src="image.gif" name="sub">
]]>
      </programlisting>
     </informalexample>

     <simpara>
      ·í¨Ï¥ÎªÌ¦b¹Ï¹³ªº¥ô¦ó¤@³B«ö¤@¤U¡A¦ñÀHªºªí³æ´N·|¶Ç°e¨ì¦øªA¾¹¡AÀH¨ä¦Ó¨ÓÁÙªþ¥[¤F¨â­ÓÅÜ¼Æ¡Asub_x ©M sub_y¡C³o¥]§t¤F¨Ï¥ÎªÌ«ö¦b¹Ï¹³ªº®y¼Ð¡C¦³¸gÅçªº¨Ï¥ÎªÌ©Î³\ª¾¹D¥ÑÂsÄý¾¹¶Ç°e¨ÓªºÅÜ¼Æ¦WºÙÀ³¸Ó¥]§t¥y¸¹¡A¦Ó¤£¬O©³½u¡A¦ý PHP ¦Û°Ê¦a±N¥y¸¹Âà´«¦¨¬°©³½u¡C
     </simpara>
    </sect3>

   </sect2>

   <sect2 id="language.variables.external.cookies">
    <title>HTTP Cookies</title>

    <simpara>
     PHP µ´¹ï¤ä´© <ulink
     url="&spec.cookies;">Netscape³W®æ</ulink>ªº HTTP cookies¡CCookies ¬O¥Î¨Ó±N¸ê®ÆÀx¦s¦b¥Î¤áºÝªºÂsÄý¾¹¤¤¡A¥H«K¤é«á°lÂÜ©ÎÃÑ§Oªð¦^ªº¨Ï¥ÎªÌ¡C±z¥i¥H¥Î <function>setcookie()</function> ¨ç¼Æ¨Ó³]©w cookies¡CCookies ¬O HTTP header ªº¤@³¡¥÷¡A¦]¦¹ SetCookie ¨ç¼Æ¤@©w­n¦b¥ô¦ó¸ê®Æ¶Ç°e¥hÂsÄý¾¹«e©I¥s¡C³o©M <function>header()</function> ¨ç¼Æ¦³µÛ¬Û¦Pªº­­©w¡CCookie ¸ê®Æ¥i¥H¦b <varname>$_COOKIE</varname>¡A<varname>$HTTP_COOKIE_VARS</varname> ¤Î <varname>$_REQUEST</varname> ³¯¦C¤¤¨Ñ¨Ï¥Î¡C¸Ô±¡©M½d¨Ò½Ð°Ñ¦Ò¤â¥Uªº <function>setcookie()</function> ³¡¥÷¡C
    </simpara>

    <simpara>
     ­Y±z­n±N¦h­Ó­È«ü¬£µ¹¤@­Ó cookie ÅÜ¼Æ¡A¨º±z´N­n¨Ï¥Î³¯¦C¨Ó«ü¬£¤F¡C½d¨Ò¡G
    </simpara>

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
  setcookie("MyCookie[foo]", "Testing 1", time()+3600);
  setcookie("MyCookie[bar]", "Testing 2", time()+3600);
?>
]]>
     </programlisting>
    </informalexample>
    
    <simpara>
     ³o±N·|«Ø¥ß¨â­Ó­Ó§Oªº cookies¡A¾¨ºÞ²{¦b MyCookie¦b±zªºµ{¦¡¤¤¬O¤@­Ó³æ¤¸³¯¦C¡C¦pªG±z­n¥H¤@­Ó cookie «Ø¥ß¦h­Ó­È¡A¨º±z¥i¥ý¹ï¨º¨Ç­È¨Ï¥Î <function>serialize()</function> ©Î <function>explode()</function> ¨ç¼Æ¡C
    </simpara>

    <simpara>
     ¦³¤@ÂI¥²¶·¯d·Nªº¬O¡A¤@­Ó cookie ±N·|´À¥NÂsÄý¾¹¤¤¥t¤@­Ó¦P¦Wªº cookie¡A°£«D¸Ó cookie ªº¸ô®|©Îºô°ì¦WºÙ¤£¦P¡C©Ò¥H¡A¦b³]­pÁÊª«¨®µ{¦¡®É¡A±z³Ì¦n«O«ù¤@­Ó­p¼Æ¾¹¡A¨Ã±N¦¹¼Æ¾Ú¶Ç»¼¤U¥h¡A§Y¡G
    </simpara>

    <example>
     <title>¤@­Ó <function>setcookie()</function> ªº½d¨Ò</title>
     <programlisting role="php">
<![CDATA[
<?php
$count++;
setcookie("count", $count, time()+3600);
setcookie("Cart[$count]", $item, time()+3600);
?>
]]>
     </programlisting>
    </example>

   </sect2>

   <sect2 id="language.variables.external.dot-in-names">
    <title>¦bÅÜ¼Æ¦W¦r¤¤ªº¥y¸¹ (dots)</title>

    <para>
     ¤@¯ë¤W¡APHP ¨Ã¤£·|§ó§ï¶Ç¤Jµ{¦¡ªºÅÜ¼Æ¦WºÙ¡CµM¦Ó¡A±z¥²¶·¯d·N¥y¸¹ (.) ¨Ã¤£¬O¤@­Ó¦³®Äªº PHP ÅÜ¼Æ¦WºÙ¦r¤¸¡A¥¿¦p¡G

     <programlisting role="php">
<![CDATA[
<?php
$varname.ext;  /* invalid variable name */
?>
]]>
     </programlisting>
     ³o®É¡A­åªR¾¹¨£¨ìªº¥u¬O¤@­Ó¥s°µ <varname>$varname</varname> ªºÅÜ¼Æ¡A¸òÀHµÛ¦r¦ê³sµ²¹Bºâ¤l (.)¡A¦A¨Ó¬O¤@­ÓµL¤Þ¸¹ªº¦r¦ê¡Gext¡CÅãµM¦a¡A³o¨Ã¤£·|±a¨Ó±z·Q­nªºµ²ªG¡C
    </para>

    <para>
     ¥¿¦]¦p¦¹¡APHP ·|¦Û°Êªº±N¶Ç¤JªºÅÜ¼Æ¦WºÙ¤¤ªº¥y¸¹ (.) §ï¬°©³½u (_)¡C
    </para>

   </sect2>

   <sect2 id="language.variables.determining-type-of">
    <title>§P©wÅÜ¼ÆªºÃþ«¬</title>

    <para>
     ¥Ñ©ó PHP ·|¦Û¦æ§PÂ_ÅÜ¼ÆªºÃþ«¬¡A¨Ã«ö»Ý­nÂàÅÜ¥¦­ÌªºÃþ«¬¡A¦]¦¹¦³®É¤]Ãø¥H©úÅã¦a§P©w¤@­ÓÅÜ¼Æ¦b¬Y­Ó®É¨èªºÃþ«¬¡C¦³Å²©ó¦¹¡APHP ´£¨Ñ¤F´X­Ó§P©wÅÜ¼ÆÃþ«¬ªº¨ç¼Æ¡G<function>gettype()</function>¡B<function>is_array()</function>¡B<function>is_float()</function>¡B<function>is_int()</function>¡B<function>is_object()</function> ¤Î <function>is_string()</function>¡C½Ð°Ñ¾\<link linkend="language.types">Ãþ«¬</link>¤@³¹¡C
    </para>
   </sect2>

  </sect1>
     
 </chapter>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->