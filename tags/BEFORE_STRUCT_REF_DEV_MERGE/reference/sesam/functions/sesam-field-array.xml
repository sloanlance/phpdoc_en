<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<refentry xml:id="function.sesam-field-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sesam_field_array</refname>
  <refpurpose>Return meta information about individual columns in a result</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>sesam_field_array</methodname>
   <methodparam><type>string</type><parameter>result_id</parameter></methodparam>
  </methodsynopsis>
  <para>
   Returns a mixed associative/indexed array with meta information (column
   name, type, precision, ...) about individual columns of the result after
   the query associated with <parameter>result_id</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result_id</parameter></term>
     <listitem>
      <para>
       A valid result id returned by <function>sesam_query</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <table>
    <title>
     Mixed result set returned by <function>sesam_field_array</function>
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Array Element</entry>
       <entry>Contents</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>int $arr["count"]</entry>
       <entry>
        Total number of columns in result set (or zero if this was
        an "immediate" query).  SESAM "multiple fields" are
        "inlined" and treated like the respective number of columns.
       </entry>
      </row>
      <row>
       <entry>string $arr[col]["name"]</entry>
       <entry>
        column name for column(<literal>col</literal>), where
        <literal>col</literal> is between 0 and
        <literal>$arr["count"]-1</literal>. The returned value can
        be the empty string (for dynamically computed
        columns). SESAM "multiple fields" are "inlined" and treated
        like the respective number of columns, each with the same
        column name.
       </entry>
      </row>
      <row>
       <entry>string $arr[col]["count"]</entry>
       <entry>
        The "count" attribute describes the repetition factor when
        the column has been declared as a "multiple field". Usually,
        the "count" attribute is 1. The first column of a "multiple
        field" column however contains the number of repetitions
        (the second and following column of the "multiple field"
        contain a "count" attribute of 1). This can be used to
        detect "multiple fields" in the result set. See the example
        shown in the <function>sesam_query</function> description
        for a sample use of the "count" attribute.
       </entry>
      </row>
      <row>
       <entry>string $arr[col]["type"]</entry>
       <entry><para>
        PHP variable type of the data for
        column(<literal>col</literal>), where <literal>col</literal>
        is between 0 and <literal>$arr["count"]-1</literal>. The
        returned value can be one of
         <itemizedlist>
          <listitem>
           <simpara><type>integer</type></simpara>
          </listitem>
          <listitem>
           <simpara><type>float</type></simpara>
          </listitem>
          <listitem>
           <simpara><type>string</type></simpara>
          </listitem>
         </itemizedlist>
        depending on the SQL type of the result.  SESAM "multiple
        fields" are "inlined" and treated like the respective number
        of columns, each with the same PHP type.
        </para>
       </entry>
      </row>
      <row>
       <entry>string $arr[col]["sqltype"]</entry>
       <entry><para>
        SQL variable type of the column data for
        column(<literal>col</literal>), where <literal>col</literal>
        is between 0 and <literal>$arr["count"]-1</literal>. The
        returned value can be one of
         <itemizedlist>
          <listitem>
           <simpara>"CHARACTER"</simpara>
          </listitem>
          <listitem>
           <simpara>"VARCHAR"</simpara>
          </listitem>
          <listitem>
           <simpara>"NUMERIC"</simpara>
          </listitem>
          <listitem>
           <simpara>"DECIMAL"</simpara>
          </listitem>
          <listitem>
           <simpara>"INTEGER"</simpara>
          </listitem>
          <listitem>
           <simpara>"SMALLINT"</simpara>
          </listitem>
          <listitem>
           <simpara>"FLOAT"</simpara>
          </listitem>
          <listitem>
           <simpara>"REAL"</simpara>
          </listitem>
          <listitem>
           <simpara>"DOUBLE"</simpara>
          </listitem>
          <listitem>
           <simpara>"DATE"</simpara>
          </listitem>
          <listitem>
           <simpara>"TIME"</simpara>
          </listitem>
          <listitem>
           <simpara>"TIMESTAMP"</simpara>
          </listitem>
         </itemizedlist>
        describing the SQL type of the result.  SESAM "multiple
        fields" are "inlined" and treated like the respective number
        of columns, each with the same SQL type.
        </para>
       </entry>
      </row>
      <row>
       <entry>string $arr[col]["length"]</entry>
       <entry>
        The SQL "length" attribute of the SQL variable in
        column(<literal>col</literal>), where <literal>col</literal>
        is between 0 and <literal>$arr["count"]-1</literal>. The
        "length" attribute is used with "CHARACTER" and "VARCHAR"
        SQL types to specify the (maximum) length of the string
        variable.  SESAM "multiple fields" are "inlined" and treated
        like the respective number of columns, each with the same
        length attribute.
       </entry>
      </row>
      <row>
       <entry>string $arr[col]["precision"]</entry>
       <entry>
        The "precision" attribute of the SQL variable in
        column(<literal>col</literal>), where <literal>col</literal>
        is between 0 and <literal>$arr["count"]-1</literal>. The
        "precision" attribute is used with numeric and time data
        types.  SESAM "multiple fields" are "inlined" and treated
        like the respective number of columns, each with the same
        precision attribute.
       </entry>
      </row>
      <row>
       <entry>string $arr[col]["scale"]</entry>
       <entry>
        The "scale" attribute of the SQL variable in
        column(<literal>col</literal>), where <literal>col</literal>
        is between 0 and <literal>$arr["count"]-1</literal>. The
        "scale" attribute is used with numeric data types.  SESAM
        "multiple fields" are "inlined" and treated like the
        respective number of columns, each with the same scale
        attribute.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sesam_query</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
