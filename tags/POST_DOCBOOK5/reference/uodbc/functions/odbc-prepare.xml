<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./en/functions/uodbc.xml, last change in rev 1.5 -->
<refentry xml:id="function.odbc-prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>odbc_prepare</refname>
  <refpurpose>Prepares a statement for execution</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>resource</type><methodname>odbc_prepare</methodname>
   <methodparam><type>resource</type><parameter>connection_id</parameter></methodparam>
   <methodparam><type>string</type><parameter>query_string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Returns &false; on error.
  </para>
  <para>
   Returns an ODBC result identifier if the SQL command was prepared
   successfully.  The result identifier can be used later to execute
   the statement with <function>odbc_execute</function>.
  </para>
  <para>
   Some databases (such as IBM DB2, MS SQL Server, and Oracle) support
   stored procedures that accept parameters of type IN, INOUT, and OUT as
   defined by the ODBC specification.  However, the Unified ODBC driver
   currently only supports parameters of type IN to stored procedures.
  </para>
  <para>
   In the following code, <varname>$res</varname> will only be
   valid if all three parameters to myproc are IN parameters:
   <programlisting role='php'>
<![CDATA[<?php
$a = 1;
$b = 2;
$c = 3;
$stmt = odbc_prepare($conn, 'CALL myproc(?,?,?)');
$res = odbc_execute($stmt, array($a, $b, $c));
?>
]]>
   </programlisting>
   If you need to call a stored procedure using INOUT or OUT parameters,
   the recommended workaround is to use a native extension for your database
   (for example, <link linkend='ref.mssql'>mssql</link> for MS SQL Server,
   or <link linkend='ref.mssql'>oci8</link> for Oracle).
  </para>

 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
