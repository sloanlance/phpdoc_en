<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13 $ -->
<refentry id="function.mysqli-stmt-bind-param">
 <refnamediv>
  <refname>mysqli_stmt_bind_param</refname>
  <refname>stmt->bind_param</refname>
  <refpurpose>Binds variables to a prepared statement as parameters</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <para>Procedural style:</para>
  <methodsynopsis>
   <type>bool</type><methodname>mysqli_stmt_bind_param</methodname>
   <methodparam><type>mysqli_stmt</type><parameter>stmt</parameter></methodparam>
   <methodparam><type>string</type><parameter>types</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">var1</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
  </methodsynopsis>
  <para>Object oriented style (method):</para>
  <classsynopsis>
   <ooclass><classname>mysqli_stmt</classname></ooclass>
   <methodsynopsis>
    <type>bool</type><methodname>bind_param</methodname>
    <methodparam><type>string</type><parameter>types</parameter></methodparam>
    <methodparam><type>mixed</type><parameter role="reference">var1</parameter></methodparam>
    <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   <function>mysqli_stmt_bind_param</function> is used to bind variables for the
   parameter markers in the SQL statement that was passed to
   <function>mysqli_prepare</function>. 
   The string <parameter>types</parameter> contains one or more characters which specify
   the types for the corresponding bind variables
   <table>
    <title>Type specification chars</title>
    <tgroup cols='2'>
     <thead>
      <row>
       <entry>Character</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>i</entry>
       <entry>corresponding variable has type integer</entry>
      </row>
      <row>
       <entry>d</entry>
       <entry>corresponding variable has type double</entry>
      </row>
      <row>
       <entry>s</entry>
       <entry>corresponding variable has type string</entry>
      </row>
      <row>
       <entry>b</entry>
       <entry>corresponding variable is a blob and will be sent in packets</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <note>
    <para>
     If data size of a variable exceeds max. allowed packet size
     (max_allowed_packet), you have to specify <literal>b</literal> in 
     <parameter>types</parameter> and use
     <function>mysqli_stmt_send_long_data</function> to send the data in packets.
    </para>
    <para>
     The number of variables and length of
     string <parameter>types</parameter> must match the parameters in the statement.
   </para>
  </note>
 </refsect1>
 <refsect1>
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1>
 &reftitle.seealso;
  <para>
   <function>mysqli_stmt_bind_result</function>,
   <function>mysqli_stmt_execute</function>,
   <function>mysqli_stmt_fetch</function>,
   <function>mysqli_prepare</function>,
   <function>mysqli_stmt_send_long_data</function>,
   <function>mysqli_stmt_errno</function>&listendand;
   <function>mysqli_stmt_error</function>.
  </para>
 </refsect1>
 <refsect1>
  &reftitle.examples;
  <example>
   <title>Object oriented style</title>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli('localhost', 'my_user', 'my_password', 'world');

/* check connection */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$stmt = $mysqli->prepare("INSERT INTO CountryLanguage VALUES (?, ?, ?, ?)");
$stmt->bind_param('sssd', $code, $language, $official, $percent);

$code = 'DEU';
$language = 'Bavarian';
$official = "F";
$percent = 11.2;

/* execute prepared statement */
$stmt->execute();

printf("%d Row inserted.\n", $stmt->affected_rows);

/* close statement and connection */
$stmt->close();

/* Clean up table CountryLanguage */
$mysqli->query("DELETE FROM CountryLanguage WHERE Language='Bavarian'");
printf("%d Row deleted.\n", $mysqli->affected_rows);

/* close connection */
$mysqli->close();
?>
]]>
  </programlisting>
  </example>
  <example>
   <title>Procedural style</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect('localhost', 'my_user', 'my_password', 'world');

/* check connection */
if (!$link) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$stmt = mysqli_prepare($link, "INSERT INTO CountryLanguage VALUES (?, ?, ?, ?)");
mysqli_stmt_bind_param($stmt, 'sssd', $code, $language, $official, $percent);

$code = 'DEU';
$language = 'Bavarian';
$official = "F";
$percent = 11.2;

/* execute prepared statement */
mysqli_stmt_execute($stmt);

printf("%d Row inserted.\n", mysqli_stmt_affected_rows($stmt));

/* close statement and connection */
mysqli_stmt_close($stmt);

/* Clean up table CountryLanguage */
mysqli_query($link, "DELETE FROM CountryLanguage WHERE Language='Bavarian'");
printf("%d Row deleted.\n", mysqli_affected_rows($link));

/* close connection */
mysqli_close($link);
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
1 Row inserted.
1 Row deleted.
]]>
  </screen>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
