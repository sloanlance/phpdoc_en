<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./en/functions/image.xml, last change in rev 1.36 -->
 <refentry id="function.imagecopyresized">
  <refnamediv>
   <refname>imagecopyresized</refname>
   <refpurpose>Copy and resize part of an image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <methodsynopsis>
    <type>bool</type><methodname>imagecopyresized</methodname>
    <methodparam><type>resource</type><parameter>dst_image</parameter></methodparam>
    <methodparam><type>resource</type><parameter>src_image</parameter></methodparam>
    <methodparam><type>int</type><parameter>dst_x</parameter></methodparam>
    <methodparam><type>int</type><parameter>dst_y</parameter></methodparam>
    <methodparam><type>int</type><parameter>src_x</parameter></methodparam>
    <methodparam><type>int</type><parameter>src_y</parameter></methodparam>
    <methodparam><type>int</type><parameter>dst_w</parameter></methodparam>
    <methodparam><type>int</type><parameter>dst_h</parameter></methodparam>
    <methodparam><type>int</type><parameter>src_w</parameter></methodparam>
    <methodparam><type>int</type><parameter>src_h</parameter></methodparam>
   </methodsynopsis>
   <para>
    <function>imagecopyresized</function> copies a rectangular
    portion of one image to another image.
    <parameter>dst_image</parameter> is the destination image,
    <parameter>src_image</parameter> is the source image identifier.
    If the source and destination coordinates and width and heights
    differ, appropriate stretching or shrinking of the image fragment
    will be performed. The coordinates refer to the upper left
    corner. This function can be used to copy regions within the
    same image (if <parameter>dst_image</parameter> is the same as
    <parameter>src_image</parameter>) but if the regions overlap the
    results will be unpredictable.
   </para>
   <note>
    <para>
     There is a problem due to palette image limitations (255+1 colors).
     Resampling or filtering an image commonly needs more colors than 255, a
     kind of approximation is used to calculate the new resampled pixel and its
     color.  With a palette image we try to allocate a new color, if that
     failed, we choose the closest (in theory) computed color.  This is
     not always the closest visual color. That may produce a weird result, like
     blank (or visually blank) images.  To skip this problem, please use a 
     truecolor image as a destination image, such as one created by 
     <function>imagecreatetruecolor</function>.
    </para>
   </note>
  </refsect1>

  <refsect1>
   &reftitle.examples;
   <para>
    <example>
     <title>Resizing an image</title>
     <para>
      This example will display the image at half size.
     </para>
     <programlisting role="php">
<![CDATA[
<?php
// File and new size
$filename = 'test.jpg';
$percent = 0.5;

// Content type
header('Content-type: image/jpeg');

// Get new sizes
list($width, $height) = getimagesize($filename);
$newwidth = $width * $percent;
$newheight = $height * $percent;

// Load
$thumb = imagecreatetruecolor($newwidth, $newheight);
$source = imagecreatefromjpeg($filename);

// Resize
imagecopyresized($thumb, $source, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);

// Output
imagejpeg($thumb);
?>
]]>
     </programlisting>
     <para>
      The image will be output at half size, though better
      quality could be obtained using <function>imagecopyresampled</function>.
     </para>
    </example>
   </para>
  </refsect1>

  <refsect1>
   &reftitle.seealso;
   <para>
    <function>imagecopyresampled</function>
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
