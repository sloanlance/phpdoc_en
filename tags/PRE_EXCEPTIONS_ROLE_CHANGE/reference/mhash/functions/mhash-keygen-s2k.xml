<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/mhash.xml, last change in rev 1.7 -->
  <refentry id="function.mhash-keygen-s2k">
   <refnamediv>
    <refname>mhash_keygen_s2k</refname>
    <refpurpose>Generates a key</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>mhash_keygen_s2k</methodname>
      <methodparam><type>int</type><parameter>hash</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam><type>string</type><parameter>salt</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytes</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mhash_keygen_s2k</function> generates a key that is
     <parameter>bytes</parameter> long, from a user given password.
     This is the Salted S2K algorithm as specified in the OpenPGP
     document (RFC 2440). That algorithm will use the specified
     <parameter>hash</parameter> algorithm to create the key.
     The <parameter>salt</parameter> must be different and random
     enough for every key you generate in order to create different keys.
     That salt must be known when you check the keys, thus it is
     a good idea to append the key to it. Salt has a fixed length
     of 8 bytes and will be padded with zeros if you supply less bytes.
    </para>
    <para>
     Keep in mind that user supplied passwords are not really suitable
     to be used as keys in cryptographic algorithms, since users normally
     choose keys they can write on keyboard. These passwords use
     only 6 to 7 bits per character (or less). It is highly recommended
     to use some kind of transformation (like this function) to the user 
     supplied key.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
