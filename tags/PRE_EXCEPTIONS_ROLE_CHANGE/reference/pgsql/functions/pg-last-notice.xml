<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.82 -->
<refentry id="function.pg-last-notice">
 <refnamediv>
  <refname>pg_last_notice</refname> 
  <refpurpose>
   Returns the last notice message from PostgreSQL server
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>pg_last_notice</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_last_notice</function> returns the last notice
   message from the PostgreSQL server on the specified
   <parameter>connection</parameter>. The PostgreSQL server sends notice
   messages in several cases, for instance when creating a <literal>SERIAL</literal>
   column in a table.
  </para>
  <para>
   With <function>pg_last_notice</function>, you can avoid issuing useless
   queries by checking whether or not the notice is related to your transaction.
  </para>
  <warning>
   <para>
    This function is EXPERIMENTAL and it is not fully implemented
    yet. <function>pg_last_notice</function> was added in PHP
    4.0.6. However, PHP 4.0.6 has problem with notice message
    handling. Use of the PostgreSQL module with PHP 4.0.6 is not
    recommended even if you are not using
    <function>pg_last_notice</function>.
   </para>
   <para>
    This function is fully implemented in PHP 4.3.0. PHP earlier than
    PHP 4.3.0 ignores database connection parameter.
   </para>
  </warning>
  <para>
   Notice message tracking can be set to optional by setting 1 for
   <literal>pgsql.ignore_notice</literal> in &php.ini; from PHP 4.3.0.
  </para>
  <para>
   Notice message logging can be set to optional by setting 0 for
   <literal>pgsql.log_notice</literal> in &php.ini; from PHP 4.3.0.
   Unless <literal>pgsql.ignore_notice</literal> is set
   to 0, notice message cannot be logged.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       PostgreSQL database connection resource.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   A <type>string</type> containing the last notice on the 
   given <parameter>connection</parameter>, or &false; on error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_last_error</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
  $pgsql_conn = pg_connect("dbname=mark host=localhost");
  
  $res = pg_query("CREATE TABLE test (id SERIAL)");
  
  $notice = pg_last_notice($pgsql_conn);
  
  echo $notice;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
CREATE TABLE will create implicit sequence "test_id_seq" for "serial" column "test.id"
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_query</function></member>
    <member><function>pg_last_error</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
