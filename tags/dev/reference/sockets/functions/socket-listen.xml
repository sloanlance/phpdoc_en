<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/sockets.xml, last change in rev 1.1 -->
  <refentry id="function.socket-listen">
   <refnamediv>
    <refname>socket_listen</refname>
    <refpurpose>Listens for a connection on a socket</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>socket_listen</methodname>
      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>backlog</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     After the socket <parameter>socket</parameter> has been created
     using <function>socket_create</function> and bound to a name with
     <function>socket_bind</function>, it may be told to listen for incoming
     connections on <parameter>socket</parameter>.
    </para>
    <para>
     A maximum of <parameter>backlog</parameter> incoming connections will be
     queued for processing. If a connection request arrives with the queue
     full the client may receive an error with an indication of
     <literal>ECONNREFUSED</literal>, or, if the underlying protocol supports
     retransmission, the request may be ignored so that retries may succeed.
    </para>
    <note>
     <para>
      The maximum number passed to the <parameter>backlog</parameter>
      parameter highly depends on the underlying platform. On linux, it is
      silently truncated to <constant>SOMAXCONN</constant>. On win32, if
      passed <constant>SOMAXCONN</constant>, the underlying service provider
      responsible for the socket will set the backlog to a maximum
      <emphasis>reasonable</emphasis> value. There is no standard provision to
      find out the actual backlog value on this platform.
     </para>
    </note>
    <para>
     <function>socket_listen</function> is applicable only to sockets of
     type <constant>SOCK_STREAM</constant> or
     <constant>SOCK_SEQPACKET</constant>.
    </para>
    <para>
     &return.success; The error code can be retrieved with
     <function>socket_last_error</function>. This code may be passed to
     <function>socket_strerror</function> to get a textual explanation of the
     error.
    </para>
    <para>
     See also
     <function>socket_accept</function>,
     <function>socket_bind</function>,
     <function>socket_connect</function>,
     <function>socket_create</function> and
     <function>socket_strerror</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
