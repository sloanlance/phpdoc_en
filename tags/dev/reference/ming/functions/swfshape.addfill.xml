<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/ming.xml, last change in rev 1.24 -->
  <refentry id="function.swfshape.addfill">
   <refnamediv>
    <refname>SWFShape->addFill</refname>
    <refpurpose>Adds a solid fill to the shape.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>void</type><methodname>swfshape->addfill</methodname>
      <methodparam><type>int</type><parameter>red</parameter></methodparam>
      <methodparam><type>int</type><parameter>green</parameter></methodparam>
      <methodparam><type>int</type><parameter>blue</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>a</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
     <methodsynopsis>
      <type>void</type><methodname>swfshape->addfill</methodname>
      <methodparam><type>SWFbitmap</type><parameter>bitmap</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
     <methodsynopsis>
      <type>void</type><methodname>swfshape->addfill</methodname>
      <methodparam><type>SWFGradient</type><parameter>gradient</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
    <para>
     <function>swfshape->addfill</function> adds a solid fill to the shape's list 
     of fill styles. <function>swfshape->addfill</function> accepts three different
     types of arguments.
    </para>
    <para>
     <parameter>red</parameter>, <parameter>green</parameter>, <parameter>blue</parameter>
     is a color (RGB mode). Last parameter <parameter>a</parameter> is optional.
    </para>
    <para>
     The <parameter>bitmap</parameter> argument is an <function>swfbitmap</function> object.
     The <parameter>flags</parameter> argument can be one
     of the following values : SWFFILL_CLIPPED_BITMAP or SWFFILL_TILED_BITMAP. 
     Default is SWFFILL_TILED_BITMAP. I think. 
    </para>
    <para>
     The <parameter>gradient</parameter> argument is an <function>swfgradient</function> 
     object. The flags argument can be one of the following values :  
     SWFFILL_RADIAL_GRADIENT or SWFFILL_LINEAR_GRADIENT. Default is 
     SWFFILL_LINEAR_GRADIENT. I'm sure about this one. Really. 
    </para>
    <para>
     <function>swfshape->addfill</function> returns an <function>swffill</function>
     object for use with the <function>swfshape->setleftfill</function> 
     and <function>swfshape->setrightfill</function> functions 
     described below. 
    </para>
    <simpara>
     See also
     <function>swfshape->setleftfill</function> and
     <function>swfshape->setrightfill</function>.
    </simpara>
    <para>
     This simple example will draw a frame on a bitmap. Ah, here's another buglet in 
     the flash player- it doesn't seem to care about the second shape's bitmap's
     transformation in a morph. According to spec, the bitmap should stretch 
     along with the shape in this example.. 
     <example>
      <title><function>swfshape->addfill</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php

  $p = new SWFMorph();

  $b = new SWFBitmap("alphafill.jpg");
  // use your own bitmap
  $width = $b->getWidth();
  $height = $b->getHeight();

  $s = $p->getShape1();
  $f = $s->addFill($b, SWFFILL_TILED_BITMAP);
  $f->moveTo(-$width/2, -$height/4);
  $f->scaleTo(1.0, 0.5);
  $s->setLeftFill($f);
  $s->movePenTo(-$width/2, -$height/4);
  $s->drawLine($width, 0);
  $s->drawLine(0, $height/2);
  $s->drawLine(-$width, 0);
  $s->drawLine(0, -$height/2);

  $s = $p->getShape2();
  $f = $s->addFill($b, SWFFILL_TILED_BITMAP);

  // these two have no effect!
  $f->moveTo(-$width/4, -$height/2);
  $f->scaleTo(0.5, 1.0);

  $s->setLeftFill($f);
  $s->movePenTo(-$width/4, -$height/2);
  $s->drawLine($width/2, 0);
  $s->drawLine(0, $height);
  $s->drawLine(-$width/2, 0);
  $s->drawLine(0, -$height);

  $m = new SWFMovie();
  $m->setDimension($width, $height);
  $i = $m->add($p);
  $i->moveTo($width/2, $height/2);

  for($n=0; $n<1.001; $n+=0.03)
  {
    $i->setRatio($n);
    $m->nextFrame();
  }

  header('Content-type: application/x-shockwave-flash');
  $m->output();
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
