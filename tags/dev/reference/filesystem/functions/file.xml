<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
  <refentry id="function.file">
   <refnamediv>
    <refname>file</refname> 
    <refpurpose>Reads entire file into an array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>file</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
     </methodsynopsis>
    <para> 
     Identical to <function>readfile</function>, except that
     <function>file</function> returns the file in an array. Each
     element of the array corresponds to a line in the file, with the
     newline still attached.
    </para>
    <note>
     <para>
      Each line in the resulting array will include the line ending, so you
      still need to use <function>trim</function> if you do not want the line
      ending present.
     </para>
    </note>
    <para>
     You can use the optional second parameter and set it to "1", if
     you want to search for the file in the <link
     linkend="ini.include-path">include_path</link>, too.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// get a web page into an array and print it out
$fcontents = file ('http://www.example.com/');
while (list ($line_num, $line) = each ($fcontents)) {
    echo "<b>Line $line_num:</b>; ", htmlspecialchars ($line), "<br>\n";
}

// get a web page into a string
$fcontents = implode ('', file ('http://www.example.com/'));
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      As of PHP 4.3.0 you can use <function>file_get_contents</function> to
      return the contents of a file as a string in a binary safe manner.
     </para>
    </note>
    &note.not-bin-safe;
    &tip.fopen-wrapper;
    <para> 
     See also <function>readfile</function>,
     <function>fopen</function>, <function>fsockopen</function>, and
     <function>popen</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
